#!/bin/bash
#
# write by Aguy


####################################  MAIN

! type _menu &>/dev/null && ! [ -f $S_GLOBAL_FUNCTIONS ] && echo -e "\e[1;31mUnable to load file '/usr/local/bs/inc-functions'${cclear} from ${BASH_SOURCE[0]}\e[0;0m" && exit 1
. $S_GLOBAL_FUNCTIONS

ctid=$1
ctip=${_VM_IP_BASE}.$ctid
_PART="ct-postfix-vmailmanage-conf"
S_FILE_INSTALL_DONE="$S_PATH_LOG_INSTALL/install.done"

_echoT "\n==========================================  $S_RELEASE $_PART"

# test ctid
[ "${S_SERVICE[mail]/$ctip/" == "${S_SERVICE[mail]}}" ] && _ask "${redb}the container from you install the MAIL server: $ctid, is not the default configured, please update file '${S_SERVICE[mail]}'${cclear}"

dbhost=$(cut -d'|' -f1 <<< $2)
dbname=$(cut -d'|' -f2 <<< $2)
dbuser=$(cut -d'|' -f3 <<< $2)
dbpwd=$(cut -d'|' -f4 <<< $2)

! [[ "$dbhost" && "$dbname" && "$dbuser" && "$dbpwd" ]] && _exite "Wrong options for '$2'"

# asks
_ask "Give password for remote connection to MariaDB for user 'roothost'"
pwdroothost=$_ANSWER

while ! [ "$(mysql -h$dbhost -uroothost -p$pwdroothost -e "SELECT user FROM mysql.user" 2>/dev/null)" ]; do
	_echoE "${redb}Unable to connect to database whith options: host=$dbhost user=roothost pass=$pwdroothost${cclear}"
	_ask "Give password for remote connection to MariaDB with user 'roothost'"
	pwdroothost=$_ANSWER
done

_echoT "----------  mail domain $S_DOMAIN_FQDN"

[ "$_VMAIL_NAME" == "vmailmanage" ] && _eval "mysql -h$dbhost -u$dbuser -p$dbpwd $dbname -e \"insert into domains (domain) values ('$S_DOMAIN_FQDN');\""


_echoT "----------  mail user postmaster@$S_DOMAIN_FQDN"

_echoE "Please Give the password of user postmaster@$S_DOMAIN_FQDN :"

pwdhash="$(doveadm pw -s SHA512-CRYPT)"
_eval "mysql -h$dbhost -u$dbuser -p$dbpwd $dbname -e \"insert into accounts (username, domain, password, quota, enabled, sendonly) values ('postmaster', '$S_DOMAIN_FQDN', '$pwdhash', 2048, true, false);\""


_echoT "----------  mail alias webmaster -> postmaster @$S_DOMAIN_FQDN"

_eval "mysql -h$dbhost -u$dbuser -p$dbpwd $dbname -e \"insert into aliases (source_username, source_domain, destination_username, destination_domain, enabled) values ('webmaster', '$S_DOMAIN_FQDN', 'postmaster', '$S_DOMAIN_FQDN', true);\""


_echoT "----------  mail security options @$S_DOMAIN_FQDN"

_echo "${yellow}none${white}: Don’t use encryption
${yellow}may${white}: Encrypt, if supported by other server. Self-signed certificates are accepted, because there is no certificate verification.
${yellow}encrypt${white}: Always encrypt. Self-signed certificates are accepted, because there is no certificate verification.
${yellow}dane${white}: If there are valid TLSA-records in the DNS, encryption is mandatory. The certificate is then verified via DANE. If invalid TLSA records are found, fallback is “encrypt”. If no TLSA-records are found, fallback is “may”.
${yellow}dane-only${white}: Encrypted connections only. Certificate verification via DANE. No fallback to weaker methods.
${yellow}verify${white}: Encrypted connections only. Certificate must be issued by an accepted CA. Hostname given in MX record must match hostname in certificate.
${yellow}secure${white}: Encrypted connections only. Certificate must be issued by an accepted CA. Hostname in certificate must by domain or subdomain of e-mail domain. No DNS used."

_echo "--------------"
PS3="Select policy of security"
options="none may encrypt dane dane-only verify secure"
select opt in ${options}; do
if [ "${options/$opt/}" != "$options" ]; then
	_eval "mysql -h$dbhost -u$dbuser -p$dbpwd $dbname -e \"insert into tlspolicies (domain, policy) values ('$S_DOMAIN_FQDN', '$opt');\""
	break
else
	echo -e "${red}Veuillez saisir une option valide${white}"
fi
done

_echoT "----------  end"

_eval "ssh root@${ctip} '! grep -q ^${_PART}$ ${S_FILE_INSTALL_DONE} && echo $_PART >> ${S_FILE_INSTALL_DONE}'"


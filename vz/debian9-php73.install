#!/bin/bash
#
# write by Aguy


_echoT "\n==========================================  $_RELEASE $_PART"

#php_version=`php --version|sed -n 's/^PHP \([0-9]\.[0-9]\).*/\1/;1p'`
php_version=7.3
phpfpm_service="php${php_version}-fpm"

_echoT "------------------ file required"
file_xtra_xdebug="${S_PATH_INSTALL_CONF}/php/xdebug.ini"
file_xtra_zenddebug="${S_PATH_INSTALL_CONF}/php/zend_debugger.ini"
file_xtra_fpm_apache="${S_PATH_INSTALL_CONF}/php/${phpfpm_service}.conf"
file_conf_apache="$S_PATH_CONF/debian9-apache.conf"
file_xtra_nextcloud=${S_PATH_INSTALL_CONF}/rsyslog/vm-php-fpm.conf

files="$file_xtra_xdebug $file_xtra_zenddebug $file_xtra_zenddebug $file_xtra_fpm_apache $file_conf_apache $file_xtra_nextcloud"
for file in $files; do [ ! -f "$file" ] && _exite "Unable to find file: '$file'"; done

####################################  CTID

if [ "$S_SERVER_TYPE" = vz ]; then
	_echoT "----------  ${S_SERVICE_IPS['http']}"

	# test ctid
	[ "${S_SERVICE_IPS['http']/$_IPTHIS/}" = "${S_SERVICE_IPS['http']}" ] && _askno "This container is not one of the default declared for www\nConfirm or answer 'n' to exit"
	[ "$_ANSWER" = "n" ] && _exit
fi

####################################  FUNCTION


####################################  MAIN

_echoT "------------------ fileconf source"
. "${S_PATH_CONF}/${S_RELEASE}-apache.conf" # include apache conf
[ -f "$S_FILE_INSTALL_CONF" ] && . "$S_FILE_INSTALL_CONF"


_echoT "------------------ data"

modules_tmp="php-curl php-gd php-geoip php-imagick php-json php-mbstring php-mcrypt php-redis php-pear php-mysql php-pgsql php-sqlite3 phpunit phpunit-git php-xml php-zip php-xdebug"


[ -z ${_PATH_PHP+x} ] && anstmp="$S_VM_PATH_SHARE/php/default" && _askno "path for PHP ($anstmp)" && _PATH_PHP=${_ANSWER:-$anstmp} && _confset _PATH_PHP "$_PATH_PHP"

[ -z ${_PHPMODE+x} ] && _menu "Mode for php" php-fpm libapache2-mod-php && _PHPMODE=$_ANSWER &&  _confset _PHPMODE "$_PHPMODE"

[ -z ${_PHPMODULES+x} ] && _menur "Select modules to install" $modules_tmp && _PHPMODULES="$_ANSWER" && _confset _PHPMODULES "$_PHPMODULES"

[ "${_PHPMODULES/php-redis/}" != "$_PHPMODULES" ] && [ -z ${_PHPREDIS+x} ] && anstmp="y" && _askno "Do you want use redis for session handler ($anstmp)" && _PHPREDIS=${_ANSWER:-$anstmp} && _PHPREDIS=${_PHPREDIS/n/} && _confset _PHPREDIS "$_PHPREDIS"

[ -z ${_PHPUSAGE+x} ] && _menu "Usage for php server PROduction or DEVelopement" pro dev && _PHPUSAGE=$_ANSWER &&  _confset _PHPUSAGE "$_PHPUSAGE"

[ -z ${_PHPDEBUG+x} ] && _menu "Debugger to use" off xdebug zend_debugger && _PHPDEBUG=$_ANSWER && _confset _PHPDEBUG "$_PHPDEBUG"

[ -z ${_LIBSSLREQ+x} ] && anstmp='1.0.0' && _askno "Give the version of libssl required by ZendDebugger ($anstmp)" && _LIBSSLREQ=${_ANSWER:-$anstmp} && _confset _LIBSSLREQ "$_LIBSSLREQ"

[ -z ${_LIBSSL+x} ] && anstmp='1.0.2' && _askno "Give the version of libssl to install ($anstmp)" && _LIBSSL=${_ANSWER:-$anstmp} && _confset _LIBSSL "$_LIBSSL"

if [ "$_PHPMODE" = "php-fpm" ]; then

	_echo "Parameters for global php-fpm:"

	[ -z ${_RESTART_THRESHOLD+x} ] && anstmp='10' && _askno "Give value for 'emergency_RESTART_THRESHOLD' ($anstmp)" && _RESTART_THRESHOLD=${_ANSWER:-$anstmp} && _confset _RESTART_THRESHOLD "$_RESTART_THRESHOLD"

	[ -z ${_RESTART_INTERVAL+x} ] && anstmp='1' && _askno "Give value for 'emergency_RESTART_INTERVAL' ($anstmp)mn" && _RESTART_INTERVAL=${_ANSWER:-$anstmp} && _confset _RESTART_INTERVAL "$_RESTART_INTERVAL"

	[ -z ${_CONTROL_TIMEOUT+x} ] && anstmp='10' && _askno "Give value for 'process_CONTROL_TIMEOUT' ($anstmp)s" && _CONTROL_TIMEOUT=${_ANSWER:-$anstmp} && _confset _CONTROL_TIMEOUT "$_CONTROL_TIMEOUT"

	_echoi "the default values comes bellow are for a non intensive usage, a non used default localhost\nVirtualhost are to be used instead"

	[ -z ${_WWW_MAX_CHILDREN+x} ] && anstmp='3' && _askno "Give value for 'pm.max_children' ($anstmp)" && _WWW_MAX_CHILDREN=${_ANSWER:-$anstmp} && _confset _WWW_MAX_CHILDREN "$_WWW_MAX_CHILDREN"

	[ -z ${_WWW_START_SERVERS+x} ] && anstmp='1' && _askno "Give value for 'pm.start_servers' ($anstmp)" && _WWW_START_SERVERS=${_ANSWER:-$anstmp} && _confset _WWW_START_SERVERS "$_WWW_START_SERVERS"

	[ -z ${_WWW_MIN_SPARE_SERVERS+x} ] && anstmp='1' && _askno "Give value for 'pm.min_spare_servers' ($anstmp)" && _WWW_MIN_SPARE_SERVERS=${_ANSWER:-$anstmp} && _confset _WWW_MIN_SPARE_SERVERS "$_WWW_MIN_SPARE_SERVERS"

	[ -z ${_WWW_MAX_SPARE_SERVERS+x} ] && anstmp='2' && _askno "Give value for 'pm.max_spare_servers' ($anstmp)" && _WWW_MAX_SPARE_SERVERS=${_ANSWER:-$anstmp} && _confset _WWW_MAX_SPARE_SERVERS "$_WWW_MAX_SPARE_SERVERS"

	[ -z ${_WWW_MAX_REQUESTS+x} ] && anstmp='50' && _askno "Give value for 'pm.max_requests' ($anstmp)" && _WWW_MAX_REQUESTS=${_ANSWER:-$anstmp} && _confset _WWW_MAX_REQUESTS "$_WWW_MAX_REQUESTS"

	[ -z ${_WWW_RLIMIT_FILES+x} ] && anstmp='1024' && _askno "Give value for 'rlimit_files' ($anstmp)" && _WWW_RLIMIT_FILES=${_ANSWER:-$anstmp} && _confset _WWW_RLIMIT_FILES "$_WWW_RLIMIT_FILES"

	[ -z ${_SLOWLOG_TIMEOUT+x} ] && anstmp='2' && _askno "Give value for 'request_SLOWLOG_TIMEOUT' ($anstmp)" && _SLOWLOG_TIMEOUT=${_ANSWER:-$anstmp} && _confset _SLOWLOG_TIMEOUT "$_SLOWLOG_TIMEOUT"

fi

if [ "$_PHPREDIS" = "y" ]; then

	[ -z ${_REDIS_IPS+x} ] && anstmp="${S_SERVICE['cache']}" && _askno "Give addresses for redis server ($anstmp)" && _REDIS_IPS=${_ANSWER:-$anstmp} && _confset _REDIS_IPS "$_REDIS_IPS"

	[ -z ${_REDISPORT+x} ] && anstmp="$S_CACHE_PORT" && _askno "Give a PORT address for redis server ($anstmp)" && _REDISPORT=${_ANSWER:-$anstmp} && _confset _REDISPORT "$_REDISPORT"

fi


_echoT "----------  variables set"

path_log_php="$S_PATH_LOG/php"
path_profile="${_PATH_PHP}/xdebug/profile"
path_trace="${_PATH_PHP}/xdebug/trace"
file_conf_mod="/etc/php/${php_version}/mods-available"
file_conf_phpini="/etc/php/${php_version}/apache2/php.ini"

[ "$S_SERVER_TYPE" = vz ] && this_url="http://${S_NODE_IPV4}:${S_HOST_PORT_PRE_HTTP}$(awk '{print $1}' < /proc/vz/veinfo)" \
|| this_url="http://$(ifconfig $S_ETH | awk '/inet addr/{print substr($2,6)}')"


if [ "$_PHPMODE" = "php-fpm" ]; then

	path_fpm_conf="/etc/php/${php_version}/fpm"
	path_fpm_confd="$path_fpm_conf/conf.d"
	path_fpm_pool="$path_fpm_conf/pool.d"

	path_pm_status="/status-www"
	path_pm_ping="/ping-www"

	file_conf_phpini="$path_fpm_conf/php.ini"
fi


_echoT "----------  path create"

_PATH_PEAR="${_PATH_PHP}/pear" && _confset _PATH_PEAR "$_PATH_PEAR"
_PATH_TMP="${_PATH_PHP}/tmp" && _confset _PATH_TMP "$_PATH_TMP"
_PATH_SESSION="${_PATH_PHP}/sessions" && _confset _PATH_SESSION "$_PATH_SESSION"
_PATH_GEOIP="${_PATH_PHP}/geoip" && _confset _PATH_GEOIP "$_PATH_GEOIP"
_PATH_SOAP="${_PATH_PHP}/soap" && _confset _PATH_SOAP "$_PATH_SOAP"

for path in "$_PATH_PHP" "$_PATH_PEAR" "$_PATH_TMP" "$_PATH_SESSION" "$_PATH_GEOIP" "$_PATH_SOAP"; do
	! [ -d "$path" ] && _evalq mkdir -p "$path"
	_evalq chown www-data:www-data "$path"
	_evalq chmod 750 "$path"
done


####################################  CONTAINER

PARTSUB="host-$_PART"
str=" vz lxd "
if [ "${str/ "$S_SERVER_TYPE" /}" != "$str" ] && ! grep -q "$PARTSUB" "${S_FILE_INSTALL_DONE}"; then

	_echoT "----------  $PARTSUB"

	while ! grep -q "^$PARTSUB$" "${S_FILE_INSTALL_DONE}"; do
		_echoi "from an other terminal in server host launch:"
		_askyn "Confirm"
	done
fi


####################################  INSTALL

_echoT "----------  repos add"

_eval apt install -y ca-certificates apt-transport-https
_eval "wget -q https://packages.sury.org/php/apt.gpg -O- | apt-key add -"
_eval "echo \"deb https://packages.sury.org/php/ stretch main\" > /etc/apt/sources.list.d/php.list"
_eval apt update


_echoT "----------  install"

_eval apt-get install -y "$_PHPMODE" "$_PHPMODULES"

if [ "$_PHPMODE" = "php-fpm" ]; then

	_echoT "----------  fpm apache modules"

	_evalq a2enmod proxy_fcgi setenvif
	_evalq a2enconf "${phpfpm_service}"

	_echoT "----------  apache2 restart"
	_evalq systemctl restart apache2
fi

PHPVER=$(php -v |xargs |sed "s/^PHP \([0-9]\.[0-9]\).*/\1/")


_echoT "----------  path *.so"

_PATHMOD=/usr/lib/php/20151012
while [ ! -d "$_PATHMOD" ]; do
	_ask "The path '$anstmp' doesn't exist,\nLook & give the good existing one: "
	_PATHMOD=$_ANSWER
done
_confset _PATHMOD "$_PATHMOD"


_echoT "----------  create $path_log_php"

if ! [ -d "$path_log_php" ]; then
	mkdir -p "$path_log_php"
	chown www-data:www-data "$path_log_php"
	chmod 640 "$path_log_php"
fi


####################################  PHP.INI

_echoT "----------  conf global php.ini"

_keepcpts "$file_conf_phpini"

# global
_sed_php1 'track_errors' 'Off' "$file_conf_phpini"
_sed_php1 'max_execution_time' '30' "$file_conf_phpini"
_sed_php1 'max_input_time' '60' "$file_conf_phpini"
_sed_php1 'memory_limit' '128M' "$file_conf_phpini"
_sed_php1 'post_max_size' '8M' "$file_conf_phpini"
_sed_php1 'file_uploads' 'On' "$file_conf_phpini"
_sed_php1 'upload_max_filesize' '8M' "$file_conf_phpini"
_sed_php1 'date\.timezone' "'Europe/Paris'" "$file_conf_phpini"
_sed_php1 'session\.save_handler' 'files' "$file_conf_phpini"
_sed_php1 'session.use_strict_mode' '1' "$file_conf_phpini"
_sed_php1 'gc_maxlifetime' '14400' "$file_conf_phpini"

# log mail
_sed_php1 'mail\.log' 'syslog' 'files' "$file_conf_phpini"

# log error: cause problem with fpm
#_sed_php1 'error_log' 'syslog' "$file_conf_phpini"

# opcache
_sed_php1 'opcache\.enable' '1' "$file_conf_phpini"
_sed_php1 'opcache\.enable_cli' '0' "$file_conf_phpini"
_sed_php1 'opcache\.memory_consumption' '128' "$file_conf_phpini"
_sed_php1 'opcache\.interned_strings_buffer' '8' "$file_conf_phpini"
_sed_php1 'opcache\.max_accelerated_files' '10000' "$file_conf_phpini"
_sed_php1 'opcache\.revalidate_freq' '2' "$file_conf_phpini"
_sed_php1 'opcache\.save_comments' '1' "$file_conf_phpini"


if [ "$S_SERVER_TYPE" = vz ]; then
		_echoT "----------  conf session path"

	if ! grep -q ^session.save_path "$file_conf_phpini"; then
		sed -i "s|^;\?\(session\.save_path *= *\)\(\"/var/lib/.*\"\)$|;\1\2\n\1\"$_PATH_SESSION\"|" "$file_conf_phpini"
	else
		sed -i "s|^;\?\(session\.save_path\s*=\).*$|\1 \"$_PATH_SESSION\"|" "$file_conf_phpini"
	fi


	_echoT "----------  conf tmp path"

	_sed_php1 'upload_tmp_dir' "$_PATH_TMP" "$file_conf_phpini"
	_sed_php1 'sys_temp_dir' "$_PATH_TMP" "$file_conf_phpini"


	_echoT "----------  conf pear path"

	sed -i "s|^\(;\s*http://php\.net/include-path\)$|\1\ninclude_path = .:/usr/share/php:/usr/share/pear:$_PATH_PEAR|" "$file_conf_phpini"


	_echoT "----------  conf geoip path"

	file="$file_conf_mod/geoip.ini"
	! grep -qi geoip "$file" && echo -e "[geoip]\ngeoip.custom_directory = $_PATH_GEOIP/geoip" >> "$file"


	_echoT "----------  conf soap path"

	sed -i "s|^;\? *\(soap\.wsdl_cache_dir *= *\).*$|;\1\n\1$_PATH_SOAP|" "$file_conf_phpini"


	_echoT "----------  rights files in $_PATH_PHP"

	_evalq "find '$_PATH_PHP' -type d -exec chown root.www-data '{}' \\; -exec chmod 770 '{}' \\;"

fi


if [ "$_PHPREDIS" ]; then

	_echoT "----------  conf session handler - redis"

	_sed_php1 'session\.save_handler' 'redis' "$file_conf_phpini"
	_sed_php1 'session\.save_path' "\"tcp://${_REDIS_IPS%% *}:${_REDISPORT}\"" "$file_conf_phpini"
fi


####################################  PHP-FPM

if [ "$_PHPMODE" = "php-fpm" ]; then

	_echoT "----------  php-fpm conf"

	_echo "Parameters for global php-fpm:"

	[ -z ${_RESTART_THRESHOLD+x} ] && anstmp='10' && _askno "Give value for 'emergency_RESTART_THRESHOLD' ($anstmp)" && _RESTART_THRESHOLD=${_ANSWER:-$anstmp} && _confset _RESTART_THRESHOLD "$_RESTART_THRESHOLD"

	[ -z ${_RESTART_INTERVAL+x} ] && anstmp='1' && _askno "Give value for 'emergency_RESTART_INTERVAL' ($anstmp)mn" && _RESTART_INTERVAL=${_ANSWER:-$anstmp} && _confset _RESTART_INTERVAL "$_RESTART_INTERVAL"

	[ -z ${_CONTROL_TIMEOUT+x} ] && anstmp='10' && _askno "Give value for 'process_CONTROL_TIMEOUT' ($anstmp)s" && _CONTROL_TIMEOUT=${_ANSWER:-$anstmp} && _confset _CONTROL_TIMEOUT "$_CONTROL_TIMEOUT"

	file="$path_fpm_conf/php-fpm.conf"
	_keepcpts "$file"
	#_sed_php1 'error_log' "$path_log_php/${phpfpm_service}.log" "$file"
	_sed_php1 'error_log' 'syslog' "$file"
	_sed_php1 'log_level' 'notice' "$file"
	_sed_php1 'syslog.facility' 'daemon' "$file"
	_sed_php1 'syslog.ident' "${phpfpm_service}" "$file"
	_sed_php1 'emergency_RESTART_THRESHOLD' "$_RESTART_THRESHOLD" "$file"
	_sed_php1 'emergency_RESTART_INTERVAL' "$_RESTART_INTERVAL" "$file"
	_sed_php1 'process_CONTROL_TIMEOUT' "$_CONTROL_TIMEOUT" "$file"


	_echoT "----------  php-fpm pool www conf"

	. $S_PATH_CONF/debian9-apache.conf

	file="$path_fpm_pool/www.conf"
	_keepcpts "$file"
	_sed_php1 'listen\.backlog' "$_MAX_BACKLOG" "$file"
	_sed_php1 'pm' "dynamic" "$file"
	_sed_php1 'pm.max_children' "$_WWW_MAX_CHILDREN" "$file"
	_sed_php1 'pm.start_servers' "$_WWW_START_SERVERS" "$file"
	_sed_php1 'pm.min_spare_servers' "$_WWW_MIN_SPARE_SERVERS" "$file"
	_sed_php1 'pm.max_spare_servers' "$_WWW_MAX_SPARE_SERVERS" "$file"
	_sed_php1 'pm.max_requests' "$_WWW_MAX_REQUESTS" "$file"
	_sed_php1 'ping.response' "pong" "$file"
	_sed_php1 'ping.path' "$path_pm_ping" "$file"
	_sed_php1 'pm.status_path' "$path_pm_status" "$file"
	_sed_php1 'slowlog' "$path_log_php/\$pool_slow.log" "$file"
	_sed_php1 'request_SLOWLOG_TIMEOUT' "$_SLOWLOG_TIMEOUT" "$file"
	_sed_php1 'rlimit_files' "$_WWW_RLIMIT_FILES" "$file"
	#_sed_php1 'request_SLOWLOG_TIMEOUT' "$_www_status_path" "$file"
	_sed_php1 'access.log' "$path_log_php/\$pool.log"  "$file"
	#echo "php_admin_value[error_log] = $path_log_php/\$pool_error.log" >> "$file"


	_echoT "----------  apache2 ${phpfpm_service} conf"

	file="/etc/apache2/conf-available/${phpfpm_service}.conf"
	_keepmvts "$file"
	_evalq cp -a "$file_xtra_fpm_apache" "$file"

	sed -i "s|LocationMatch \"/(status-www\|ping-www)$\"|LocationMatch \"/(${path_pm_status#/}\|${path_pm_ping#/})$\"|" "$file"
	sed -i "s|^\(\s*Require ip\).*|\1 127.0.0.1 ${_VM_IP_BASE}.1/24 ${S_HOST_IPV4} ${_IPS_AUTH}|" "$file"


	_echoT "----------  apache2 restart"

	_evalq systemctl restart apache2


	####################################  MONITOR-PING

	_echoT "----------  ping-monitor file"

	file_pm_ping="/var/www/html/ping-monitor.php"
	_evalq "echo '<?php echo \"pong\"; ?>' > '$file_pm_ping'"
	_evalq chown www-data:www-data "$file_pm_ping"


	_echoT "----------  ping-monitor conf"

	file="/etc/apache2/conf-available/monitor.conf"
	echo "# Redirect to local /ping-monitor
	<IfModule proxy_fcgi_module>

		# ping.php
	    <LocationMatch \"/ping-monitor$\">
	        Require ip 127.0.0.1 ${_VM_IP_BASE}.1/24 ${S_HOST_IPV4} $_IPS
	        SetHandler \"proxy:unix:/run/php/${phpfpm_service}.sock|fcgi://localhost${file_pm_ping}\"
	    </LocationMatch>
	</IfModule>
	" > "$file"


	_echoT "----------  ping-monitor conf enable"

	_evalq a2enconf monitor


	####################################  RSYSLOG

	_echoT "----------  php-fpm rsyslog conf"

	file="/etc/rsyslog.d/vm-php-fpm.conf"

	_evalq cp -a "$file_xtra_nextcloud" "$file"
	_var_replace "$file"
	sed -i "s|phpfpm_service|${phpfpm_service}|g" "$file"


	_echoT "----------  php-fpm rsyslog restart"

	_evalq systemctl restart rsyslog.service


fi


####################################  LOGROTATE

_echoT "----------  logrotate conf"

if [ "$_PHPMODE" = "php-fpm" ]; then
	for file in $(ls /etc/logrotate.d/php*fpm*); do
		str="${path_log_php}/${phpfpm_service}.notice\n${path_log_php}/${phpfpm_service}.info\n${path_log_php}/${phpfpm_service}.debug"
		! grep -q "${path_log_php}/${phpfpm_service}.notice" "$file" && sed -i "1i $str" "$file"
		sed -i "s|weekly|daily|" "$file"
		sed -i "s|^\(\s*rotate\).*|\1 30|" "$file"
	done

	file="/etc/logrotate.d/php"
	echo "# Logrotate file for php pool log
$path_log_php/www.log
$path_log_php/www_slow.log {
	missingok
	compress
	delaycompress
	notifempty
	daily
	rotate 14
	create 0640 www-data www-data
}" > "$file"
	chown root:root "$file"
	chmod 644 "$file"
else
	file="/etc/logrotate.d/php"
	echo "# Logrotate file for php log
$path_log_php/*.log {
	missingok
	compress
	delaycompress
	notifempty
	daily
	rotate 14
	create 0640 www-data www-data
}" > "$file"
	chown root:root "$file"
	chmod 644 "$file"
fi


_echoT "----------  php-switch $_PHPUSAGE"

_evalq php-switch "$_PHPUSAGE"


####################################  XDEBUG

_echoT "----------  xdebug conf"

path="$path_profile" && [ ! -d "$path" ] && _evalq mkdir -p "$path"
path="$path_trace" && [ ! -d "$path" ] && _evalq mkdir -p "$path"

file="$file_conf_mod/xdebug.ini"
_keepcpts "$file"
_evalq cp -a "$file_xtra_xdebug" "$file"

_sed_php1 'xdebug.profiler_output_dir' "$path_profile" "$file"
_sed_php1 'xdebug.trace_output_dir' "$path_trace" "$file"
_sed_php1 'xdebug.remote_host' "${S_IPS_DEV%% *} ;localhost" "$file"


_echoT "----------  xdebug rights files"

_evalq "find '$_PATH_PHP/xdebug' -type d -exec chown root:www-data '{}' \; -exec chmod 770 '{}' \;"


####################################  ZEND_DEBUGGER

_echoT "----------  libssl install"

_eval apt-get install -y "libssl${_LIBSSL}" libssl-dev

[ ! -f /usr/lib/x86_64-linux-gnu/libssl.so.${_LIBSSLREQ} ] && ln -sv /usr/lib/x86_64-linux-gnu/libssl.so.${_LIBSSL} /usr/lib/x86_64-linux-gnu/libssl.so.${_LIBSSLREQ}
[ ! -f /usr/lib/x86_64-linux-gnu/libcrypto.so.${_LIBSSLREQ} ] && ln -sv /usr/lib/x86_64-linux-gnu/libcrypto.so.${_LIBSSL} /usr/lib/x86_64-linux-gnu/libcrypto.so.${_LIBSSLREQ}


_echoT "----------  zenddebugger install"

file="${S_PATH_INSTALL_XTRA}/php/ZendDebugger-${PHPVER}.so.tgz"
[ -f "$file" ] && _evalq tar xzf "$file" -C "$_PATHMOD"

while [ ! -f "$_PATHMOD/ZendDebugger.so" ]; do
	_echoI "Unable to find '$file'"
	_echoI "Get ZendDebugger in http://www.zend.com/products/studio/downloads"
	_echoI "and put the correct version of file 'ZendDebugger.so' in path '$_PATHMOD' in this container"
	_askno "Confirm"
done


_echoT "----------  zenddebugger conf"

file="$file_conf_mod/zend_debugger.ini"
_keepcpts "$file"
_evalq cp -a "$file_xtra_zenddebug" "$file"

_sed_php1 'zend_extension' "$_PATHMOD/ZendDebugger.so" "$file"
_sed_php1 'zend_debugger.allow_hosts' "127.0.0.0/8,${_IPS_AUTH// /,}" "$file"
_sed_php1 'zend_debugger.allow_tunnel' "${_IPS_AUTH// /,}" "$file"
_sed_php1 'zend_debugger.httpd_uid' "$(id -u www-data)" "$file"


_echoT "----------  rights /var/www"

_evalq chown www-data:www-data -R "/var/www"


####################################  TESTS

_echoT "----------  add phpinf.php"

# Apache : add phpinfo
echo '<?php phpinfo() ?>' > /var/www/html/phpinf.php

<<KEEP
_echoT "----------  php test"

_echoi "To verify php configuration, test this address:"
_echoI "$this_url/phpinf.php"
_askno "Confirm"
KEEP


# XDEBUG

_echoT "----------  xdebug enable"

_evalq php-switch debug xdebug


_echoT "----------  xdebug test"

_echoi "To verify Xdebug configuration, test this address:"
_echoI "$this_url/phpinf.php"
_askno "Confirm"


# ZEND_DEBUGGER

_echoT "----------  zenddebugger enable"

_evalq php-switch debug zend_debugger


_echoT "----------  zenddebugger test"

_echoi "To verify Zend Debugger configuration, test this address:"
_echoI "$this_url/phpinf.php"
_askno "Confirm"


####################################  SWITCH

_echoT "----------  php-switch $_PHPDEBUG"

_evalq php-switch debug "$_PHPDEBUG" "off"


_echoT "----------  php-switch $_PHPUSAGE"

_evalq php-switch "$_PHPUSAGE"


if [ "$_PHPMODE" = "php-fpm" ]; then

	_echoT "----------  $SERVERNAME status test"

	_echoi "To verify status & ping url, test this following addresses:"
	_echoI "$this_url/ping-www"
	_echoI "$this_url/status-www?html&full"
	_askno "Confirm"


	_echoT "----------  $SERVERNAME pool conf"

		#          ask for variables & source apache2.conf
		_echoi "Here is an example for a 'middle' configuration of php-fpm pool for virtualhost"
		_echo "pm = dynamic
pm.max_children = 5
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3
pm.max_requests = 100"

fi


####################################  MONITOR

_echoi "To use path '/ping-monitor' for administration enable configuration 'monitor' in apache"


####################################  END

_echoT "----------  end"

_evalq _var_unset "part" "*"
_evalq _partadd "$_PART" "$S_FILE_INSTALL_DONE"

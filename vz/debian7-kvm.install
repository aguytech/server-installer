#!/bin/bash
#
# write by Aguy


<<commands
commands


####################################  global configuration

! type _menu &>/dev/null && ! [ -f $S_GLOBAL_FUNCTIONS ] && echo -e "\e[1;31mUnable to load file '/usr/local/bs/inc-functions'${cclear} from ${BASH_SOURCE[0]}\e[0;0m" && exit 1
. $S_GLOBAL_FUNCTIONS
	

_echoT "\n==========================================  $S_RELEASE $_PART"


_echoT "----------  /libvirt link"

_eval "cd /"
_eval "ln -sv /var/lib/libvirt "


_echoT "==========================================  install"


_echoT "----------  repository"

! grep -q wheezy-backports /etc/apt/sources.list && echo -e "\ndeb http://debian.mirrors.ovh.net/debian wheezy-backports main" >> /etc/apt/sources.list


_echoT "----------  kvm base"

cd /tmp
_eval "wget http://ftp.de.debian.org/debian/pool/main/o/openbios/openbios-ppc_1.1+svn1306-2_all.deb"
_eval "wget http://ftp.de.debian.org/debian/pool/main/o/openbios/openbios-sparc_1.1+svn1306-2_all.deb"
_eval "dpkg -i openbios-ppc_1.1+svn1306-2_all.deb"
_eval "dpkg -i openbios-sparc_1.1+svn1306-2_all.deb"
_eval "apt-get install -yt wheezy-backports qemu qemu-kvm qemu-system bridge-utils virt-goodies virt-top virt-what" # virt-manager virt-viewer


_echoT "----------  kvm tools"

# tools
_eval "apt-get install -yt wheezy-backports guestfsd ebtables" # ovmf libguestfs-tool


_echoT "----------  user & rights"

# network interface name : /etc/udev/rules.d/70-persistent-net.rules
[ "$S_SERVER_TYPE" == home ] && _eval "adduser $USER libvirt" && _eval "adduser $USER kvm"

! [ -d "/var/lib/libvirt/export" ] && _eval "mkdir -p /var/lib/libvirt/export /var/lib/libvirt/softs"
_eval "chown -R libvirt-qemu:$USER /var/lib/libvirt/export /var/lib/libvirt/images /var/lib/libvirt/softs"
[ "$S_SERVER_TYPE" == "home" ] && _eval "chown -R libvirt-qemu:$USER /extend/shared/Soft/linux"

_eval "chmod -R g+rw /var/lib/libvirt/export /var/lib/libvirt/images /var/lib/libvirt/softs"
[ "$S_SERVER_TYPE" == "home" ] && _eval "chmod -R g+rw /extend/shared/Soft/linux"


_echoT "----------  conf"

str='<ip address="10.0.1.1" netmask="255.255.255.0">'; sed -i "s|^\(.*\)<ip address=.*|\1$str|" /etc/libvirt/qemu/networks/default.xml
str='<range start="10.0.1.10" end="10.0.1.254" />'; sed -i "s|^\(.*\)<range start=.*|\1$str|" /etc/libvirt/qemu/networks/default.xml

_eval "service libvirtd restart"

if [ "$S_SERVER_TYPE" == "home" ]; then
	_eval "virsh -c qemu:///system list"
	_eval "virsh -c qemu:///system net-autostart default # virsh -c qemu:///system net-autostart default --disable"
	_eval "virsh -c qemu:///system net-start default"
fi


_echoT "----------  logrotate conf"

file=/etc/logrotate.d/munin-node
str=7; sed -i "s/\( \+rotate\).*$/\1 $str/" $file

file=/etc/logrotate.d/libvirtd
str=5; sed -i "s/\( \+rotate\).*$/\1 $str/" $file

file=/etc/logrotate.d/libvirtd.lxc
str=5; sed -i "s/\( \+rotate\).*$/\1 $str/" $file

file=/etc/logrotate.d/libvirtd.qemu
str=5; sed -i "s/\( \+rotate\).*$/\1 $str/" $file

file=/etc/logrotate.d/libvirtd.uml
str=5; sed -i "s/\( \+rotate\).*$/\1 $str/" $file


if [ "$S_SERVER_TYPE" == "home" ]; then
	
	_echoT "----------  usb"

	_eval "adduser libvirt-qemu plugdev"

	# lsusb
	# ls -Al /dev/bus/usb/001/007 # get rights on device
	# sudo udevadm info -q path -n /dev/bus/usb/001/007 # get path for udevadmn
	# sudo udevadm info -ap /devices/pci0000:00/0000:00:12.2/usb1/1-5/1-5.3 # get all infos for device with path
	if ! [ -f "/etc/udev/rules.d/90-usb-kvm.rules" ]
		then
		echo 'SUBSYSTEM=="usb", ENV{DEVTYPE}=="usb_device", MODE="0660", GROUP="plugdev"
# SUBSYSTEM=="usb", ENV{DEVTYPE}=="usb_device",ATTR{idVendor}=="1b1c", MODE="0660, GROUP="plugdev"
# SUBSYSTEM=="usb", ENV{DEVTYPE}=="usb_device", ATTR{idVendor}=="1b1c", ATTR{idProduct}=="1a06", MODE="0660", GROUP="kvm"' > /etc/udev/rules.d/90-usb-kvm.rules
	fi
fi


_echoT "----------  end"
_eval "_partadd ${_PART} ${S_FILE_INSTALL_DONE}"


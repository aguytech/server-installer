#!/bin/bash
#
# write by Aguy


####################################  global configuration

! type _menu &>/dev/null && ! [ -f $S_GLOBAL_FUNCTIONS ] && echo -e "\e[1;31mUnable to load file '/usr/local/bs/inc-functions'${cclear} from ${BASH_SOURCE[0]}\e[0;0m" && exit 1
. $S_GLOBAL_FUNCTIONS
	

_echoT "\n==========================================  $S_RELEASE $_PART"


_echoT "----------  /vz link"

_eval "cd /"
_eval "ln -sv /var/lib/vz vz"


_echoT "==========================================  install kernel"

# remove mdadm
_eval "apt-get purge -y mdadm"

# openvz
echo "deb http://download.openvz.org/debian wheezy main
# deb http://download.openvz.org/debian wheezy-test main" > /etc/apt/sources.list.d/openvz.list

_eval "wget -q http://ftp.openvz.org/debian/archive.key -O- | apt-key add -"
_eval "apt-get update"

# look kernel
_eval "apt-get install -y linux-image-openvz-amd64"


_echoT "==========================================  conf"

_echoT "----------  grub conf"

str=0; sed -i "s/^\(GRUB_TIMEOUT=\).*/\1$str/" /etc/default/grub
str=1; sed -i "s/^\(GRUB_DEFAULT=\).*/\1$str/" /etc/default/grub
#str=0; sed -i "s/^\(set default=\).*/\1\"$str\"/" /boot/grub/grub.cfg

_eval "update-grub"


_echoT "----------  sysctl conf"

file=/etc/sysctl.conf
cp -a $file $file.keep
# on
strs="net.ipv4.ip_forward net.ipv6.conf.default.forwarding net.ipv6.conf.all.forwarding net.ipv6.conf.all.forwarding net.ipv4.conf.all.rp_filter kernel.sysrq net.ipv4.conf.default.send_redirects"
for str in $strs, do
	grep -q "$str" "$file" && sed -i "s/^.*\($str\).*/\1 = 1/" $file || echo "$str = 1" >> $file
done

# off
strs="net.ipv4.conf.default.proxy_arp net.ipv4.conf.all.send_redirects"
for str in $strs; do
	grep -q "$str" "$file" && sed -i "s/^.*\($str\).*/\1 = 0/" $file || echo "$str = 0" >> $file
done

# max connection
str="net.core.somaxconn"; val="4096"; grep -q "$str" "$file" && sed -i "s/^.*\($str\).*/\1 = $val/" $file || echo "$str = $val" >> $file
str="net.core.netdev_MAX_BACKLOG"; val="1024"; grep -q "$str" "$file" && sed -i "s/^.*\($str\).*/\1 = $val/" $file || echo "$str = $val" >> $file


_echoT "----------  end"
_eval "_partadd ${_PART} ${S_FILE_INSTALL_DONE}"

_reenter " & relaunch '${0}'"


_echoT "----------  reboot"

_echoI "Please, Wait until the system will restart !"

_eval "reboot"



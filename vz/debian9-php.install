#!/bin/bash
#
# write by Aguy


_echoT "\n==========================================  $_RELEASE $_PART"

PHPFPM_SERVICE=php-fpm
PHPFPM_VERSION=`ls -1 /etc/php/|tail -n1`

_echoT "------------------ file required"
FILE_XDEBUG="${S_PATH_INSTALL_CONF}/php/xdebug.ini"
FILE_ZENDDEBUG="${S_PATH_INSTALL_CONF}/php/zend_debugger.ini"
FILE_FPM_APACHE="${S_PATH_INSTALL_CONF}/php/$PHPFPM_SERVICE.conf"
FILE_APACHE_CONF="$S_PATH_CONF/debian9-apache.conf"
FILE_NC=${S_PATH_INSTALL_CONF}/rsyslog/vm-php-fpm.conf

FILES="$FILE_XDEBUG $FILE_ZENDDEBUG $FILE_ZENDDEBUG $FILE_FPM_APACHE $FILE_APACHE_CONF $FILE_NC"
for FILE in $FILES; do [ ! -f "$FILE" ] && _exite "Unable to find file: '$FILE'"; done

####################################  CTID

if [ "$S_SERVER_TYPE" == vz ]; then
	_echoT "----------  ${S_SERVICE_IPS['http']}"

	# test ctid
	[ "${S_SERVICE_IPS['http']/$_IPTHIS/}" == "${S_SERVICE_IPS['http']}" ] && _askno "This container is not one of the default declared for www\nConfirm or answer 'n' to exit"
	[ "$_ANSWER" == "n" ] && _exit
fi

####################################  FUNCTION


####################################  MAIN

_echoT "------------------ fileconf source"
. "${S_PATH_CONF}/${S_RELEASE}-apache.conf" # include apache conf
[ -f "$S_FILE_INSTALL_CONF" ] && . "$S_FILE_INSTALL_CONF"


_echoT "------------------ data"

MODULESTMP="php-curl php-gd php-geoip php-imagick php-json php-mbstring php-mcrypt php-redis php-pear php-mysql php-pgsql php-sqlite3 phpunit phpunit-git php-xml php-zip php-xdebug"


[ -z ${_PATH_PHP+x} ] && anstmp="$S_VM_PATH_SHARE/php/default" && _askno "path for PHP ($anstmp)" && _PATH_PHP=${_ANSWER:-$anstmp} && _confset _PATH_PHP "$_PATH_PHP"

[ -z ${_PHPMODE+x} ] && _menu "Mode for php" php-fpm libapache2-mod-php && _PHPMODE=$_ANSWER &&  _confset _PHPMODE "$_PHPMODE"

[ -z ${_PHPMODULES+x} ] && _menur "Select modules to install" $MODULESTMP && _PHPMODULES="$_ANSWER" && _confset _PHPMODULES "$_PHPMODULES"

[ "${_PHPMODULES/php-redis/}" != "$_PHPMODULES" ] && [ -z ${_PHPREDIS+x} ] && anstmp="y" && _askno "Do you want use redis for session handler ($anstmp)" && _PHPREDIS=${_ANSWER:-$anstmp} && _PHPREDIS=${_PHPREDIS/n/} && _confset _PHPREDIS "$_PHPREDIS"

if [ "$_PHPREDIS" == "y" ]; then

	[ -z ${_REDIS_IPS+x} ] && anstmp="${S_SERVICE[cache]}" && _askno "Give addresses for redis server ($anstmp)" && _REDIS_IPS=${_ANSWER:-$anstmp} && _confset _REDIS_IPS "$_REDIS_IPS"

	[ -z ${_REDISPORT+x} ] && anstmp="$S_CACHE_PORT" && _askno "Give a PORT address for redis server ($anstmp)" && _REDISPORT=${_ANSWER:-$anstmp} && _confset _REDISPORT "$_REDISPORT"

fi

[ -z ${_PHPUSAGE+x} ] && _menu "Usage for php server PROduction or DEVelopement" pro dev && _PHPUSAGE=$_ANSWER &&  _confset _PHPUSAGE "$_PHPUSAGE"

[ -z ${_PHPDEBUG+x} ] && _menu "Debugger to use" off xdebug zend_debugger && _PHPDEBUG=$_ANSWER && _confset _PHPDEBUG "$_PHPDEBUG"

[ -z ${_LIBSSLREQ+x} ] && anstmp='1.0.0' && _askno "Give the version of libssl required by ZendDebugger ($anstmp)" && _LIBSSLREQ=${_ANSWER:-$anstmp} && _confset _LIBSSLREQ "$_LIBSSLREQ"

[ -z ${_LIBSSL+x} ] && anstmp='1.0.2' && _askno "Give the version of libssl to install ($anstmp)" && _LIBSSL=${_ANSWER:-$anstmp} && _confset _LIBSSL "$_LIBSSL"


_echoT "----------  variables set"

PATHLOGPHP="$S_PATH_LOG/php"
PATHPROFILE="${_PATH_PHP}/xdebug/profile"
PATHTRACE="${_PATH_PHP}/xdebug/trace"
PATHMODCONF="/etc/php/7.0/mods-available"
PHPCONF="/etc/php/7.0/apache2/php.ini"

[ "$S_SERVER_TYPE" == vz ] && THISURL="http://${S_NODE_IPV4}:${S_HOST_PORT_PRE_HTTP}$(awk '{print $1}' < /proc/vz/veinfo)" \
|| THISURL="http://$(ifconfig $S_ETH | awk '/inet addr/{print substr($2,6)}')"


if [ "$_PHPMODE" == "php-fpm" ]; then

	PATH_FPM_CONF="/etc/php/7.0/fpm"
	PATH_FPM_CONFD="$PATH_FPM_CONF/conf.d"
	PATH_FPM_POOL="$PATH_FPM_CONF/pool.d"

	PM_STATUS_PATH="/status-www"
	PING_PATH="/ping-www"

	PHPCONF="$PATH_FPM_CONF/php.ini"
fi


_echoT "----------  path create"

_PATH_PEAR="${_PATH_PHP}/pear" && _confset _PATH_PEAR "$_PATH_PEAR"
_PATH_TMP="${_PATH_PHP}/tmp" && _confset _PATH_TMP "$_PATH_TMP"
_PATH_SESSION="${_PATH_PHP}/sessions" && _confset _PATH_SESSION "$_PATH_SESSION"
_PATH_GEOIP="${_PATH_PHP}/geoip" && _confset _PATH_GEOIP "$_PATH_GEOIP"
_PATH_SOAP="${_PATH_PHP}/soap" && _confset _PATH_SOAP "$_PATH_SOAP"

for PATHTMP in "$_PATH_PHP" "$_PATH_PEAR" "$_PATH_TMP" "$_PATH_SESSION" "$_PATH_GEOIP" "$_PATH_SOAP"; do
	! [ -d "$PATHTMP" ] && _evalq mkdir -p "$PATHTMP"
	_evalq chown www-data:www-data "$PATHTMP"
	_evalq chmod 750 "$PATHTMP"
done


####################################  CONTAINER

PARTSUB="host-$_PART"
STR=" vz lxd "
if [ "${STR/ "$S_SERVER_TYPE" /}" != "$STR" ] && ! grep -q "$PARTSUB" "${S_FILE_INSTALL_DONE}"; then

	_echoT "----------  $PARTSUB"

	while ! grep -q "^$PARTSUB$" "${S_FILE_INSTALL_DONE}"; do
		_echoi "from an other terminal in server host launch:"
		_echoI "${S_PATH_INSTALL}/sub/${S_HOST_RELEASE}-${PARTSUB}.install ${_CTIDTHIS} ${_PATH_PHP} ${_PHPMODE} ${PHPFPM_SERVICE} $S_FILE_INSTALL_DONE${cclear}"
		_askyn "Confirm"
	done
fi


####################################  INSTALL

_echoT "----------  install"

_eval apt-get install -y "$_PHPMODE" "$_PHPMODULES"

if [ "$_PHPMODE" == "php-fpm" ]; then

	_echoT "----------  fpm apache modules"

	_evalq a2enmod proxy_fcgi setenvif
	_evalq a2enconf "$PHPFPM_SERVICE"

	_echoT "----------  apache2 restart"
	_evalq systemctl restart apache2
fi

PHPVER=$(php -v |xargs |sed "s/^PHP \([0-9]\.[0-9]\).*/\1/")


_echoT "----------  path *.so"

_PATHMOD=/usr/lib/php/20151012
while [ ! -d "$_PATHMOD" ]; do
	_ask "The path '$anstmp' doesn't exist,\nLook & give the good existing one: "
	_PATHMOD=$_ANSWER
done
_confset _PATHMOD "$_PATHMOD"


_echoT "----------  create $PATHLOGPHP"

if ! [ -d "$PATHLOGPHP" ]; then
	mkdir -p "$PATHLOGPHP"
	chown www-data:www-data "$PATHLOGPHP"
	chmod 640 "$PATHLOGPHP"
fi


####################################  PHP.INI

_echoT "----------  conf global php.ini"

[ ! -f "$PHPCONF.$_DDATE" ] && cp -a "$PHPCONF" "$PHPCONF.$DDATE"

# global
SCH='track_errors';             STR='Off';               sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='max_execution_time';       STR='30';                sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='max_input_time';           STR='30';                sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='memory_limit';             STR='128M';              sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='post_max_size';            STR='8M';                sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='file_uploads';             STR='On';                sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='upload_max_filesize';      STR='8M';                sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='date\.timezone';           STR="'Europe/Paris'";    sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='session\.save_handler';    STR='files';             sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"

# log mail
STR="syslog" # "$PATHLOGPHP/mail.log"
sed -i "s|^;\(mail.log =\)\( syslog\)$|;\1\2\n\1 $STR|" "$PHPCONF"

# log error: cause problem with fpm
#STR="syslog"
#sed -i "s|^;\(error_log =\)\( syslog\)$|;\1\2\n\1 $STR|" "$PHPCONF"

# opcache
SCH='opcache.enable';                   STR='1';        sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='opcache.enable_cli';               STR='1';        sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='opcache.memory_consumption';       STR='128';      sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='opcache.interned_strings_buffer';  STR='8';        sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='opcache.max_accelerated_files';    STR='10000';    sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='opcache.revalidate_freq';          STR='1';        sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
SCH='opcache.save_comments';            STR='1';        sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"


if [ "$S_SERVER_TYPE" == vz ]; then
		_echoT "----------  conf session path"

	! grep -q ^session.save_path "$PHPCONF" && sed -i "s|^;\?\(session\.save_path *= *\)\(\"/var/lib/.*\"\)$|;\1\2\n\1\"$_PATH_SESSION\"|" "$PHPCONF" || sed -i "s|^;\?\(session\.save_path\s*=\).*$|\1 \"$_PATH_SESSION\"|" "$PHPCONF"


	_echoT "----------  conf tmp path"

	sed -i "s|^;\? *\(upload_tmp_dir *= *\).*$|;\1\n\1$_PATH_TMP|" "$PHPCONF"
	sed -i "s|^;\? *\(sys_temp_dir *= *\).*$|;\1\n\1$_PATH_TMP|" "$PHPCONF"


	_echoT "----------  conf pear path"

	sed -i "s|^\(; *http://php\.net/include-path\)$|\1\ninclude_path = .:/usr/share/php:/usr/share/pear:$_PATH_PEAR|" "$PHPCONF"


	_echoT "----------  conf geoip path"

	FILE="$PATHMODCONF/geoip.ini"
	! grep -qi geoip "$FILE" && echo -e "[geoip]\ngeoip.custom_directory = $_PATH_GEOIP/geoip" >> "$FILE"


	_echoT "----------  conf soap path"

	sed -i "s|^;\? *\(soap\.wsdl_cache_dir *= *\).*$|;\1\n\1$_PATH_SOAP|" "$PHPCONF"


	_echoT "----------  rights files in $_PATH_PHP"

	_evalq "find '$_PATH_PHP' -type d -exec chown root.www-data '{}' \\; -exec chmod 770 '{}' \\;"

fi


if [ "$_PHPREDIS" ]; then

	_echoT "----------  conf session handler - redis"

	SCH='session\.save_handler'; STR='redis'; sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
	SCH='session.save_path'; STR="\"tcp://${_REDIS_IPS%% *}:${_REDISPORT}\""; sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$PHPCONF"
fi


####################################  PHP-FPM

if [ "$_PHPMODE" == "php-fpm" ]; then

	_echoT "----------  php-fpm conf"

	_echo "Parameters for global php-fpm:"

	[ -z ${_RESTART_THRESHOLD+x} ] && anstmp='10' && _askno "Give value for 'emergency_RESTART_THRESHOLD' ($anstmp)" && _RESTART_THRESHOLD=${_ANSWER:-$anstmp} && _confset _RESTART_THRESHOLD "$_RESTART_THRESHOLD"

	[ -z ${_RESTART_INTERVAL+x} ] && anstmp='1' && _askno "Give value for 'emergency_RESTART_INTERVAL' ($anstmp)mn" && _RESTART_INTERVAL=${_ANSWER:-$anstmp} && _confset _RESTART_INTERVAL "$_RESTART_INTERVAL"

	[ -z ${_CONTROL_TIMEOUT+x} ] && anstmp='10' && _askno "Give value for 'process_CONTROL_TIMEOUT' ($anstmp)s" && _CONTROL_TIMEOUT=${_ANSWER:-$anstmp} && _confset _CONTROL_TIMEOUT "$_CONTROL_TIMEOUT"

	FILE="$PATH_FPM_CONF/php-fpm.conf"
	[ ! -f "$FILE.$_DDATE" ] && _evalq cp -a "$FILE" "$FILE.$DDATE"
	#SCH='error_log';        STR="$PATHLOGPHP/$PHPFPM_SERVICE.log";   sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='error_log';                    STR="syslog";         sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='log_level';                    STR="notice";         sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='syslog.facility';              STR="daemon";         sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='syslog.ident';                 STR="$PHPFPM_SERVICE";   sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='emergency_RESTART_THRESHOLD';  STR="$_RESTART_THRESHOLD";  sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='emergency_RESTART_INTERVAL';   STR="$_RESTART_INTERVAL";   sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='process_CONTROL_TIMEOUT';      STR="$_CONTROL_TIMEOUT";    sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"


	_echoT "----------  php-fpm pool www conf"

	. $S_PATH_CONF/debian9-apache.conf

	_echoi "the default values comes bellow are for a non intensive usage, a non used default localhost\nVirtualhost are to be used instead"

	[ -z ${_WWW_MAX_CHILDREN+x} ] && anstmp='3' && _askno "Give value for 'pm.max_children' ($anstmp)" && _WWW_MAX_CHILDREN=${_ANSWER:-$anstmp} && _confset _WWW_MAX_CHILDREN "$_WWW_MAX_CHILDREN"

	[ -z ${_WWW_START_SERVERS+x} ] && anstmp='1' && _askno "Give value for 'pm.start_servers' ($anstmp)" && _WWW_START_SERVERS=${_ANSWER:-$anstmp} && _confset _WWW_START_SERVERS "$_WWW_START_SERVERS"

	[ -z ${_WWW_MIN_SPARE_SERVERS+x} ] && anstmp='1' && _askno "Give value for 'pm.min_spare_servers' ($anstmp)" && _WWW_MIN_SPARE_SERVERS=${_ANSWER:-$anstmp} && _confset _WWW_MIN_SPARE_SERVERS "$_WWW_MIN_SPARE_SERVERS"

	[ -z ${_WWW_MAX_SPARE_SERVERS+x} ] && anstmp='2' && _askno "Give value for 'pm.max_spare_servers' ($anstmp)" && _WWW_MAX_SPARE_SERVERS=${_ANSWER:-$anstmp} && _confset _WWW_MAX_SPARE_SERVERS "$_WWW_MAX_SPARE_SERVERS"

	[ -z ${_WWW_MAX_REQUESTS+x} ] && anstmp='50' && _askno "Give value for 'pm.max_requests' ($anstmp)" && _WWW_MAX_REQUESTS=${_ANSWER:-$anstmp} && _confset _WWW_MAX_REQUESTS "$_WWW_MAX_REQUESTS"

	[ -z ${_WWW_RLIMIT_FILES+x} ] && anstmp='1024' && _askno "Give value for 'rlimit_files' ($anstmp)" && _WWW_RLIMIT_FILES=${_ANSWER:-$anstmp} && _confset _WWW_RLIMIT_FILES "$_WWW_RLIMIT_FILES"

	[ -z ${_SLOWLOG_TIMEOUT+x} ] && anstmp='2' && _askno "Give value for 'request_SLOWLOG_TIMEOUT' ($anstmp)" && _SLOWLOG_TIMEOUT=${_ANSWER:-$anstmp} && _confset _SLOWLOG_TIMEOUT "$_SLOWLOG_TIMEOUT"


	FILE="$PATH_FPM_POOL/www.conf"
	[ ! -f "$FILE.$_DDATE" ] && _evalq cp -a "$FILE" "$FILE.$DDATE"
	SCH='listen\.backlog';         STR="$_MAX_BACKLOG";                  sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='pm';                      STR="dynamic";                        sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='pm.max_children';         STR="$_WWW_MAX_CHILDREN";             sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='pm.start_servers';        STR="$_WWW_START_SERVERS";            sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='pm.min_spare_servers';    STR="$_WWW_MIN_SPARE_SERVERS";        sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='pm.max_spare_servers';    STR="$_WWW_MAX_SPARE_SERVERS";        sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='pm.max_requests';         STR="$_WWW_MAX_REQUESTS";             sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='ping.response';           STR="pong";                           sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='ping.path';               STR="$PING_PATH";                     sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='pm.status_path';          STR="$PM_STATUS_PATH";                sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='slowlog';                 STR="$PATHLOGPHP/\$pool_slow.log";    sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='request_SLOWLOG_TIMEOUT'; STR="$_SLOWLOG_TIMEOUT";              sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	#SCH='catch_workers_output';    STR="no";                             sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	SCH='rlimit_files';            STR="$_WWW_RLIMIT_FILES";             sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"
	#SCH='request_SLOWLOG_TIMEOUT';        STR="$_www_status_path";        sed -i "s|^;\?\($SCH\s*=\).*$|\1 $STR|" "$FILE"

	SCH='access.log';              STR="$PATHLOGPHP/\$pool.log";  sed -i "s|^;\?\($SCH\s*=\).*$|;\1 $STR|" "$FILE"

	#echo "php_admin_value[error_log] = $PATHLOGPHP/\$pool_error.log" >> "$FILE"


	_echoT "----------  apache2 $PHPFPM_SERVICE conf"

	cp -a "$FILE_FPM_APACHE" "/etc/apache2/conf-available/"

	sed -i "s|LocationMatch \"/(status-www\|ping-www)$\"|LocationMatch \"/(${PM_STATUS_PATH#/}\|${PING_PATH#/})$\"|" /etc/apache2/conf-available/$PHPFPM_SERVICE.conf
	sed -i "s|^\(\s*Require ip \).*|\1127.0.0.1 ${_VM_IP_BASE}.1/24 ${S_HOST_IPV4} ${_IPS_AUTH}|" /etc/apache2/conf-available/$PHPFPM_SERVICE.conf


	_echoT "----------  apache2 restart"

	_evalq systemctl restart apache2


	####################################  MONITOR-PING

	_echoT "----------  ping-monitor file"

	PATH_WWW="/var/www/html"
	FILE_PING="$PATH_WWW/ping-monitor.php"
	_evalq "echo '<?php echo \"pong\"; ?>' > '$FILE_PING'"
	_evalq chown www-data:www-data "$FILE_PING"


	_echoT "----------  ping-monitor conf"

	FILE="/etc/apache2/conf-available/monitor.conf"
	echo "# Redirect to local /ping-monitor
	<IfModule proxy_fcgi_module>

		# ping.php
	    <LocationMatch \"/ping-monitor$\">
	        Require ip 127.0.0.1 ${_VM_IP_BASE}.1/24 ${S_HOST_IPV4} ${_IPS_AUTH}
	        SetHandler \"proxy:unix:/run/php/php7.0-fpm.sock|fcgi://localhost${FILE_PING}\"
	    </LocationMatch>
	</IfModule>
	" > "$FILE"


	_echoT "----------  ping-monitor conf enable"

	_evalq a2enconf monitor


	####################################  RSYSLOG

	_echoT "----------  php-fpm rsyslog conf"

	FILE="/etc/rsyslog.d/vm-php-fpm.conf"

	_evalq cp -a "$FILE_NC" "$FILE"
	_var_replace "$FILE"
	sed -i "s|PHPFPM_SERVICE|$PHPFPM_SERVICE|g" "$FILE"


	_echoT "----------  php-fpm rsyslog restart"

	_evalq systemctl restart rsyslog.service


fi


####################################  LOGROTATE

_echoT "----------  logrotate conf"

if [ "$_PHPMODE" == "php-fpm" ]; then
	for file in $(ls /etc/logrotate.d/php*fpm*); do
		str="${PATHLOGPHP}/${PHPFPM_SERVICE}.notice\n${PATHLOGPHP}/${PHPFPM_SERVICE}.info\n${PATHLOGPHP}/${PHPFPM_SERVICE}.debug"
		! grep -q "${PATHLOGPHP}/${PHPFPM_SERVICE}.notice" "$file" && sed -i "1i $str" "$file"
		sed -i "s|weekly|daily|" "$file"
		sed -i "s|^\(\s*rotate\).*|\1 30|" "$file"
	done

	file="/etc/logrotate.d/php"
	echo "# Logrotate file for php pool log
$PATHLOGPHP/www.log
$PATHLOGPHP/www_slow.log {
	missingok
	compress
	delaycompress
	notifempty
	daily
	rotate 14
	create 0640 www-data www-data
}" > "$file"
	chown root:root "$file"
	chmod 644 "$file"
else
	file="/etc/logrotate.d/php"
	echo "# Logrotate file for php log
$PATHLOGPHP/*.log {
	missingok
	compress
	delaycompress
	notifempty
	daily
	rotate 14
	create 0640 www-data www-data
}" > "$file"
	chown root:root "$file"
	chmod 644 "$file"
fi


_echoT "----------  php-switch $_PHPUSAGE"

_evalq php-switch "$_PHPUSAGE"


####################################  XDEBUG

_echoT "----------  xdebug conf"

PATHTMP="$PATHPROFILE" && [ ! -d "$PATHTMP" ] && _evalq mkdir -p "$PATHTMP"
PATHTMP="$PATHTRACE" && [ ! -d "$PATHTMP" ] && _evalq mkdir -p "$PATHTMP"

FILE="$PATHMODCONF/xdebug.ini"
[ ! -f "$FILE.$_DDATE" ] && _evalq cp -a "$FILE" "$FILE.$DDATE"
_evalq cp -a "$FILE_XDEBUG" "$FILE"

SCH='xdebug.profiler_output_dir'; STR="$PATHPROFILE"; sed -i "s|^;\?\($SCH\s*=\).*|\1 $STR|" "$FILE"
SCH='xdebug.trace_output_dir'; STR="$PATHTRACE"; sed -i "s|^;\?\($SCH\s*=\).*|\1 $STR|" "$FILE"
SCH='xdebug.remote_host'; STR="${S_IPS_DEV%% *} ;localhost"; sed -i "s|^;\?\($SCH\s*=\).*|\1 $STR|" "$FILE"


_echoT "----------  xdebug rights files"

_evalq "find '$_PATH_PHP/xdebug' -type d -exec chown root:www-data '{}' \; -exec chmod 770 '{}' \;"


####################################  ZEND_DEBUGGER

_echoT "----------  libssl install"

_eval apt-get install -y "libssl${_LIBSSL}" libssl-dev

[ ! -f /usr/lib/x86_64-linux-gnu/libssl.so.${_LIBSSLREQ} ] && ln -sv /usr/lib/x86_64-linux-gnu/libssl.so.${_LIBSSL} /usr/lib/x86_64-linux-gnu/libssl.so.${_LIBSSLREQ}
[ ! -f /usr/lib/x86_64-linux-gnu/libcrypto.so.${_LIBSSLREQ} ] && ln -sv /usr/lib/x86_64-linux-gnu/libcrypto.so.${_LIBSSL} /usr/lib/x86_64-linux-gnu/libcrypto.so.${_LIBSSLREQ}


_echoT "----------  zenddebugger install"

FILE="${S_PATH_INSTALL_XTRA}/php/ZendDebugger-${PHPVER}.so.tgz"
[ -f "$FILE" ] && _evalq tar xzf "$FILE" -C "$_PATHMOD"

while [ ! -f "$_PATHMOD/ZendDebugger.so" ]; do
	_echoI "Unable to find '$FILE'"
	_echoI "Get ZendDebugger in http://www.zend.com/products/studio/downloads"
	_echoI "and put the correct version of file 'ZendDebugger.so' in path '$_PATHMOD' in this container"
	_askno "Confirm"
done


_echoT "----------  zenddebugger conf"

FILE="$PATHMODCONF/zend_debugger.ini"
[ ! -f "$FILE.$_DDATE" ] && [ -f "$FILE" ] && _evalq cp -a "$FILE" "$FILE.$DDATE"
_evalq cp -a "$FILE_ZENDDEBUG" "$FILE"

SCH='zend_extension'; STR="$_PATHMOD/ZendDebugger.so"; sed -i "s|^;\?\($SCH\s*=\).*|\1 $STR|" "$FILE"
SCH='zend_debugger.allow_hosts'; STR="127.0.0.0/8,${_IPS_AUTH// /,}"; sed -i "s|^;\?\($SCH\s*=\).*|\1 $STR|" "$FILE"
SCH='zend_debugger.allow_tunnel'; STR="${_IPS_AUTH// /,}"; sed -i "s|^;\?\($SCH\s*=\).*|\1 $STR|" "$FILE"
SCH='zend_debugger.httpd_uid'; STR="$(id -u www-data)"; sed -i "s|^;\?\($SCH\s*=\).*|\1 $STR|" "$FILE"


_echoT "----------  rights /var/www"

_evalq chown www-data:www-data -R "/var/www"


####################################  TESTS

_echoT "----------  add phpinf.php"

# Apache : add phpinfo
echo '<?php phpinfo() ?>' > /var/www/html/phpinf.php

<<KEEP
_echoT "----------  php test"

_echoi "To verify php configuration, test this address:"
_echoI "$THISURL/phpinf.php"
_askno "Confirm"
KEEP


# XDEBUG

_echoT "----------  xdebug enable"

_evalq php-switch debug xdebug


_echoT "----------  xdebug test"

_echoi "To verify Xdebug configuration, test this address:"
_echoI "$THISURL/phpinf.php"
_askno "Confirm"


# ZEND_DEBUGGER

_echoT "----------  zenddebugger enable"

_evalq php-switch debug zend_debugger


_echoT "----------  zenddebugger test"

_echoi "To verify Zend Debugger configuration, test this address:"
_echoI "$THISURL/phpinf.php"
_askno "Confirm"


####################################  SWITCH

_echoT "----------  php-switch $_PHPDEBUG"

_evalq php-switch debug "$_PHPDEBUG" "off"


_echoT "----------  php-switch $_PHPUSAGE"

_evalq php-switch "$_PHPUSAGE"


if [ "$_PHPMODE" == "php-fpm" ]; then

	_echoT "----------  $SERVERNAME status test"

	_echoi "To verify status & ping url, test this following addresses:"
	_echoI "$THISURL/ping-www"
	_echoI "$THISURL/status-www?html&full"
	_askno "Confirm"


	_echoT "----------  $SERVERNAME pool conf"

		#          ask for variables & source apache2.conf
		_echoi "Here is an example for a 'middle' configuration of php-fpm pool for virtualhost"
		_echo "pm = dynamic
pm.max_children = 5
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3
pm.max_requests = 100"

fi


####################################  MONITOR

_echoi "To use path '/ping-monitor' for administration enable configuration 'monitor' in apache"


####################################  END

_echoT "----------  end"

_evalq _var_unset "part" "*"
_evalq _partadd "$_PART" "$S_FILE_INSTALL_DONE"

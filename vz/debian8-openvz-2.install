#!/bin/bash
#
# write by Aguy


_echoT "\n==========================================  $S_RELEASE $_PART"


_echoT "----------  systemd remove"

_eval "apt-get remove -y systemd"

_eval "apt-get autoremove"


_echoT "----------  systemd pin package"

echo -e 'Package: *systemd*\nPin: release *\nPin-Priority: -1\n' > /etc/apt/preferences.d/avoid-systemd


_echoT "----------  openvz kernel install"

# openvz
echo "deb http://download.openvz.org/debian $S_RELEASE_NAME main
#deb http://download.openvz.org/debian ${S_RELEASE_NAME}-test main
deb http://download.openvz.org/debian wheezy main" > /etc/apt/sources.list.d/openvz.list

_eval "wget -qO - http://ftp.openvz.org/debian/archive.key | apt-key add -"
_eval "apt-get update"


_eval "apt-get --install-recommends install -y linux-image-openvz-$(dpkg --print-architecture) vzdump ploop initramfs-tools vzstats bridge-utils"


_echoT "----------  openvz conf"

echo 'EXTERNAL_SCRIPT="/usr/sbin/vznetaddbr"' >> /etc/vz/vznet.conf

sed -i 's|^\(VE_STOP_MODE=\)\(.*\)$|#\1\2\n\1stop|' /etc/vz/vz.conf


_echoT "----------  openvz arp"

sed -i 's|^#\?\(SKIP_ARPDETECT\).*|\1=yes|' /etc/vz/vz.conf


_echoT "----------  openvz sample"

[ ! -f "${S_PATH_INSTALL_CONF}/vz/ve-basic.conf-sample.$_DDATE" ] && mv "${S_PATH_INSTALL_CONF}/vz/ve-basic.conf-sample" "${S_PATH_INSTALL_CONF}/vz/ve-basic.conf-sample.$DDATE"

cp -a ${S_PATH_INSTALL_CONF}/vz/* /etc/vz/conf/


<<KEEP
_echoT "----------  sysctl.conf"

FILE=/etc/sysctl.conf
>> "$FILE"

SCH="net.ipv4.conf.default.forwarding"
STR="1"; ! grep -q "^$SCH" "$FILE" && echo "$SCH=$STR" >> "$FILE" || sed -i "s|^\($SCH\).*|\1=$STR|" "$FILE"

SCH="net.ipv4.conf.default.proxy_arp"
STR="0"; ! grep -q "^$SCH" "$FILE" && echo "$SCH=$STR" >> "$FILE" || sed -i "s|^\($SCH\).*|\1=$STR|" "$FILE"

SCH="net.ipv4.ip_forward"
STR="1"; ! grep -q "^$SCH" "$FILE" && echo "$SCH=$STR" >> "$FILE" || sed -i "s|^\($SCH\).*|\1=$STR|" "$FILE"
KEEP




_echoT "----------  ovhkernel remove"

apt remove -y ovhkernel-4.9-xxxx-std-ipv6-image


_echoT "----------  grub conf"

str=0; sed -i "s/^\(GRUB_TIMEOUT=\).*/\1$str/" /etc/default/grub
#str=1; sed -i "s/^\(GRUB_DEFAULT=\).*/\1$str/" /etc/default/grub
#str=0; sed -i "s/^\(set default=\).*/\1\"$str\"/" /boot/grub/grub.cfg

_eval "update-grub"


_echoT "----------  vz paths create"

VZPATHS="$S_HOST_PATH $S_HOST_PATH_SHARE $S_HOST_PATH_SAVE $S_VZ_PATH_TEMPLATE $S_VZ_PATH_TMP $S_VZ_PATH_NODE $S_VZ_PATH_DUMP $S_VZ_PATH_DUMP_TEMPLATE $S_VZ_PATH_DUMP_SUSPEND $S_VZ_PATH_DUMP_SNAPSHOT"
for VZPATH in $VZPATHS; do
    [ ! -d "$VZPATH" ] && mkdir -p "$VZPATH"
done

VZPATHS="$S_VZ_PATH_DUMP $S_VZ_PATH_DUMP_TEMPLATE $S_VZ_PATH_DUMP_SUSPEND $S_VZ_PATH_DUMP_SNAPSHOT"
for VZPATH in $VZPATHS; do
    [ ! -d "$VZPATH/$S_PATH_VZ_DUMP_REL_XTRA" ] && mkdir "$VZPATH/$S_PATH_VZ_DUMP_REL_XTRA"
done


_echoT "----------  vzdump modify"

cp -a /usr/share/perl5/PVE/VZDump.pm /usr/share/perl5/PVE/VZDump.pm.$(date +"%Y%m%d")
str='\"vzdump_\" . \$vmid . \"_\" . $vmname;'; pre='\tmy $vmname = `vzlist -Ho hostname $vmid`; chomp $vmname;'; sed -i "s/^\(\(.*my \$bkname = \).*\)$/#\1\n$pre\n\2$str/" /usr/share/perl5/PVE/VZDump.pm
str='sprintf \"\${bkname}_%04d%02d%02d-%02d%02d%02d\",'; sed -i "s/^\(\(.*my \$basename = \).*\)$/#\1\n\2$str/" /usr/share/perl5/PVE/VZDump.pm


_echoT "----------  logrotate conf"

file=/etc/logrotate.d/vzctl
# add compress
! grep -q compress "$file" &&  sed -i "s|^\(\s*\)\(rotate.*\)|\1\2\n\1compress|" $file
! grep -q delaycompress "$file" &&  sed -i "s|^\(\s*\)\(compress.*\)|\1\2\n\1delaycompress|" $file


_echoT "----------  end"

_eval "_partadd ${_PART} ${S_FILE_INSTALL_DONE}"

_reenter " & relaunch '${0}'"


_echoT "----------  reboot"

_echoI "wait until the system will restart & relaunch installation !"

_eval "reboot"


<<keep

--------------------------------------------------------
network_nat()

# http://help.ovh.co.uk/Proxmox

ctIp=${ctIp:-10.0.0.121}
hostInt=$S_ETH # connected to web
hostIp=${hostIp:-$(ifconfig $S_ETH | awk '/inet addr/{print substr($2,6)}')} # 91.121.133.145

# net
iptables -t nat -A POSTROUTING -s $ctIp/24 -o $hostInt -j SNAT --to $hostIp

# ssh
sshIn="1022"; iptables -t nat -A PREROUTING -i $hostInt -p tcp --dport $sshIn -j DNAT --to $ctIp:22

file='/etc/init.d/vz-nath'
echo '#!/bin/sh
' > $file
echo "
case \"\$1\" in
start) echo 'Starting iptables NAT for openvz'
    /sbin/iptables -t nat -A POSTROUTING -s 10.0.0.0/24 -o $hostInt -j SNAT --to $hostInt

    /sbin/iptables -t nat -A PREROUTING -i $hostInt -p tcp --dport 1022 -j DNAT --to $hostInt

    ;;
stop) echo 'Stopping iptables NAT for openvz'
    #replace $hostInt by the ip output
    /sbin/iptables -t nat -D POSTROUTING -s 10.0.0.0/24 -o $hostInt -j SNAT --to $hostInt

    #set the rules for adding iptables port forwarding
    /sbin/iptables -t nat -D PREROUTING -i $hostInt -p tcp --dport 1022 -j DNAT --to 10.0.0.1:22
    ;;
*) echo 'Usage: /etc/init.d/nat-vz {start|stop}'
    exit 2
    ;;
esac
exit 0" >> $file

keep

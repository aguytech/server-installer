#!/bin/bash
#
# write by Aguy

vztmpl-dl --list-all; vztmpl-dl --list-local; vztmpl-dl --update-all

vzcpucheck -v
vzmemcheck -v

/etc/vz/vz.conf			# global config file
/etc/vz/dists			# path for config files of OS type
/etc/vz/conf			# path for config files of ressources
/vz/template/cache		# path for templates
/vz/private			# path for containers created


vzlist -aHo ctid		# list all ctids
vzlist -SHo ctid,hostname	# list ctid & hostname of all stopped cts

cat /proc/bc/resources		# show ressource counters & failed counter in ct
cat /proc/bc/iostat
ll /proc/bc/101
cat /proc/bc/101/resources
cat /proc/bc/101/meminfo


----------------------------------------------------------------------------
error_arp()

# uncomment 
NEIGHBOUR_DEVS=all


----------------------------------------------------------------------------
transfert()

host="91.121.133.145"

# dump
# from home
path=/vz/dump
#for file in $(ssh root@$host "find $path -type f"); do ! [ -d ${file%/*} ] && mkdir -p ${file%/*}; scp root@$host:$file /extend/shared${file%/*}/; done
# from server
for file in $(ssh root@$host "find $path -type f"); do ! [ -d ${file%/*} ] && mkdir -p ${file%/*}; scp root@$host:$file ${file%/*}; done

# template
# from home
path=/vz/template
#for file in $(ssh root@$host "find $path -type f"); do ! [ -d ${file%/*} ] && mkdir -p ${file%/*}; scp root@$host:$file /extend/shared${file%/*}/; done
# from server
for file in $(ssh root@$host "find $path -type f"); do ! [ -d ${file%/*} ] && mkdir -p ${file%/*}; scp root@$host:$file ${file%/*}; done

# save
# from home
path=/save/vz
#for file in $(ssh root@$host "find $path -maxdepth 5 -type f"); do ! [ -d ${file%/*} ] && mkdir -p ${file%/*}; scp root@$host:$file /extend/shared${file%/*}/; done
# from server
for file in $(ssh root@$host "find $path -type f"); do ! [ -d ${file%/*} ] && mkdir -p ${file%/*}; scp root@$host:$file ${file%/*}; done
#for file in $(ssh root@$host "find $path -maxdepth 2 -type f"); do ! [ -d ${file%/*} ] && mkdir -p ${file%/*}; scp root@$host:$file ${file%/*}/; done

# server to server
pathr=/libvirt/export
pathl=/save/libvirt/export
host="91.121.133.145"
for file in $(ssh root@$host "find $pathr -type f"); do pathrel=${file%/*}; ! [ -d $pathl${pathrel/$pathr/} ] && mkdir -p $pathl${pathrel/$pathr/}; echo scp root@$host:$file $pathl${pathrel/$pathr/}/${file##*/}; done


----------------------------------------------------------------------------
variables()

cttmpl="centos-6-x86_64-minimal" # "centos-6-x86_64-minimal" "debian-7.0-x86_64-minimal"
ctname='centos6'
ctid=100
ctip=10.0.0.10
dns1=127.0.0.1 # 89.2.0.1
dns2=213.186.33.99 # 89.2.0.2
hIp=$(ifconfig eth0 | awk '/inet addr/{print substr($2,6)}')

HostGateway=10.0.0.1
HostMask=255.255.255.0


----------------------------------------------------------------------------
template_import()

# get
cd /var/lib/vz/template/cache
wget http://download.openvz.org/template/precreated/debian-7.0-x86_64-minimal.tar.gz # debian7 debian8
wget http://download.openvz.org/template/precreated/centos-6-x86_64-minimal.tar.gz # centos6


----------------------------------------------------------------------------
containers_create()

ctid=254
ctname=debian8
cttmpl=debian-8.0-x86_64-minimal # centos-6-x86_64-minimal centos-6-x86_64 debian-8-x86_64-minimal debian-8-x86_64

ctid=200
ctname=centos6
cttmpl=centos-6-x86_64-minimal # centos-6-x86_64-minimal centos-6-x86_64 debian-8-x86_64-minimal debian-8-x86_64

pwdroot='ambau<<2015'
ctip=10.0.0.$ctid
dns1=127.0.0.1 # 89.2.0.1
dns2=213.186.33.99 # 89.2.0.2


# create | sample: /etc/vz/conf
#vzctl create $ctid --ostemplate centos-6-20150226 --hostname centos61

# asks
_ask "Please enter a root password for container's user"
pwdroot=$_ANSWER

vzctl create $ctid --ostemplate $cttmpl
vzctl set $ctid --hostname $ctname --save
vzctl set $ctid --ipadd $ctip --save
vzctl set $ctid --nameserver $dns1 --nameserver $dns2 --save
vzctl set $ctid --userpasswd root:"$pwdroot"
vzctl set $ctid --physpages 256m:1024m --save
vzctl set $ctid --swappages 0:512m --save
#vzctl set $ctid --noatime yes --save
vzctl set $ctid --diskspace 2G:3G --save

vzlist -a
vzctl start $ctid

vzipt+ -y $ctid

ssh-copy-id root@$ctip

vzctl enter $ctid
vzctl stop $ctid
vzctl destroy $ctid

# start cts
ctids='101 102 110 111 112 130 131 132'; for ctid in $ctids; do vzctl start $ctid; done
for ctid in $(vzlist -aHo ctid); do ctip=10.0.0.$ctid; vzctl start $ctid; done

# stop cts
ctids='101 102 110 111 112 130 131 132'; for ctid in $ctids; do vzctl stop $ctid; done
for ctid in $(vzlist -aHo ctid); do ctip=10.0.0.$ctid; vzctl stop $ctid; done


----------------------------------------------------------------------------
template_create()

ctid=120
cttmpl=centos-6-x86_64-tuleap # centos-6-x86_64 debian-7-x86_64 debian-8.0-x86_64

vzctl start $ctid
vzctl enter $ctid
yum clean all # apt-get autoremove; apt-get clean; apt-get autoclean
exit

vzctl set $ctid --ipdel all --save
vzlist -a

echo ".bash_history
./lost+found/*
#./dev/*
./dev/log
./mnt/*
./tmp/*
./proc/*
./sys/*" > /tmp/exclude
cd /var/lib/vz/root/$ctid/
tar czf /vz/template/cache/$cttmpl.tar.gz -X /tmp/exclude .
cd /vz/template/cache
ll

# remove IPs for cts
ctids='101 102 110 111 112 130 131 132'; for ctid in $ctids; do vzctl set $ctid --ipdel all --save; done

# gives IPs for all cts
ctids='120 130'; for ctid in $ctids; do ctip=10.0.0.$ctid; vzctl set $ctid --ipdel all --ipadd $ctip --save; done
for ctid in $(vzlist -aHo ctid); do ctip=10.0.0.$ctid; vzctl set $ctid --ipdel all --ipadd $ctip --save; done


----------------------------------------------------------------------------
mount_create()

# share
path="share"

for ctid in $(vzlist -aHo ctid |xargs); do
	! [ -e "${S_VZ_PATH_CT_CONF}/${ctid}.mount" ] && echo '#!/bin/bash
# mount device for '$ctid'
' > ${S_VZ_PATH_CT_CONF}/${ctid}.mount

	echo '# '$path'
. /etc/vz/vz.conf
. ${VE_CONFFILE}
SRC_GLOBAL='$S_HOSTING_PATH_SHARE'
DST_GLOBAL='$S_VM_PATH_SHARE'
! [ -p ${VE_ROOT}${DST_GLOBAL} ] && mkdir -p ${VE_ROOT}${DST_GLOBAL}
mount -n --bind ${SRC_GLOBAL} ${VE_ROOT}${DST_GLOBAL}
' >> ${S_VZ_PATH_CT_CONF}/${ctid}.mount
 
	chmod +x ${S_VZ_PATH_CT_CONF}/${ctid}.mount
done

# RESTART containers

# log
path="log"

for ctid in $(vzlist -aHo ctid |xargs); do
	vzctl exec $ctid "cd /var/$path; tar cvzf ${S_VM_PATH_SHARE}/$path.tgz .; rm -fR /var/$path/*"
	! [ -d $S_VZ_PATH_NODE/$ctid/$path ] && mkdir -p $S_VZ_PATH_NODE/$ctid/$path
	cd $S_VZ_PATH_NODE/$ctid/$path
	mv $S_VZ_PATH_NODE/share/$path.tgz ./
	tar xzf $path.tgz
	rm $path.tgz

	! [ -e "${S_VZ_PATH_CT_CONF}/${ctid}.mount" ] && echo '#!/bin/bash
# mount device for '$ctid'

' > ${S_VZ_PATH_CT_CONF}/${ctid}.mount

	echo '# '$path'
. /etc/vz/vz.conf
. ${VE_CONFFILE}
SRC='${S_VZ_PATH_NODE}/$ctid/$path'
DST=/var/'$path'
! [ -p ${VE_ROOT}${DST} ] && mkdir -p ${VE_ROOT}${DST}
mount -n --bind ${SRC} ${VE_ROOT}${DST}
' >> ${S_VZ_PATH_CT_CONF}/${ctid}.mount
 
	chmod +x ${S_VZ_PATH_CT_CONF}/${ctid}.mount
done


----------------------------------------------------------------------------
vzdump()

ctid=100

vzdump --stop --compress --tmpdir /var/lib/vz/vztmp $ctid

vzrestore /var/lib/vz/dump/vzdump-openvz-120-2015_03_19-17_59_29.tgz $ctid
vzctl set $ctid --ipdel all --ipadd 10.0.0.$ctid  --hostname new --save
vzctl start $ctid
vzctl enter $ctid

# dump cts
ctids='101 102 110 111 112 130 131 132'; for ctid in $ctids; do vzctl set $ctid --ipdel all --save; vzdump --stop --compress --tmpdir /var/lib/vz/vztmp/ $ctid; vzctl set $ctid --ipadd 10.0.0.$ctid --save; done


----------------------------------------------------------------------------
vzrestore()

# selected name
name='debian7-git-ambau'; ctid=150; vzrestore $(ls -t /vz/dump/*_${name}_*.tgz|sort|uniq) $ctid

# selected ids
ctids='101 102 110 111 112 130 131 132'; for ctid in $ctids; do "vzrestore "$(ls -t /vz/dump/*_$ctid_*.tgz |head -1)" $ctid"; done

# all created ct
ctids="$(vzlist -aHo ctid)"; for ctid in $ctids; do "vzrestore "$(ls -t /vz/dump/*_$ctid_*.tgz |head -1)" $ctid"; done

# exited dump
ctids=$(ls -t /vz/dump/*.tgz|sed "s|^/vz/dump/vzdump_\([0-9]*\)_\([0-9a-z-]*\)_.*$|\1|"|sort|uniq); for ctid in $ctids; do "vzrestore "$(ls -t /vz/dump/*_$ctid_*.tgz |head -1)" $ctid"; done


while read file
do
	ctid=$(echo $file|sed "s|^/vz/dump/vzdump_\([0-9]*\)_\([0-9a-z-]*\)_.*$|\1|")
	echo "vzrestore "$file" $ctid"
done <<< "$(ls /vz/dump/*.tgz)"


----------------------------------------------------------------------------
network()

eth=eth0 # connected to web
venet=venet0 # connected to web
hIp=${hIp:-$(ifconfig eth0 | awk '/inet addr/{print substr($2,6)}')} # 91.121.133.145

# give acces web for one ct
ctip=10.0.0.121
iptables -t nat -A POSTROUTING -s $ctip/32 -o $eth -j SNAT --to $hIp

# give acces web for all cts
ctip=10.0.0.0
hPort=80
ctPort=80
iptables -t nat -A POSTROUTING -s $ctip/24 -o $eth -j SNAT --to $hIp
#iptables -t nat -A POSTROUTING -s $ctip/24 -o $eth -j MASQUERADE
#iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

 
# give ssh acces to ct
ctip=10.0.0.121
hPortBase=20
hPort=$hPortBase${ctip##*.}
ctPort=22
iptables -t nat -A PREROUTING -p tcp -i $eth -d $hIp --dport $hPort -j DNAT --to $ctip:$ctPort
#iptables -t nat -A POSTROUTING -s $ctip -o $eth -j SNAT --to $hIp # if web access is not already given

# re-direct port 80 to ct id 121
ctip=10.0.0.121
hPort=80
ctPort=80
iptables -t nat -A PREROUTING -j DNAT -i $eth -p tcp -d $hIp --dport $hPort --to-destination $ctip:$ctPort
# iptables -t nat -A POSTROUTING -s $ctip -o $eth -j SNAT --to $hIp # if web access is not already given
# iptables -t nat -A POSTROUTING -o $eth -p tcp --dport $hPort -d $ctip -j MASQUERADE # if web access is not already given

# ssh
sshIn="20121"; iptables -t nat -A PREROUTING -j DNAT -i $eth -p tcp --dport $sshIn --to $ctip:22


# http://help.ovh.co.uk/Proxmox

file='/etc/init.d/vz-nath'
echo '#!/bin/sh
' > $file
echo "
case \"\$1\" in
start) echo 'Starting iptables NAT for openvz'
	/sbin/iptables -t nat -A POSTROUTING -s 10.0.0.0/24 -o $eth -j SNAT --to $eth

	/sbin/iptables -t nat -A PREROUTING -i $eth -p tcp --dport 1022 -j DNAT --to $eth

	;;
stop) echo 'Stopping iptables NAT for openvz'
	#replace $eth by the ip output
	/sbin/iptables -t nat -D POSTROUTING -s 10.0.0.0/24 -o $eth -j SNAT --to $eth

	#set the rules for adding iptables port forwarding
	/sbin/iptables -t nat -D PREROUTING -i $eth -p tcp --dport 1022 -j DNAT --to 10.0.0.1:22
	;;
*) echo 'Usage: /etc/init.d/nat-vz {start|stop}'
	exit 2
	;;
esac
exit 0" >> $file


----------------------------------------------------------------------------
tmpfs()

# partition
ctid=121
vzctl stop $ctid
if ! [ -d /vz/tmpfs ]; then mkdir /vz/tmpfs; fi
echo -e "tmpfs\t\t\t/vz/tmpfs\ttmpfs\t\tdefaults,size=6G\t\t0\t0" >> /etc/fstab
mount /vz/tmpfs
if [ -d /var/lib/vz/root/$ctid ]; then mv /var/lib/vz/root/$ctid /var/lib/vz/tmpfs/$ctid; fi

# ct
str=/var/lib/vz/tmpfs; sed -i "s|^\(VE_ROOT=\"\).*\(/\$VEID\"\)$|\1$str\2|" /etc/vz/conf/$ctid.conf
vzctl start $ctid

# start
for ctid in $(vzlist -aHo ctid); do if ! [ -d /vz/root/$ctid ]; then mkdir /vz/root/$ctid; fi; done


----------------------------------------------------------------------------
rename_dump_files()

find /vz/template -name "*debian8_*" | while IFS= read line; do mv $line $(echo $line |sed "s/debian8/debian8-contrib/"); done


----------------------------------------------------------------------------
transfert()

# dump
ipDest=91.121.133.206
path=/vz/dump; for file in $(ls -1 $path); do scp $file root@$ipDest:$path/; done

# template
ipDest=91.121.133.206
path=/vz/template/cache; for file in $(ls -1 $path); do scp $file root@$ipDest:$path/; done



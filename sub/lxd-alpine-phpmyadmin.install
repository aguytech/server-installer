#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${_INSTALL}-${_PART#++}"
grep -q "^# ${_PART#++}$" ${S_FILE_INSTALL_CONF} || echo  "# ${_PART#++}" >> ${S_FILE_INSTALL_CONF}

########################  REQUIRED

_echot "------------------ required vm"
img_all_www=$(lxc image list -f csv -c l| grep '^wap-')
[ "${img_all_www}" ] || _exite "Unable to find a www image container"

profiles_all_php=$(lxc profile list -f csv|grep "^php.*,"|cut -d, -f1)
[ -z "${profiles_all_php}" ] && _exite "Unable to find a php profile"

cts_all_maria=$(lxc list -f json | jq -r '.[] | select(.profiles | any(contains("mdb-"))).name')
[ -z "${cts_all_maria}" ] && _exite "Unable to find a container with maria profile"

fc_pma_config=${S_PATH_INSTALL_CONF}/pma/pma-config.inc.php
fc_pma_part=${S_PATH_INSTALL_CONF}/pma/pma-part-config.inc.php
fc_pma_site=${S_PATH_INSTALL_CONF}/apache2/sites/sub-admin.conf

_echot "------------------ required files"
_require ${fc_pma_config} ${fc_pma_part} ${fc_pma_site}

########################  DATA

[ -z ${_MDB_PWD_ADMIN+x} ] && { anstmp=`_pwd`; _askno "Password for root admin access (${anstmp})"; _MDB_PWD_ADMIN="${_ANSWER:-${anstmp}}"; }

_echot "------------------  data domain"

[ -z ${_APA_DOM_FQDN+x} ] && { anstmp=${S_DOM_FQDN}; _askno "Domain name to use (${anstmp})"; _APA_DOM_FQDN="${_ANSWER:-${anstmp}}"; }

[ -z ${_PMA_CT_NAME+x} ] && { anstmp=wap-${_APA_DOM_ADMIN}-${S_DOM_NAME//./-}; _askno "Base name of containers to build (${anstmp})"; _PMA_CT_NAME="${_ANSWER:-${anstmp}}"; }

[ -z ${_PMA_CT_NUM+x} ] && { anstmp=2; _askno "Number of containers to build (${anstmp})"; _PMA_CT_NUM="${_ANSWER:-${anstmp}}"; }

[ -z ${_PMA_DOM_SUB+x} ] && { anstmp=pma; _askno "Give the subdomain for phpmyadmin (${anstmp})"; _PMA_DOM_SUB="${_ANSWER:-${anstmp}}"; }

_echot "------------------  data www"

[ -z ${_PMA_CT_WWW+x} ] && { _menu "Select one available image container to copy for www service" ${img_all_www}; _PMA_CT_WWW=${_ANSWER}; }

if [ -z ${_PMA_WWW_PROFILE+x} ]; then
	profiles=$(lxc profile list -f csv|grep "^www.*,"|cut -d, -f1)
	[ "${profiles}" ] && _menu "Select an available www profile to apply or none" none ${profiles} || _ANSWER=
	_PMA_WWW_PROFILE="${_ANSWER/none/}"
	[ -z "${_PMA_WWW_PROFILE}" ] && { anstmp=www-${_APA_DOM_ADMIN}.${_APA_DOM_FQDN}; _askno "Name of the new  www profile (${anstmp})"; _PMA_WWW_PROFILE="${_ANSWER:-${anstmp}}"; }
fi

_echot "------------------  data php"

[ -z ${_PMA_PHP_PROFILE+x} ] && { _menu "Select an available PHP profile to apply" ${profiles_all_php} || _ANSWER=; _PMA_PHP_PROFILE="${_ANSWER}"; }

_echot "------------------  data mariadb"

[ -z ${_PMA_CT_DBS+x} ] && { _menua "Select mariadb container to administrate" ${cts_all_maria}; _PMA_CT_DBS=$(echo "${_ANSWER}"|sort -r|xargs); }

if [ -z "${_MDB_PWD_HOST+x}" ]; then
	# _MDB_PWD_HOST
	ok=false; while ! ${ok}; do
		_askno "Password for user: roothost"
		ok=true
		for ct_name in ${_PMA_CT_DBS}; do
			mysql -s -h${ct_name} -uroothost -p${_MDB_PWD_HOST} -e '' || { _echoe "Unable to connect to: ${ct_name} with pwd: ${_ANSWER}"; ok=false; }
		done
	done
	_MDB_PWD_HOST=${_ANSWER}
else
	# check password
	for ct_name in ${_PMA_CT_DBS}; do
		mysql -s -h${ct_name} -uroothost -p${_MDB_PWD_HOST} -e '' || _exite "Unable to connect to: ${ct_name} with pwd: ${_ANSWER}"
	done
fi

_echot "------------------  data file"

if [ -z "${_PMA_APP_VERSION+x}" ]; then
	ok=false; while ! ${ok}; do
		anstmp=5.1.1 && _askno "version of phpMyAdmin to download (${anstmp})"
		_PMA_APP_VERSION="${_ANSWER:-${anstmp}}"
		file_app=phpMyAdmin-${_PMA_APP_VERSION}-all-languages.tar.gz
		file_app_tmp=/tmp/${file_app}
		uri=https://files.phpmyadmin.net/phpMyAdmin/${_PMA_APP_VERSION}/${file_app}
		if ! [ -f "${file_app_tmp}" ] || [ "$(ls -s ${file_app_tmp}|cut -d' ' -f1)" = 0 ]; then
			_echot "------------------  wget ${file_app}"
			wget -q ${uri} -O ${file_app_tmp} && ok=true || _echoe "Unable to get file: ${uri}"
		else
			ok=true
		fi
	done
else
	file_app=phpMyAdmin-${_PMA_APP_VERSION}-all-languages.tar.gz
	file_app_tmp=/tmp/${file_app}
	uri=https://files.phpmyadmin.net/phpMyAdmin/${_PMA_APP_VERSION}/${file_app}
	wget -q ${uri} -O ${file_app_tmp} || _exite "Unable to get file: ${uri}"
fi

[ -z ${_PMA_APP_DB_PWD+x} ] && _PMA_APP_DB_PWD=$(_pwd)
[ -z ${_PMA_APP_BLOWFISH+x} ] && _PMA_APP_BLOWFISH=$(_pwd32)

_CT_NAME=${_PMA_CT_NAME}-1
_APA_PATH_DOM=${S_VM_PATH_SHARE}/www/${_APA_DOM_ADMIN}.${_APA_DOM_FQDN}
_PMA_APP_URI=https://${_PMA_DOM_SUB}.${_APA_DOM_FQDN}
_PMA_APP_DB_PORT=${S_DB_MARIA_PORT_RW}
_PMA_APP_DB_NAME=phpmyadmin
_PMA_APP_DB_USER=pma
_PMA_APP_PATH_UP=${S_VM_PATH_SHARE}/php/up
_PMA_APP_PATH_DW=${S_VM_PATH_SHARE}/php/down

cts_php=$(for i in $(seq 1 ${_PMA_CT_NUM}); do echo ${_PMA_CT_NAME}-${i}; done)
strpass=

########################  CONFIGURATION

# load configuration file
. ${S_FILE_INSTALL_CONF}

########################  PROFILE

profile=${_PMA_WWW_PROFILE}
if ! lxc profile list -f csv|grep -q "^${profile},"; then
	_echot "------------------  profile create ${profile}"
	_eval lxc profile create ${profile}

	path=${S_HOST_PATH_SHARE}/www/${_APA_DOM_ADMIN}.${_APA_DOM_FQDN}
	path_ct=${_APA_PATH_DOM}
	[ -d ${path} ] || _evalr mkdir -p ${path}
	_evalr chown -R ${_LXD_UID}:${_LXD_UID} ${S_HOST_PATH_SHARE}/www
	_eval lxc profile device add ${profile} ${profile} disk source=${path} path=${path_ct}
else
	_echot "------------------  existing profile ${profile}"
fi

#######################  INIT

_echot "------------------  init"
if lxc list -f csv -c n | grep -q ^${_CT_NAME}$; then
	lxc list -f csv -c n status=Running| grep -q ^${_CT_NAME}$ && _eval lxc stop ${_CT_NAME}
	_echot "------------------ rename ${_CT_NAME} -> ${_CT_NAME}-${_SDATE}"
	_eval lxc rename ${_CT_NAME} ${_CT_NAME}-${_SDATE}
fi
_eval lxc init ${_PMA_CT_WWW} ${_CT_NAME} -p default -p global -p ${_PMA_WWW_PROFILE}  -p ${_PMA_PHP_PROFILE}

########################  METADATA

_echot "------------------  metadata"
_lxc_meta_set ${_CT_NAME} profiles ${_PMA_WWW_PROFILE} ${_PMA_PHP_PROFILE} ${profile}
_lxc_meta_add ${_CT_NAME} apps phpmyadmin

#############  START

_echot "------------------  ${_CT_NAME} start"
lxc list -f csv -c n status=Stopped | grep -q ^${_CT_NAME}$ && _eval lxc start ${_CT_NAME}

#############  WWW

_echot "------------------  site default keep"
file=${_APA_PATH_SITES}/default.conf
_lxc_exec ${_CT_NAME} "[ -f ${file} ] && mv ${file} ${file}.keep"

_echot "------------------  ping-monitor file"
_lxc_exec ${_CT_NAME} "echo '<?php echo \"admin\"; ?>' > ${_APA_PATH_WWW}/html/ping-monitor.php"

#_echot "------------------  ping-monitor"
#_lxc_exec ${_CT_NAME} "echo 'admin' > ${_APA_PATH_WWW}/html/ping-monitor.html"

#############  SITE ADMIN

_APA_SUB=${_APA_DOM_ADMIN}
domain=${_APA_SUB}.${_APA_DOM_FQDN}

_echot "------------------  ${domain} htpasswd"
file=${_APA_PATH_WWW}/pwd
_lxc_exec ${_CT_NAME} "[ -f '${file}' ] && opt=b || opt=cb; htpasswd -\${opt} ${file} admin ${_APA_PWD_ADMIN}"

_echot "------------------  ${domain} path"
path=${_APA_PATH_DOM}/${_APA_DOM_ADMIN}
_lxc_exec ${_CT_NAME} "[ -d ${path} ] || mkdir -p ${path}"

_echot "------------------  ${domain} index.php"
file=${_APA_PATH_DOM}/${_APA_DOM_ADMIN}/index.php
_lxc_exec ${_CT_NAME} "echo '<html><body><h1><?php echo \"php ${_APA_DOM_ADMIN} works! \" ?></h1></body></html>' > ${file}"

_echot "------------------  ${domain} conf apache"
file=${_APA_PATH_SITES}/${_APA_DOM_ADMIN}.conf
_eval lxc file push -q ${fc_pma_site} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} apache

#############  SITE APP

_APA_SUB=${_PMA_DOM_SUB}
domain=${_APA_SUB}.${_APA_DOM_FQDN}

_echot "------------------  ${domain} conf apache"
file=${_APA_PATH_SITES}/${_PMA_DOM_SUB}.conf
_eval lxc file push -q ${fc_pma_site} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} apache
_lxc_exec ${_CT_NAME} "sed -i 's|^\(\s*\)#\?\(SetEnv PHP_ADMIN_VALUE .session.gc_maxlifetime =\).*$|\1\2 14400\"|' ${file}"

_echot "------------------  ${domain} file"
path=${_APA_PATH_DOM}/${file_app%.tar.gz}
_lxc_exec ${_CT_NAME} "[ -d ${path} ] && mv ${path} ${path}.${_SDATE}"

path=${_APA_PATH_DOM}
_eval lxc file push -q ${file_app_tmp} ${_CT_NAME}/${path}/
_lxc_exec ${_CT_NAME} "tar xzf ${path}/${file_app} -C ${path}" || _exite "Unable to decompress file: ${file}"
_lxc_exec ${_CT_NAME} "[ -h ${path}/${_PMA_DOM_SUB} ] && rm ${path}/${_PMA_DOM_SUB}"
_lxc_exec ${_CT_NAME} "cd ${path} && ln -sv ${file_app%.tar.gz} ${_PMA_DOM_SUB}"

_echot "------------------  ${domain} path tmp"
path=${_APA_PATH_DOM}/${_PMA_DOM_SUB}/tmp
_lxc_exec ${_CT_NAME} "[ -d ${path} ] || mkdir -p ${path}"

_echot "------------------  ${domain} ${_PMA_DOM_SUB} conf"
file=${_APA_PATH_DOM}/${_PMA_DOM_SUB}/config.inc.php
_eval lxc file push -q ${fc_pma_config} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} pma
#[ "${_APA_DOM_FQDN##*.}" = lxd ] && _lxc_exec ${_CT_NAME} "sed -i '/.cfg..PmaAbsoluteUri/ s|https|http|' ${file}"

file_part=${_APA_PATH_DOM}/${_PMA_DOM_SUB}/config-part.inc.php
for ct_maria in ${S_SERVICE[proxy]} $(echo ${_PMA_CT_DBS}|tr ' ' '\n'|sort -r); do
	_echot "------------------  ${domain} conf ${_PMA_CT_DBS}"
	_eval lxc file push -q ${fc_pma_part} ${_CT_NAME}${file_part}
	_PMA_APP_DB_HOST=${ct_maria}
	_lxc_var_replace ${_CT_NAME} ${file_part} pma
	_lxc_exec ${_CT_NAME} "sed -i -e '/#partadd/r ${file_part}' ${file}" >/dev/null
done

_echot "------------------  ${_CT_NAME} pull sql file"
file_tables=/tmp/create_tables.sql
_evalr lxc file pull ${_CT_NAME}/${_APA_PATH_DOM}/${_PMA_DOM_SUB}/sql/create_tables.sql ${file_tables}

########################  RIGHTS

_echot "------------------  rights"
_lxc_exec ${_CT_NAME} "chown apache:apache -R ${_APA_PATH_WWW}"
_lxc_exec ${_CT_NAME} "chown apache:apache -R ${_APA_PATH_DOM}/*"

#############  RESTART

_echot "------------------  ${_PHP_SERVICE} restart"
_lxc_exec ${_CT_NAME} "rc-service ${_PHP_SERVICE} restart"

_echot "------------------  apache2 restart"
_lxc_exec_e ${_CT_NAME} "rc-service apache2 restart"

########################  MARIADB

for ct_maria in ${_PMA_CT_DBS}; do

	_echoT "\n==========  for ${ct_maria}"

	_echot "------------------  ${ct_maria} db create"
	cmd="CREATE DATABASE IF NOT EXISTS ${_PMA_APP_DB_NAME};"
	_eval "mysql -h${ct_maria} -uroothost -p${_MDB_PWD_HOST} -e \"${cmd}\""

	_echot "------------------  ${ct_maria} tables create"
	_eval "mysql -h${ct_maria} -uroothost -p${_MDB_PWD_HOST} < ${file_tables}"

	for ct_php in ${cts_php}  ${S_SERVICE[proxy]}; do

		_echot "------------------  ${ct_maria} ${_PMA_APP_DB_USER} grant"
		cmd="GRANT USAGE ON *.* TO '${_PMA_APP_DB_USER}'@'${ct_php}.lxd' IDENTIFIED BY '${_PMA_APP_DB_PWD}';"
		_eval "mysql -h${ct_maria} -uroothost -p${_MDB_PWD_HOST} -e \"${cmd}\""
		cmd="GRANT ALL PRIVILEGES ON ${_PMA_APP_DB_NAME}.* TO '${_PMA_APP_DB_USER}'@'${ct_php}.lxd';"
		_eval "mysql -h${ct_maria} -uroothost -p${_MDB_PWD_HOST} -e \"${cmd}\""

		_echot "------------------  ${ct_maria} ${_PMA_APP_DB_USER} strpass"
		strpass+="${_PMA_APP_DB_USER} @ ${ct_php}.lxd - ${_PMA_APP_DB_PWD}\n"

		_echot "------------------  ${ct_maria} rootadmin grant"
		cmd="GRANT ALL PRIVILEGES ON *.* TO rootadmin@'${ct_php}.lxd' IDENTIFIED BY '${_MDB_PWD_ADMIN}' WITH GRANT OPTION;"
		_eval "mysql -h${ct_maria} -uroothost -p${_MDB_PWD_HOST} -e \"${cmd}\""

		_echot "------------------  ${ct_maria} rootadmin strpass"
		strpass+="rootadmin @ ${ct_php}.lxd - ${_MDB_PWD_ADMIN}\n"
	done

done

########################  COPY

for i in `seq 2 ${_PMA_CT_NUM}`; do
	ct_name=${_PMA_CT_NAME}-${i}
	_echot "---------- build ${ct_name}"

	if lxc list -f csv -c n | grep -q ^${ct_name}$; then
		lxc list -f csv -c n status=Running| grep -q ^${ct_name}$ && _eval lxc stop ${ct_name}
		_echo "---------- move ${ct_name} to ${ct_name}-${_SDATE}"
		_eval lxc rename ${ct_name} ${ct_name}-${_SDATE}
	fi
	_eval lxc copy ${_CT_NAME} ${ct_name}
	_eval lxc start ${ct_name}
done

########################  HAPROXY

_echot "------------------  ${S_SERVICE[proxy]} backend"
file=/etc/haproxy/conf-available/50-backs-80
_lxc_exec ${S_SERVICE[proxy]} "sed -i '/^backend\s*${_APA_DOM_ADMIN}-${_APA_DOM_FQDN}/,$ s|#server|server|' ${file}"

_echot "------------------  ${S_SERVICE[proxy]} reload"
_lxc_exec ${S_SERVICE[proxy]} "rc-service haproxy reload"

########################  SHOW

_echot "------------------  show privileges"
for ct_maria in ${_PMA_CT_DBS}; do
	_echoa "${ct_maria}:"
	_eval "mysql -h${ct_maria} -uroothost -p${_MDB_PWD_HOST} -e \"SELECT user,host FROM mysql.user WHERE user like '${_PMA_APP_DB_USER}';\""
done

_echot "------------------  show passwords"
_echoA "Keep this passwords:"
_echo "${strpass%\\n}"

########################  PUBLISH

for ct_name in ${cts_php} ${_PMA_CT_DBS}; do
	_echot "------------------  publish ${ct_name}"

	lxc image list -f csv -c l | grep -q ^${ct_name}$ && _eval lxc image alias rename ${ct_name} ${ct_name}-${_SDATE}
	_eval lxc publish --force ${ct_name} --alias ${ct_name}
done

########################  END

_echoT "===================== ${_PART} end"
_partadd ${_PART#++} ${S_FILE_INSTALL_DONE}

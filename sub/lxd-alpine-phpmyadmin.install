#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${_RELEASE} ${_PART}"

grep -q "^# ${_PART#++}$" ${S_FILE_INSTALL_CONF} || echo  "# ${_PART}" | _evalqr tee -a ${S_FILE_INSTALL_CONF}

########################  REQUIRED

_echoT "------------------ required vm"
cts_all_php=`lxc list -f json | jq -r '.[] | select(.profiles | any(contains("php"))).name'`
cts_all_maria=`lxc list -f json | jq -r '.[] | select(.profiles | any(contains("maria"))).name'`
[ -z "${cts_all_php}" ] && _exite "unable to find container with php* profile"
[ -z "${cts_all_maria}" ] && _exite "unable to find container with php* profile"

file_conf=${S_PATH_INSTALL_CONF}/php/pma-config.inc.php
file_conf_part=${S_PATH_INSTALL_CONF}/php/pma-part-config.inc.php
file_site=${S_PATH_INSTALL_CONF}/apache2/sub.conf

_echoT "------------------ required files"
_require ${file_conf} ${file_conf_part} ${file_site}


########################  DATA

[ -z ${_MDB_PWD_ADMIN+x} ] && _MDB_PWD_ADMIN=`_pwd` && _confset _MDB_PWD_ADMIN "${_MDB_PWD_ADMIN}"

_echoT "----------  data"

# _CT_NAME
_menua "Select one available php container to use" ${cts_all_php}
cts_php=$(echo ${_ANSWER})
if [ -z "${cts_php}" ]; then
	_menu "Select one available php container to copy from" ${cts_all_php}
	ct_from=${_ANSWER}
fi
ct_tmp=${cts_php%% *} && ct_tmp=${ct_from:-${ct_tmp}}

_echoT "----------  ${ct_tmp} start"
lxc list -f csv -c n status=Stopped | grep -q ^${ct_tmp}$ && _eval lxc start ${ct_tmp}

# _APA_DOMAIN
_APA_DOMAIN=$(lxc exec ${ct_tmp} -- sh -c "ls -1 ${S_VM_PATH_SHARE}/www | grep ^admin")
if [ "${_APA_DOMAINs}" ]; then
	_menu "Select one available _APA_DOMAIN to use or none" none ${_APA_DOMAINs}
	_APA_DOMAIN=${_ANSWER}
fi
if [ -z "${_APA_DOMAIN}" ] || [ "${_APA_DOMAIN}" = none ]; then
	[ -z "${_APA_DOMAIN}" ] && _echo "No available admin ${_APA_DOMAIN} found"
 	anstmp=admin.${S_DOMAIN_FQDN} && _askno "Give a fqdn domain for admin (${anstmp})"
 	_APA_DOMAIN="${_ANSWER:-$anstmp}"
fi

# cts_php no chosen
if [ -z "${cts_php}" ]; then
	anstmp=www-admin-${S_DOMAIN_NAME}-1 && _askno "Give names for the new admin container (${anstmp})"
	cts_php="${_ANSWER:-$anstmp}"
fi

# cts_maria
_menua "Select mariadb container to administrate" ${cts_all_maria}
cts_maria=$(echo "${_ANSWER}"|sort -r|xargs)
_echod cts_maria=${cts_maria}

# pwd_maria
ct_name=${cts_maria%% *}
ok=false; while ! ${ok}; do
	_askno "Password for user: 'roothost' for '${ct_name}'"
	[ "${_ANSWER}" ] && mysql -s -h${ct_name} -uroothost -p${_ANSWER} -e '' && ok=true || _echo "Unable to connect to: ${ct_name}"
done
pwd_maria=${_ANSWER}
_echod pwd_maria=${pwd_maria}

# pma_version & file_pma
ok=false; while ! ${ok}; do
	anstmp=5.1.1 && _askno "version of phpMyAdmin to download (5.1.1)"
	pma_version="${_ANSWER:-$anstmp}"
	file_pma=phpMyAdmin-${pma_version}-all-languages.tar.gz
	file_pma_tmp=/tmp/${file_pma}
	uri=https://files.phpmyadmin.net/phpMyAdmin/${pma_version}/${file_pma}
	if ! [ -f ${file_pma_tmp} ]; then
		_echoT "----------  wget ${file_pma}"
		wget -q ${uri} -O ${file_pma_tmp} && ok=true || _echoe "Unable to get version: ${uri}"
	else
		ok=true
	fi
done

_APA_PATH_DOMAIN=${S_VM_PATH_SHARE}/www/${_APA_DOMAIN}
_APA_SUBDOMAIN=admin
_PMA_URI=https://${_APA_SUBDOMAIN}.${S_DOMAIN_FQDN}
_PMA_PORT=${S_DB_MARIA_PORT}
_PMA_USER=pma
_PMA_PWD=`_pwd`
_PMA_BLOWFISH=`_pwd32`
_PMA_PATH_UP=${S_VM_PATH_SHARE}/php/up
_PMA_PATH_DW=${S_VM_PATH_SHARE}/php/down

path_sites=/etc/apache2/sites
db_pma=phpmyadmin
eval ${S_HOST_VM_ETH[default]}


########################  PROFILE

profile=www-${_APA_DOMAIN}
_echoT "----------  profile ${profile}"

lxc profile list -f csv|grep -q "^${profile}," && _eval lxc profile rename ${profile} ${profile}.${_SDATE}
_eval lxc profile create ${profile}

path=${S_HOST_PATH_SHARE}/www/${_APA_DOMAIN}
path_ct=${_APA_PATH_DOMAIN}
[ -d ${path} ] || _evalr mkdir -p ${path}
_eval lxc profile device add ${profile} ${profile} disk source=${path} path=${path_ct}


########################  LOOP CT

for ct_php in ${cts_php}; do

	_echoT "\n==========  for ${ct_php}"

	#############  COPY

	if [ "${ct_from}" ]; then

		if lxc list -f csv -c n | grep -q ^${ct_php}$; then
			_echoT "----------  ${ct_php} rename to ${ct_php}-${_SDATE}"
			if lxc list -f csv -c n status=Running| grep -q ^${ct_php}$; then
				_eval lxc stop ${ct_php}
				_eval lxc rename ${ct_php} ${ct_php}-${_SDATE}
				_eval lxc start ${ct_php}-${_SDATE}
			else
				_eval lxc rename ${ct_php} ${ct_php}-${_SDATE}
			fi
		fi

		_echoT "----------  ${ct_php} copy from ${ct_from}"
		_eval lxc copy ${ct_from} ${ct_php}
	fi

	#############  START

	_echoT "----------  ${ct_php} start"
	lxc list -f csv -c n status=Stopped | grep -q ^${ct_php}$ && _eval lxc start ${ct_php}

	#############  PROFILE

	# remove profiles
	profiles=`lxc list ^${ct_php}$ -f json | jq -r '.[].profiles[]' | grep '^www-'`
	if [ "${profiles}" ]; then
		 _menur "Select profiles to remove" ${profiles}

		_echoT "----------  profile remove ${profiles}"
		for profile in ${_ANSWER}; do
			_eval lxc profile remove ${ct_php} ${profile}
			path=${S_VM_PATH_SHARE}/www/${profile}
			_lxc_exec ${ct_php} "[ -d ${path} ] && rmdir ${path}"
		done
	fi

	profile=www-${_APA_DOMAIN}
	lxc list ^${ct_php}$ -f json | jq -r '.[].profiles[]' | grep -q "^${profile}$" && lxc profile rename ${profile} ${profile}.${_SDATE}
	_echoT "----------  profile add ${ct_php}"
	_eval lxc profile add ${ct_php} ${profile}

	#############  WWW

	_echoT "----------  site default keep"
	file=${path_sites}/default.conf
	_lxc_exec ${ct_php} "[ -f ${file} ] && mv ${file} ${file}.keep"

	_echoT "----------  ping-monitor file"
	_lxc_exec ${ct_php} "echo '<?php echo \"admin\"; ?>' > ${_APA_PATH_WWW}/ping-monitor.php"

	_echoT "----------  ping-monitor"
	_lxc_exec ${ct_php} "echo 'admin' > ${_APA_PATH_WWW}/ping-monitor.html"


	#############  SITE ADMIN

	domain=${_APA_DOMAIN}
	_echoT "----------  ${domain} path"

	path=${_APA_PATH_DOMAIN}/admin
	_lxc_exec ${ct_php} "[ -d ${path} ] || mkdir -p ${path}"

	_echoT "----------  ${domain} index.php"

	file=${_APA_PATH_DOMAIN}/admin/index.php
	_lxc_exec ${ct_php} "echo '<html><body><h1><?php echo \"php admin works! \" ?></h1></body></html>' > ${file}"


	_echoT "----------  ${domain} conf apache"

	file=${path_sites}/admin.conf
	_eval lxc file push ${file_site} ${ct_php}${file}
	_APA_SUBDOMAIN=admin
	_lxc_var_replace ${ct_php} ${file} apache


	#############  SITE PMA

	domain=pma.${S_DOMAIN_FQDN}

	_echoT "----------  ${domain} conf apache"

	file=${path_sites}/pma.conf
	_eval lxc file push ${file_site} ${ct_php}${file}
	_APA_SUBDOMAIN=pma
	_lxc_var_replace ${ct_php} ${file} apache
	_lxc_execq ${ct_php} "sed -i 's|^\(\s*\)#\?\(SetEnv PHP_ADMIN_VALUE .session.gc_maxlifetime =\).*$|\1\2 14400\"|' ${file}"

	_echoT "----------  ${domain} file"

	path=${_APA_PATH_DOMAIN}/${file_pma%.tar.gz}
	_lxc_exec ${ct_php} "[ -d ${path} ] && mv ${path} ${path}.${_SDATE}"

	path=${_APA_PATH_DOMAIN}
	_eval lxc file push ${file_pma_tmp} ${ct_php}/${path}/
	_lxc_exec ${ct_php} "tar xzf ${path}/${file_pma} -C ${path}" || _exite "Unable to decompress file: ${file}"
	_lxc_exec ${ct_php} "[ -h ${path}/pma ] && rm ${path}/pma"
	_lxc_exec ${ct_php} "cd ${path} && ln -sv ${file_pma%.tar.gz} pma"


	_echoT "----------  ${domain} path tmp"

	path=${_APA_PATH_DOMAIN}/pma/tmp
	_lxc_exec ${ct_php} "[ -d ${path} ] || mkdir -p ${path}"
	_lxc_exec ${ct_php} "chown nobody:nobody ${path} && chmod 700 ${path}"


	_echoT "----------  ${domain} pma conf"

	file=${_APA_PATH_DOMAIN}/pma/config.inc.php
	_eval lxc file push ${file_conf} ${ct_php}${file}
	_lxc_var_replace ${ct_php} ${file} pma
	[ "${S_DOMAIN_FQDN##*.}" = lxd ] && _lxc_exec ${ct_php} "sed -i '/.cfg..PmaAbsoluteUri/ s|https|http|' ${file}"

	file_part=${_APA_PATH_DOMAIN}/pma/config-part.inc.php
	for ct_maria in ${cts_maria}; do
		_echoT "----------  ${domain} conf ${cts_maria}"
		_eval lxc file push ${file_conf_part} ${ct_php}${file_part}
		_PMA_HOST=${ct_maria}
		_lxc_var_replace ${ct_php} ${file_part} pma
		_lxc_exec ${ct_php} "sed -i -e '/#partadd/r ${file_part}' ${file}" >/dev/null
	done

	########################  RIGHTS

	_echoT "----------  rights"
	_lxc_exec ${_CT_NAME} "chown nobody:nobody -R ${_APA_PATH_WWW}"
	_lxc_exec ${_CT_NAME} "chown nobody:nobody -R ${_APA_PATH_DOMAIN}/*"


	#############  RESTART

	_echoT "----------  ${_PHP_SERVICE} restart"
	_lxc_exec ${ct_php} "rc-service ${_PHP_SERVICE} restart"

	_echoT "----------  apache2 restart"
	_lxc_exec ${ct_php} "rc-service apache2 restart"

done

ct_php=${cts_php%% *}
file_tables=/tmp/create_tables.sql
_echoT "----------  ${ct_php} pull create tables file"
lxc file pull ${ct_php}/${_APA_PATH_DOMAIN}/pma/sql/create_tables.sql ${file_tables}


########################  MARIADB

for ct_maria in ${cts_maria}; do

	_echoT "\n==========  for ${ct_maria}"

	_echoT "----------  ${ct_maria} db create"
	cmd="CREATE DATABASE IF NOT EXISTS ${db_pma};"
	_eval "mysql -h${ct_maria} -uroothost -p${pwd_maria} -e \"${cmd}\""

	_echoT "----------  ${ct_maria} tables create"
	_eval "mysql -h${ct_maria} -uroothost -p${pwd_maria} < ${file_tables}"

	for ct_php in ${cts_php}; do

		_echoT "----------  ${ct_maria} pma strpass"
		file=${S_PATH_CONF}/mariadb
		str="${_PMA_USER} @ ${ct_php}.lxd - ${_PMA_PWD}"
		strpass+="${str}\n"
		cmd="grep -q ^pma ${file} && sed -i '/^pma/c ${str}'  ${file} || sed -i '\$a ${str}' ${file}"
		_lxc_exec ${ct_maria} "${cmd}"

		_echoT "----------  ${ct_maria} pma grant"
		cmd="GRANT USAGE ON *.* TO '${_PMA_USER}'@'${ct_php}.lxd' IDENTIFIED BY '${_PMA_PWD}';"
		_eval "mysql -h${ct_maria} -uroothost -p${pwd_maria} -e \"${cmd}\""
		cmd="GRANT ALL PRIVILEGES ON ${db_pma}.* TO '${_PMA_USER}'@'${ct_php}.lxd';"
		_eval "mysql -h${ct_maria} -uroothost -p${pwd_maria} -e \"${cmd}\""

		_echoT "----------  ${ct_maria} rootadmin strpass"
		file=${S_PATH_CONF}/mariadb
		str="rootadmin @ ${ct_php}.lxd - ${_MDB_PWD_ADMIN}"
		strpass+="${str}\n"
		cmd="grep -q '^rootadmin @ ${ct_php}.lxd' ${file} && sed -i '/^rootadmin @ ${ct_php}.lxd/c ${str}'  ${file} || sed -i '\$a ${str}' ${file}"
		_lxc_exec ${ct_maria} "${cmd}"

		_echoT "----------  ${ct_maria} rootadmin grant"
		cmd="GRANT ALL PRIVILEGES ON *.* TO rootadmin@'${ct_php}.lxd' IDENTIFIED BY '${_MDB_PWD_ADMIN}' WITH GRANT OPTION"
		_eval "mysql -h${ct_maria} -uroothost -p${pwd_maria} -e \"${cmd}\""
	done

done


########################  SHOW

_echoT "----------  show privileges"
for ct_maria in ${cts_maria}; do
	_echo "${ct_maria}:"
	_eval "mysql -h${ct_maria} -uroothost -p${pwd_maria} -e \"SELECT user,host FROM mysql.user WHERE user like 'pma';\""
done

_echoT "----------  show passwords"
_echoI "Keep this passwords:"
_echoW "${strpass%\\n}"


########################  PUBLISH

for ct_name in ${cts_php} ${cts_maria}; do
	_echoT "----------  publish ${ct_name}"

	lxc image list -f csv -c l | grep -q ^${ct_name}$ && _eval lxc image alias rename ${ct_name} ${ct_name}-$(date +%s)
	_eval lxc publish --force ${ct_name} --alias ${ct_name}
done


########################  END

_echoT "===================== ${_PART} end"
_partadd ${_PART#++} ${S_FILE_INSTALL_DONE}

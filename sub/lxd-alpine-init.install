#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${_RELEASE_ID} ${_PART}"


########################  DATA

_echoT "----------  ${_RELEASE_ID} data"

[ -z ${_RELEASE_NAME+x} ] && anstmp="3.14" && _askno "Give a version image container for LXC ${_RELEASE_ID} ($anstmp)" && _RELEASE_NAME=${_ANSWER:-$anstmp} && _confset _RELEASE_NAME "${_RELEASE_NAME}"

[ -z ${_RELEASE+x} ] && _RELEASE=${_RELEASE_ID}${_RELEASE_NAME} && _confset _RELEASE "${_RELEASE}"

_CT_NAME="${_RELEASE/./}"


########################  COPY

_echoT "----------  ${_RELEASE} copy"

if ! [ "`lxc image list -f json | jq -r '.[].aliases[].name | select(. | contains("'${_CT_NAME}'"))'`" ]; then
	_echo "copy images ${_CT_NAME}"
	_eval lxc image copy images:${_RELEASE_ID}/${_RELEASE_NAME} local: --alias ${_CT_NAME} --auto-update
fi


########################  PROFILE

profile=global
_echoT "----------  profiles ${profile}"

lxc profile list -f csv|grep -q "^${profile}," && _eval lxc profile rename ${profile} ${profile}.${_SDATE}
_eval lxc profile create ${profile}

path="${S_HOST_PATH_SHARE}/global"
path_ct="${S_VM_PATH_SHARE}/global"
[ -d ${path} ] || _eval mkdir -p ${path}
_eval lxc profile device add ${profile} global disk source=${path} path=${path_ct}


########################  INIT

_echoT "----------  ${_CT_NAME} init"

if [ "`lxc list -f json | jq -r '.[] | select(.name == "'${_CT_NAME}'").name'`" ]; then
	[ "`lxc list -f json | jq -r '.[] | select(.status == "Running") | select(.name == "'${_CT_NAME}'").name'`" ] && lxc stop ${_CT_NAME}
	_eval lxc rename ${_CT_NAME} ${_CT_NAME}-${_SDATE}
fi
_eval lxc init ${_CT_NAME} ${_CT_NAME} -p stock -p global


#_echoT "----------  ${_CT_NAME} profile global"

#if ! [ "`lxc list "${_CT_NAME}" -f json | jq -r '.[] | select(.profiles | any(contains("global"))).name'`" ]; then
#	lxc profile add "${_CT_NAME}" global
#fi


if ! [ "`lxc list -f json | jq -r '.[] | select(.status == "Running") | select(.name == "'${_CT_NAME}'").name'`" ]; then
	_echoT "----------  start ${_CT_NAME}"

	_eval lxc start ${_CT_NAME}
	sleep 1
fi


########################  CONF

_echoT "----------  apk update"

_lxc_exec ${_CT_NAME} "apk update && apk upgrade"

_echoT "----------  timezone Paris"

_lxc_exec ${_CT_NAME} "apk add tzdata"
_lxc_exec ${_CT_NAME} "cp /usr/share/zoneinfo/Europe/Paris /etc/localtime && echo 'Europe/Paris' > /etc/timezone && date"
_lxc_exec ${_CT_NAME} "apk del tzdata"


########################  PATHS

_echoT "----------  path bs"

path="/tmp/bs"
! [ -d ${path} ] && rm -fR ${path}
cp -a ${S_PATH_INSTALL%/*}/bs ${path} && rm -fR ${path}/.git
_lxc_exec ${_CT_NAME} "[ -d /usr/local/bs ] && mv /usr/local/bs /usr/local/bs.${_SDATE}"
_eval lxc file push --recursive ${path} ${_CT_NAME}/usr/local/
[ -d ${path} ] && rm -fR ${path}


_echoT "----------  path server"

paths="${S_PATH_CONF} ${S_PATH_CONF_SSL}/private ${S_PATH_CONF_SSL}/certs"
for path in ${paths}; do
	_lxc_exec ${_CT_NAME} "[ -d ${path} ] || mkdir -p ${path}"
	_lxc_exec ${_CT_NAME} "chown 0:0 -R ${path}"
done

_lxc_exec ${_CT_NAME} "chown -R 0:0 ${S_PATH_CONF_SSL} && chmod -R 750 ${S_PATH_CONF_SSL}"
_lxc_exec ${_CT_NAME} "chmod 700 -R ${S_PATH_CONF_SSL}/private"


########################  END

_echoT "---------- ${_PART} end"
_eval "_partadd ${_PART} ${S_FILE_INSTALL_DONE}"

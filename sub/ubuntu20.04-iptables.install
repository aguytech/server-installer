#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  $S_RELEASE $_PART"


########################  REQUIRED

file_xtra_script=${S_PATH_INSTALL_XTRA}/firewall
file_xtra_conf=${S_PATH_INSTALL_CONF}/firewall.conf
file_xtra_log=${S_PATH_INSTALL_CONF}/rsyslog/host-iptables.conf
file_script=/usr/sbin/${file_xtra_script##*/}

file_rsyslog_client_iptables=${S_PATH_INSTALL_CONF}/rsyslog/client-iptables.conf
file_logrotate_client_iptables=${S_PATH_INSTALL_CONF}/logrotate/client-iptables

_echoT "------------------ required files"

_require ${file_xtra_script} ${file_xtra_conf} ${file_xtra_log} ${file_rsyslog_client_iptables} ${file_logrotate_client_iptables}


########################  SYSCTL

_echoT "----------  sysctl conf"

file=/etc/sysctl.conf
_keepcpts ${file}
sed -i 's|||' ${file}
echo "
# iptables
net.ipv4.ip_forward = ${_SOMAXCONN}
net.core.netdev_max_backlog = ${_MAX_BACKLOG}
net.ipv4.tcp_max_syn_backlog = ${_MAX_SYN_BACKLOG}
net.ipv4.tcp_max_tw_buckets = ${_MAX_TW_BUCKETS}
net.ipv4.tcp_fin_timeout= ${_FIN_TIMEOUT}
net.ipv4.tcp_keepalive_time= ${_KEEPALIVE_TIME}
net.ipv4.tcp_keepalive_intvl= ${_KEEPALIVE_INTVL}
net.ipv4.tcp_keepalive_probes = ${_KEEPALIVE_PROBES}" > ${file}

_echoT "----------  sysctl restart"

systemctl restart systemd-sysctl.service


_echoT "----------  network forward"

# allow forwading
file=/proc/sys/net/ipv4/ip_forward
grep -q 1 ${file} || echo 1 > ${file}

_eval sysctl net.ipv4.ip_forward=1

file=/etc/sysctl.conf
_eval "sed -i 's|^#\?\(net.ipv4.ip_forward\)=.*|\1=1|' ${file}"

########################  FIREWALL

_echoT "----------  firewall conf"

file=${S_PATH_CONF}/${file_xtra_conf##*/}
_keepcpts ${file}
_eval cp ${file_xtra_conf} ${file}


_echoT "----------  firewall bin"

file=${file_script}
_keepcpts ${file}
_eval cp ${file_xtra_script} ${file}
_eval chown root:root ${file}
_eval chmod 750 ${file}


_echoT "----------  systemd add service"

file=/etc/systemd/system/iptables-firewall.service
cat << EOF | _eval tee ${file}
[Unit]
Description=iptables firewall service
After=network.target

[Service]
Type=oneshot
ExecStart=${file_script} start
RemainAfterExit=true
ExecStop=${file_script} stop
StandardOutput=journal

[Install]
WantedBy=multi-user.target
EOF
_eval chmod 644 ${file}

file=/etc/systemd/system/iptables-firewall-test.service
cat << EOF | _eval tee ${file}
[Unit]
Description=iptables firewall service test
BindsTo=iptables-firewall.service
After=iptables-firewall.service

[Service]
Type=oneshot
ExecStart=/usr/bin/systemd-run --on-active=120 --timer-property=AccuracySec=1s /bin/systemctl stop iptables-firewall.service
StandardOutput=journal

[Install]
WantedBy=multi-user.target
EOF
_eval chmod 644 ${file}


_echoT "----------  systemd reload daemon"

_eval systemctl daemon-reload


_echoT "----------  iptables-firewall-test"

_echoI "To launch iptables rules for TEST, run: systemctl start iptables-firewall-test"
_echoI "You have 2 minutes after to verify iptables rules"

_echoT "----------  systemd iptables-firewall"

_askno "To START the service: iptables-firewall, valid"

_service start iptables-firewall

_askno "To ENABLE the service: iptables-firewall, valid"

_service enable iptables-firewall


########################  S_PATH_LOG

_echoT "----------  rsyslog conf client-iptables"

path=${S_PATH_LOG}/iptables
[ -d ${path} ] || _eval mkdir -p ${path}

########################  RSYSLOG

_echoT "----------  rsyslog conf client-iptables"

file=/etc/rsyslog.d/34-${file_rsyslog_client_iptables##*/}
_eval cp -a ${file_rsyslog_client_iptables} ${file}
_var_replace ${file} rsyslog

# need vm S_SERVICE[log]
#_echoT "----------  restart rsyslog ${_CT_NAME}"
#_service restart rsyslog


########################  LOGROTATE

_echoT "----------  logrotate client-iptables"

file=/etc/logrotate.d/${file_logrotate_client_iptables##*/}
_eval cp -a ${file_logrotate_client_iptables} ${file}
_var_replace ${file} logrotate

_echoT "----------  restart logrotate ${_CT_NAME}"

_service restart logrotate


########################  END

_echoT "---------- ${_PART} end"
_eval "_partadd ${_PART} ${S_FILE_INSTALL_DONE}"


<<MANUALLY
# iptables-save / iptables-restore

iptables -L
iptables -t nat -S
iptables -t nat -D

iptables -nvL
iptables -t nat -nvL
iptables -t mangle -nvL

iptables -nvL --line-number; iptables -nvL -t nat --line-number
MANUALLY

#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${S_RELEASE}-${_PART}"

grep -q "^# ${_PART#++}$" ${S_FILE_INSTALL_CONF} || echo  "# ${_PART}" >> ${S_FILE_INSTALL_CONF}

########################  REQUIRED

path_install_conf=${S_PATH_INSTALL_CONF/-desktop/}
file_script_iptables=${path_install_conf}/iptables/iptables-firewall
file_conf_iptables=${path_install_conf}/iptables/iptables-firewall.conf
file_service_iptables=${path_install_conf}/iptables/iptables-firewall.service
file_service_test_iptables=${path_install_conf}/iptables/iptables-firewall-test.service
file_rsyslog_client_iptables=${path_install_conf}/rsyslog/client-iptables.conf
file_logrotate_client_iptables=${path_install_conf}/logrotate/client-iptables

_echot "------------------ required files"
_require ${file_service_iptables} ${file_service_test_iptables} ${file_script_iptables} ${file_conf_iptables} 
_require ${file_rsyslog_client_iptables} ${file_logrotate_client_iptables}

########################  DATA

_echot "------------------  data"

[ -z ${_IPT_PRE_SSH+x} ] && { anstmp=20; _askno "PREFIX of port for 'SSH' VMs connections (${anstmp})"; _IPT_PRE_SSH="${_ANSWER:-$anstmp}"; }
_confset _IPT_PRE_SSH "${_IPT_PRE_SSH}"

[ -z ${_IPT_PRE_HTTP+x} ] && { anstmp=8; _askno "PREFIX of port for 'HTTP' VMs connections  (${anstmp})"; _IPT_PRE_HTTP="${_ANSWER:-$anstmp}"; }
_confset _IPT_PRE_HTTP "${_IPT_PRE_HTTP}"

[ -z ${_IPT_PRE_HTTPS+x} ] && { anstmp=9; _askno "PREFIX of port for 'HTTP' VMs connections (${anstmp})"; _IPT_PRE_HTTPS="${_ANSWER:-$anstmp}"; }
_confset _IPT_PRE_HTTPS "${_IPT_PRE_HTTPS}"

# host
_IPT_SERVICE=iptables-firewall; _confset _IPT_SERVICE "${_IPT_SERVICE}"
_IPT_FILE_CONF=${S_PATH_CONF}/iptables-firewall.conf; _confset _IPT_FILE_CONF "${_IPT_FILE_CONF}"

########################  CONFIGURATION

# load configuration file
. ${S_FILE_INSTALL_CONF}

########################  SYSCTL

_echot "------------------  sysctl conf"
file=/etc/sysctl.conf
echo "
# iptables
net.core.netdev_max_backlog = ${_MAX_BACKLOG}
net.ipv4.tcp_max_syn_backlog = ${_MAX_SYN_BACKLOG}
net.ipv4.tcp_max_tw_buckets = ${_MAX_TW_BUCKETS}
net.ipv4.tcp_fin_timeout= ${_FIN_TIMEOUT}
net.ipv4.tcp_keepalive_time= ${_KEEPALIVE_TIME}
net.ipv4.tcp_keepalive_intvl= ${_KEEPALIVE_INTVL}
net.ipv4.tcp_keepalive_probes = ${_KEEPALIVE_PROBES}" >> ${file}

_echot "------------------  sysctl restart"
_service restart systemd-sysctl

########################  FIREWALL

_echot "------------------  ${_IPT_SERVICE} conf"
_keepcpts ${file}
_evalr cp ${file_conf_iptables} ${_IPT_FILE_CONF}

_echot "------------------  ${_IPT_SERVICE} bin"
file=/usr/sbin/${_IPT_SERVICE}
_evalr cp ${file_script_iptables} ${file}
_evalr "chown root:root ${file} && chmod 750 ${file}"

_echot "------------------  systemd add service"
file=/etc/systemd/system/${file_service_iptables##*/}
_evalr cp ${file_service_iptables} ${file}
_evalr "chown root:root ${file} && chmod 644 ${file}"

_echot "------------------  systemd add service-test"
file=/etc/systemd/system/${file_service_test_iptables##*/}
_evalr cp ${file_service_test_iptables} ${file}
_evalr "chown root:root ${file} && chmod 644 ${file}"

_echot "------------------  systemd reload daemon"
_evalr systemctl daemon-reload

if [ -z "${_INSTALL_AUTO}" ]; then
	_echot "------------------  ${_IPT_SERVICE}-test"
	_echoA "To launch iptables rules for TEST, run:"
	_echo "systemctl start ${_IPT_SERVICE}-test"
	_echoa "You have 2 minutes after to verify iptables rules"

	_echot "------------------  systemd ${_IPT_SERVICE}"
	_echoa  "START the service: ${_IPT_SERVICE}"
	_askno "Valid to process"
	_service start ${_IPT_SERVICE}
	_echoa  "ENABLE the service: ${_IPT_SERVICE}"
	_askno "Valid to process"
	_service enable ${_IPT_SERVICE}
else
	_service enable ${_IPT_SERVICE}
fi

########################  RSYSLOG

_echot "------------------  path log iptables"
path=${S_PATH_LOG}/iptables
[ -d ${path} ] || _evalr mkdir -p ${path}
grep -q syslog /etc/passwd && _evalr chown syslog ${path}

_echot "------------------  rsyslog client-iptables"
file=/etc/rsyslog.d/14-${file_rsyslog_client_iptables##*/}
_evalr cp -a ${file_rsyslog_client_iptables} ${file}
_var_replace ${file} rsyslog

########################  LOGROTATE

_echot "------------------  logrotate client-iptables"
file=/etc/logrotate.d/${file_logrotate_client_iptables##*/}
_evalr cp -a ${file_logrotate_client_iptables} ${file}
_var_replace ${file} logrotate
_evalr chmod g-w /etc/logrotate.d/*
_service restart logrotate

_echot "------------------  logrotate restart"
_service restart logrotate

########################  END

_echoT "===================== ${_PART} end"
_partadd ${_PART#++} ${S_FILE_INSTALL_DONE}

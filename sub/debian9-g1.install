#!/bin/bash
#
# write by Aguy

FILE="/usr/local/bs/inc-functions"
! [ -f "$FILE" ] && echo -e "\e[1;31merror - unable to find file '$FILE'\e[0;0m" && exit 1
. "$FILE"


_echoT "\n==========================================  $S_RELEASE $_PART"

URLG1="https://git.duniter.org/nodes/typescript/duniter/-/jobs/7062/artifacts/raw/work/bin/duniter-server-v1.6.25-linux-x64.deb"

URLSYNC="g1.duniter.org 443"
PREFIX="1"
DOMAIN="g1.ambau.ovh"
PORTBMA="10900"
PORTWS2P="20900"
CPU="1"
CPUCORES="4"

URLSYNC="g1.duniter.org 443"
PREFIX="2"
DOMAIN="g1.ambau.ovh"
PORTBMA="10901"
PORTWS2P="20901"
CPU="0.4"
CPUCORES="1"

URLSYNC="g1-test.duniter.nanocryk.fr 443"
#URLSYNC="g1-test.duniter.fr 443"
PREFIX="2"
DOMAIN="gtest.ambau.ovh"
PORTBMA="10906"
PORTWS2P="20906"
CPU="0.4"
CPUCORES="1"


_echoT "------------------ file required"

FILES=""
for FILE in $FILES; do ! [ -f "$FILE" ] && _exite "Unable to find file: '$FILE'"; done


####################################  MAIN

_echoT "----------  cron conf"

FILE=/etc/cron.daily/duniter
echo '#!/bin/sh'"

test -x /usr/bin/duniter || exit 0
duniter webrestart --webmhost $S_VM_IP_G1" > "$FILE"


_echoT "----------  conf data"

# preload conf if exists
[ -f "$S_FILE_INSTALL_CONF" ] && . "$S_FILE_INSTALL_CONF"

[ -z "${_URLG1+x}" ] && anstmp="$URLG1" && _askno "URLG1, URL to get G1: ($anstmp)" && _URLG1=${_ANSWER:-$anstmp} && _confset _URLG1 "$_URLG1"

[ -z ${_URLSYNC+x} ] && anstmp="$URLSYNC" && _askno "URLSYNC, URL to sync G1: ($anstmp)" && _URLSYNC=${_ANSWER:-$anstmp} && _confset _URLSYNC "$_URLSYNC"

[ -z ${_PREFIX+x} ] && anstmp="$PREFIX" && _askno "PREFIX: ($anstmp)" && _PREFIX=${_ANSWER:-$anstmp} && _confset _PREFIX "$_PREFIX"

[ -z ${_DOMAIN+x} ] && anstmp="$DOMAIN" && _askno "DOMAIN: ($anstmp)" && _DOMAIN=${_ANSWER:-$anstmp} && _confset _DOMAIN "$_DOMAIN"

[ -z ${_PORTBMA+x} ] && anstmp="$PORTBMA" && _askno "PORTBMA: ($anstmp)" && _PORTBMA=${_ANSWER:-$anstmp} && _confset _PORTBMA "$_PORTBMA"

[ -z "${_PORTWS2P+x}" ] && anstmp="$PORTWS2P" && _askno "PORTWS2P: ($anstmp)" && _PORTWS2P=${_ANSWER:-$anstmp} && _confset _PORTWS2P "$_PORTWS2P"

[ -z ${_CPU+x} ] && anstmp="$CPU" && _askno "0-1 CPU-usage: ($anstmp)" && _CPU=${_ANSWER:-$anstmp} && _confset _CPU "$_CPU"

[ -z ${_CPUCORES+x} ] && anstmp="$CPUCORES" && _askno "number of CORES for CPU: ($anstmp)" && _CPUCORES=${_ANSWER:-$anstmp} && _confset _CPUCORES "$_CPUCORES"


_echoT "----------  G1 get"

cd /tmp
_evalq wget --no-check-certificate "$URLG1"


_echoT "----------  G1 install"

_eval apt install -y unzip

_evalq dpkg -i "${URLG1##*/}"


_echoT "----------  key generate"

_evalq duniter wizard key


_echoT "----------  conf network"

_evalq duniter wizard network


_echoT "----------  conf global"

_evalq duniter config --prefix "$PREFIX"

_evalq duniter config --cpu "$CPU"

_evalq duniter config --nb-cores "$CPUCORES"


_echoT "----------  WS2P remotehost"

duniter config --ws2p-noupnp --ws2p-port "$PORTWS2P" --ws2p-host "$_IPTHIS" --ws2p-remote-port "$PORTWS2P" --ws2p-remote-host "$S_NODE_IPV4"
duniter config --ws2p-remote-host $DOMAIN


_echoT "----------  conf upnp"

_evalq duniter config --noupnp


_echoT "----------  conf BMA"

_evalq "duniter config --addep \"BMAS $DOMAIN $PORTBMA\""


_echoT "----------  sync"

_evalq duniter sync "$URLSYNC"


_echoT "----------  key"

_evalq duniter pub
_askyn "confirm public key"


_echoT "----------  start"

_evalq duniter webstart --webmhost "$_IPTHIS"


####################################  USAGE

_echoT "----------  conf S_USAGE sgbd"
_confset "S_USAGE" "g1" "$S_GLOBAL_CONF"

_echoT "----------  conf S_PARTS $_PART"
_confmulti_add "S_PARTS" "duniter" "$S_GLOBAL_CONF"



_echoT "----------  end"

#_evalq _partadd "$_PART" "$S_FILE_INSTALL_DONE"

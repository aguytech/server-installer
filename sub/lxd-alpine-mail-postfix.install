#!/bin/bash
#
# write by Aguy

_echoT "\n======================  ${_INSTALL}-${_PARTMAIL}"

grep -q "^# ${_PARTMAIL#++}$" ${S_FILE_INSTALL_CONF} || echo  "# ${_PARTMAIL}" >> ${S_FILE_INSTALL_CONF}

####################  REQUIRED

fc_postfix_master=${S_PATH_INSTALL_CONF}/mail/postfix/master.cf
fc_postfix_main=${S_PATH_INSTALL_CONF}/mail/postfix/main.cf
fc_postfix_main_add=${S_PATH_INSTALL_CONF}/mail/postfix/main_add.cf
fc_postfix_headout=${S_PATH_INSTALL_CONF}/mail/postfix/header_checks_out.pcre
fc_postfix_headin=${S_PATH_INSTALL_CONF}/mail/postfix/header_checks_in.pcre
fc_postfix_client=${S_PATH_INSTALL_CONF}/mail/postfix/client_access.cidr

path_sql=${S_PATH_INSTALL_CONF}/mail/${_MEL_VMAIL_APP}

_echot "------------------ required files"
_require `set|grep ^fc_postfix_|cut -d= -f2`
_requirep ${path_sql}

########################  DATA

[ -z ${_MEL_PF_PATH_SQL+x} ] && _MEL_PF_PATH_SQL=/etc/postfix/sql
_confset _MEL_PF_PATH_SQL "${_MEL_PF_PATH_SQL}"

########################  METADATA

_echot "------------------ metadata"
_lxc_meta_add ${_CT_NAME} apps postfix

########################  MAIN

#_echot "------------------  install postfix"
#_lxc_exec ${_CT_NAME} apk add postfix postfix-mysql postfix-pcre # mailx

_echot "------------------  postfix start"
_lxc_exec ${_CT_NAME} rc-update add postfix
_lxc_exec_e ${_CT_NAME} rc-service -S postfix start

########################  CONF

_echot "------------------  conf keep"
path=/etc/postfix
_lxc_exec ${_CT_NAME} cp -a ${path} ${path}.${_SDATE}

_echot "------------------  conf main.cf"
file=/etc/postfix/${fc_postfix_main##*/}
_eval lxc file push -q ${fc_postfix_main} ${_CT_NAME}${file}

_echot "------------------  conf alias"
_lxc_exec ${_CT_NAME} "sed -i '/^#\?root:.*/ croot: ${S_EMAIL_TECH}' /etc/postfix/aliases"
_lxc_exec ${_CT_NAME} newaliases
_echoa "test postmap -q root lmdb:/etc/postfix/aliases"
_lxc_exec ${_CT_NAME} postmap -q root lmdb:/etc/postfix/aliases

_echot "------------------  conf var replace"
_lxc_var_replace ${_CT_NAME} /etc/postfix mail

_echot "------------------  postfix restart"
_lxc_exec_e ${_CT_NAME} chown -R 0.0 /etc/postfix
_lxc_exec_e ${_CT_NAME} rc-service postfix restart

_echot "------------------  postconf mynetworks"
_lxc_exec_e ${_CT_NAME} postconf mynetworks

########################  CONF ADD

_echot "------------------  conf master.cf"
file=/etc/postfix/${fc_postfix_master##*/}
_eval lxc file push -q ${fc_postfix_master} ${_CT_NAME}${file}

_echot "------------------  conf main_add.cf"
file=/etc/postfix/${fc_postfix_main_add##*/}
_eval lxc file push -q ${fc_postfix_main_add} ${_CT_NAME}${file}
_lxc_exec ${_CT_NAME} "cat ${file} >> /etc/postfix/main.cf"
_lxc_exec ${_CT_NAME} "rm ${file}"

_echot "------------------  conf cleanup"
file=/etc/postfix/${fc_postfix_headout##*/}
_eval lxc file push -q ${fc_postfix_headout} ${_CT_NAME}${file}
file=/etc/postfix/${fc_postfix_headin##*/}
_eval lxc file push -q ${fc_postfix_headin} ${_CT_NAME}${file}

_echot "------------------  conf client access"
file=/etc/postfix/${fc_postfix_client##*/}
_eval lxc file push -q ${fc_postfix_client} ${_CT_NAME}${file}

_echot "------------------  sql files"
_lxc_exec_e ${_CT_NAME} "[ -d '${_MEL_PF_PATH_SQL}' ] || mkdir -p ${_MEL_PF_PATH_SQL}"
_lxc_exec_e ${_CT_NAME} "chmod 755 ${_MEL_PF_PATH_SQL}"
for file in $(ls ${path_sql}/mysql_*.cf); do
	_echo ${file##*/}
	_eval lxc file push -q ${file} ${_CT_NAME}/${_MEL_PF_PATH_SQL}/ || _exite "unable to push file"
done
_lxc_exec_e ${_CT_NAME} "chmod 644 ${_MEL_PF_PATH_SQL}/*"

_echot "------------------  conf var replace"
_lxc_var_replace ${_CT_NAME} /etc/postfix mail

_echot "------------------  postfix restart"
_lxc_exec_e ${_CT_NAME} chown -R 0:0 /etc/postfix
_lxc_exec_e ${_CT_NAME} 'find /etc/postfix -type f -maxdepth 1 -exec chmod g-wx,o-rwx {} \;'
_lxc_exec_e ${_CT_NAME} rc-service postfix restart

_echot "------------------  postconf mynetworks"
_lxc_exec_e ${_CT_NAME} postconf mynetworks

########################  TEST 

_echot "------------------  services enabled"
_echoA "Verify enabled smtp services"
_lxc_exec ${_CT_NAME} "grep 'submission\|smtp' /etc/services"
[ -z "${_INSTALL_AUTO}" ] && _askno "valid to continue"

queries=$(_lxc_exec ${_CT_NAME} "sed -n 's|^[^#].* \(mysql:.*\)$|\1|p' /etc/postfix/main.cf")
queries+=" $(_lxc_exec ${_CT_NAME} "sed -n 's|^[^#].*proxy:\(mysql:.*\)$|\1|p' /etc/postfix/main.cf")"
queries+=" $(_lxc_exec ${_CT_NAME} "sed -n 's|^[^#].* \(mysql:.*\)$|\n\1|p' /etc/postfix/master.cf")"
queries+=" $(_lxc_exec ${_CT_NAME} "sed -n 's|^[^#].*proxy:\(mysql:.*\)$|\n\1|p' /etc/postfix/master.cf")"
_echot "------------------  test postmap ${S_DOM_FQDN}"
_echoA "Verify results of postamp commands:"
for query in ${queries}; do
	_echo "- ${query}"
	_lxc_exec ${_CT_NAME} postmap -q ${S_DOM_FQDN} ${query}
done
_echot "------------------  test postmap ${S_EMAIL_TECH}"
for query in ${queries}; do
	_echo "- ${query}"
	_lxc_exec ${_CT_NAME} postmap -q ${S_EMAIL_TECH} ${query}
done
[ -z "${_INSTALL_AUTO}" ] && _askno "valid to continue"

_echot "------------------  test mail"
#_lxc_exec ${_CT_NAME} "echo first message | mail -s test root" # with mailx
_lxc_exec ${_CT_NAME} "echo -e 'From: postmaster\nTo: root\nHi, this is a first message\n.'|sendmail -t"
str=2
_echoA "Verify the following content of the email received in ${str}s"
_eval sleep ${str}
_lxc_exec ${_CT_NAME} "ls -t1 ${_MEL_PATH_LOCAL}/${_MEL_DOM_FQDN}/tech/new/*|head -1|xargs cat"
[ -z "${_INSTALL_AUTO}" ] && _askno "valid to continue"

_echot "------------------  test telnet 25"
_echoa Use telnet to send a mail
_echo telnet mx.${S_DOM_FQDN}:465 25
_echo telnet ${S_SERVICE[mail]} 25
_echoa "ehlo root|mail from:root|rcpt to:${S_EMAIL_TECH}|data|message|.|quit"
[ -z "${_INSTALL_AUTO}" ] && _askno "valid to continue"

_echot "------------------  test ssl 587"
_echoa "Use openssl to test SSL certificate | quit"
_echo openssl s_client -starttls smtp -connect mx.${S_DOM_FQDN}:587
_echo openssl s_client -starttls smtp -connect ${S_SERVICE[mail]}:587
[ -z "${_INSTALL_AUTO}" ] && _askno "valid to continue"

_echot "------------------  test openssl 465"
_echoa "Use openssl to test STARTTLS certificate | quit"
_echo openssl s_client -connect mx.${S_DOM_FQDN}:465
_echo openssl s_client -connect ${S_SERVICE[mail]}:465
[ -z "${_INSTALL_AUTO}" ] && _askno "valid to continue"

########################  END

_echoT "====================== ${_INSTALL}-${_PARTMAIL} end"
_partadd ${_PARTMAIL#++} ${S_FILE_INSTALL_DONE}

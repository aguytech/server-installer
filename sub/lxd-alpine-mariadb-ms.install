#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${_INSTALL}-${_PART}"

grep -q "^# ${_PART#++}$" ${S_FILE_INSTALL_CONF} || echo  "# ${_PART}" >> ${S_FILE_INSTALL_CONF}

########################  REQUIRED

_echot "------------------ required vm"
cts_all_mdb=`lxc list -f csv -c n| grep '^mdb-'|xargs`
[ "${cts_all_mdb}" ] || _exite "unable to find mariadb container"


file_master="${S_PATH_INSTALL_CONF}/mariadb/mariadb-master.cnf"
file_slave="${S_PATH_INSTALL_CONF}/mariadb/mariadb-slave.cnf"

_echot "------------------ required files"
_require ${file_master} ${file_slave}

_askyn "To install a master/slave mariadb cluster, you need to have 2 available instances of mariadb?" && [ ${_ANSWER} = n ] && _exit 0

########################  DATA

_echot "------------------  data"

# ct_master
_menu "Select one available mariadb container for MASTER " ${cts_all_mdb}
ct_master=${_ANSWER}

# ct_slave
cts_maria="${cts_maria/ ${ct_master} / }"
[ "${cts_maria}" ] && _menu "Select one available mariadb container for SLAVE" ${cts_maria} || _exite "Unable to find container maria-* to use"
ct_slave=${_ANSWER}

# pwd_master
ct_name=${ct_master}
ok=false; while ! ${ok}; do
	_askno "Password for user: 'roothost' for '${ct_name}'"
	mysql -s -h${ct_name} -uroothost -p${_ANSWER} -e '' && ok=true || _echo "Unable to connect to: ${ct_name} with pwd: ${_ANSWER}"
done
pwd_master=${_ANSWER}

# pwd_slave
ct_name=${ct_slave}
ok=false; while ! ${ok}; do
	anstmp=${pwd_master} && _askno "Password for user: 'roothost' for '${ct_name}' (${anstmp})"
	_ANSWER="${_ANSWER:-$anstmp}"
	mysql -s -h${ct_name} -uroothost -p${_ANSWER} -e '' && ok=true || _echo "Unable to connect to: ${ct_name}"
done
pwd_slave=${_ANSWER}

anstmp=256M && _askno "max_binlog_size (${anstmp})"
_MDB_MAX_BIN_SIZE="${_ANSWER:-$anstmp}"

anstmp=30 && _askno "expire_logs_days (${anstmp})"
_MDB_EXPIRE_LOGS_DAYS="${_ANSWER:-$anstmp}"

anstmp=1 && _askno "the server id for master (${anstmp})"
_MDB_MASTER_ID="${_ANSWER:-$anstmp}"

anstmp=100 && _askno "the server id for slave (${anstmp})"
_MDB_SLAVE_ID="${_ANSWER:-$anstmp}"

anstmp="information_schema, mysql, performance_schema"
_askno "databases name to IGNORE for replication: all except these (${anstmp})"
_MDB_REPLICATE_EXCEPT="${_ANSWER:-$anstmp}"

anstmp="" && _askno "databases name to USE for replication: only these, not others (${anstmp})"
_MDB_REPLICATE_ONLY="${_ANSWER:-$anstmp}"

pwd_replic=`_pwd`


########################  CONF MASTER

ct_name=${ct_master}

#  METADATA
_echot "------------------  metadata"
_lxc_meta_add ${ct_name} apps mariadb-master

if lxc list -f csv -c n status=Stopped | grep -q ^${ct_name}$; then
	_echot "------------------  ${ct_name} start"
	_eval lxc start ${ct_name}
fi

_echot "------------------  ${ct_name} conf"
file=${_MDB_PATH_CONF}/${file_master##*/}
_lxc_exec ${ct_name} "[ -f ${file} ] && cp -a ${file} ${file}.${_SDATE}"
_eval lxc file push -q ${file_master} ${ct_name}${file}

[ "${_MDB_REPLICATE_EXCEPT}" ] && _lxc_exec ${ct_name} "sed -i '/_MDB_REPLICATE_EXCEPT/ s|^#||' ${file}"
[ "${_MDB_REPLICATE_ONLY}" ] && _lxc_exec ${ct_name} "sed -i '/_MDB_REPLICATE_ONLY/ s|^#||' ${file}"
_lxc_var_replace ${ct_name} ${file} mariadb

_echot "------------------  ${ct_name} restart"
_lxc_exec ${ct_name} "rc-service ${_MDB_SERVICE} restart"

_echot "------------------  ${ct_name} replic"
cmd="CREATE OR REPLACE USER 'replic'@'${ct_slave}.lxd' IDENTIFIED BY '${pwd_replic}';
GRANT REPLICATION SLAVE ON *.* TO 'replic'@'${ct_slave}.lxd';"
_eval "mysql -h${ct_name} -uroothost -p${pwd_master} -e \"${cmd}\""
_eval "mysql -s -h${ct_name} -uroothost -p${pwd_master} -e \"SELECT user,host FROM mysql.user WHERE user like 'replic';\""
_eval "mysql -h${ct_name} -uroothost -p${pwd_master} -e \"FLUSH PRIVILEGES;\""

_echot "------------------  ${ct_name} passwd"
file=${S_PATH_CONF}/mariadb
strpass="replic @ ${ct_slave}.lxd - ${pwd_replic}"
cmd="grep -q ^replic ${file} && sed -i '/^replic/c ${strpass}'  ${file} || sed -i '\$a ${strpass}' ${file}"
_lxc_exec ${ct_name} "${cmd}"

_echot "------------------  ${ct_name} lock"
_eval "mysql -h${ct_name} -uroothost -p${pwd_master} -e \"FLUSH TABLES WITH READ LOCK;\""
_eval "mysql -s -h${ct_name} -uroothost -p${pwd_master} -e \"SHOW MASTER STATUS;\""
_echot "------------------  ${ct_name} pos"
master_file=`mysql -s -h${ct_name} -uroothost -p${pwd_master} -e "SHOW MASTER STATUS;"|tail -n1|cut -f1`
master_pos=`mysql -s -h${ct_name} -uroothost -p${pwd_master} -e "SHOW MASTER STATUS;"|tail -n1|cut -f2`

_echot "------------------  ${ct_name} backup"
_askno "Backup data from master & valid to continue"

_echot "------------------  ${ct_name} unlock"
_eval "mysql -h${ct_name} -uroothost -p${pwd_master} -e \"UNLOCK TABLES;\""


########################  CONF SLAVE

ct_name=${ct_slave}

#  METADATA
_echot "------------------  metadata"
_lxc_meta_add ${ct_name} apps mariadb-slave

if lxc list -f csv -c n status=Stopped | grep -q ^${ct_name}$; then
	_echot "------------------  ${ct_name} start"
	_eval lxc start ${ct_name}
fi

_echot "------------------  ${ct_name} restore"
_askno "Restore backuped data from master to slave & continue"

_echot "------------------  ${ct_name} conf"
file=${_MDB_PATH_CONF}/${file_slave##*/}
_lxc_exec ${ct_name} "[ -f ${file} ] && cp -a ${file} ${file}.${_SDATE}"
_eval lxc file push -q ${file_slave} ${ct_name}${file}

[ "${_MDB_REPLICATE_EXCEPT}" ] && _lxc_exec ${ct_name} "sed -i '/_MDB_REPLICATE_EXCEPT/ s|^#||' ${file}"
[ "${_MDB_REPLICATE_ONLY}" ] && _lxc_exec ${ct_name} "sed -i '/_MDB_REPLICATE_ONLY/ s|^#||' ${file}"
_lxc_var_replace ${ct_name} ${file} mariadb

_echot "------------------  ${ct_name} ${_MDB_SERVICE} restart"
_lxc_exec ${ct_name} "rc-service ${_MDB_SERVICE} restart"

_echot "------------------  ${ct_name} conf master"
_eval "mysql -h${ct_name} -uroothost -p${pwd_slave} -e \"SET default_master_connection = '${ct_master}';\""
_eval "mysql -h${ct_name} -uroothost -p${pwd_slave} -e \"STOP SLAVE;\""

cmd="CHANGE MASTER TO
MASTER_HOST='${ct_master}',
MASTER_USER='replic',
MASTER_PASSWORD='${pwd_replic}',
MASTER_PORT=${S_DB_MARIA_PORT},
MASTER_LOG_FILE='${master_file}',
MASTER_LOG_POS=${master_pos},
MASTER_CONNECT_RETRY=10;"
_eval "mysql -h${ct_name} -uroothost -p${pwd_slave} -e \"${cmd}\""

_echot "------------------  ${ct_name} start slave"
_eval "mysql -h${ct_name} -uroothost -p${pwd_slave} -e \"START SLAVE '${ct_master}';\""


########################  SHOW

sleep 2

_echot "------------------  show master privileges"
_eval "mysql -h${ct_master} -uroothost -p${pwd_master} -e \"SELECT user,host FROM mysql.user WHERE user like 'replic';\""

_echot "------------------  status master"
_eval "mysql -h${ct_master} -uroothost -p${pwd_master} -e \"SHOW MASTER STATUS;\""

_echot "------------------  status slave"
_eval "mysql -h${ct_slave} -uroothost -p${pwd_slave} -e \"SHOW SLAVE STATUS \G;\" | head -n19"

_echot "------------------  show passwords"
_echoI "Keep this passwords:"
_echoW "${strpass%\\n}"


########################  PUBLISH

for ct_name in ${ct_master} ${ct_slave}; do
	_echot "------------------  publish ${ct_name}"

	lxc image list -f csv -c l | grep -q ^${ct_name}$ && _eval lxc image alias rename ${ct_name} ${ct_name}-${_SDATE}
	_eval lxc publish --force ${ct_name} --alias ${ct_name}
done


########################  END

_echoT "===================== ${_PART} end"
_partadd ${_PART#++} ${S_FILE_INSTALL_DONE}

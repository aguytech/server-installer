#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${_RELEASE} ${_PART}"


########################  REQUIRED

_echoT "------------------ required vm image"
lxc image list -f json |jq -r '.[].aliases[].name' | grep -q ^${_CT_NAME_COM}$ || _exite "Unable to find image container: '${_CT_NAME_COM}'"


file_rsyslog_host_auth=${S_PATH_INSTALL_CONF}/rsyslog/host-auth.conf
file_rsyslog_host_iptables=${S_PATH_INSTALL_CONF}/rsyslog/host-iptables.conf
file_rsyslog_client_iptables=${S_PATH_INSTALL_CONF}/rsyslog/client-iptables.conf
file_rsyslog_host_lxd=${S_PATH_INSTALL_CONF}/rsyslog/host-lxd.conf
file_rsyslog_client_lxd=${S_PATH_INSTALL_CONF}/rsyslog/client-lxd.conf

file_logrotate_host_rsyslog=${S_PATH_INSTALL_CONF}/logrotate/host-rsyslog
file_logrotate_host_iptables=${S_PATH_INSTALL_CONF}/logrotate/host-iptables
file_logrotate_client_iptables=${S_PATH_INSTALL_CONF}/logrotate/client-iptables
file_logrotate_host_lxd=${S_PATH_INSTALL_CONF}/logrotate/host-lxd
file_logrotate_client_lxd=${S_PATH_INSTALL_CONF}/logrotate/client-lxd



_echoT "------------------ required files"
_require ${file_rsyslog_host_auth} ${file_rsyslog_host_iptables} ${file_rsyslog_client_iptables} ${file_rsyslog_host_lxd} ${file_rsyslog_client_lxd} ${file_logrotate_host_rsyslog} ${file_logrotate_host_iptables} ${file_logrotate_client_iptables} ${file_logrotate_host_lxd} ${file_logrotate_client_lxd}


########################  DATA

_CT_NAME=${S_SERVICE[log]}

eval ${S_HOST_VM_ETH[default]}
_CT_IP=${s_base}.${S_SERVICE_BITS[log]}


########################  PROFILE

profile=log
_echoT "----------  profiles ${profile}"

lxc profile list -f csv|grep -q "^${profile}," && lxc profile rename ${profile} ${profile}.${_SDATE}
_eval lxc profile create ${profile}

path="${S_HOST_PATH_LOG}"
path_ct="${S_VM_PATH_LOG}"
[ -d ${path} ] || _eval mkdir -p ${path}
_eval lxc profile device add ${profile} ${profile} disk source=${path} path=${path_ct}


########################  INIT

_echoT "----------  init"

if lxc list -f json |jq -r '.[].name' | grep -q ^${_CT_NAME}$; then
	if lxc list -f json | jq -r '.[] | select(.status == "Running").name' | grep -q ^${_CT_NAME}$; then
		_eval lxc stop ${_CT_NAME}
		_eval lxc rename ${_CT_NAME} ${_CT_NAME}-${_SDATE}
		_eval lxc start ${_CT_NAME}-${_SDATE}
	else
		_eval lxc rename ${_CT_NAME} ${_CT_NAME}-${_SDATE}
	fi
fi

_eval lxc init ${_CT_NAME_COM} ${_CT_NAME} -p default -p global -p ${profile}


_echoT "----------  network fixed ip"

if ! lxc list -f json | jq -r '.[] | select(.name == "'${_CT_NAME}'").devices[].name' | grep -q eth0; then
	_eval lxc network attach ${s_inet} ${_CT_NAME} eth0 eth0
fi
_eval lxc config device set ${_CT_NAME} eth0 ipv4.address ${_CT_IP}


_echoT "----------  ${_CT_NAME} start"

_eval lxc start ${_CT_NAME}

_eval sleep 1


########################  CONF

if [ "${S_RSYSLOG_PTC}" = udp ]; then
	_echoT "----------  conf udp"

	file=/etc/rsyslog.conf
	_lxc_exec ${_CT_NAME} "sed -i '/#module(load=.imudp/,/#)/ s|^#||' ${file}"
	_lxc_exec ${_CT_NAME} "sed -i '/^\s*port=/ s|=.*|=\"${S_RSYSLOG_PORT}\"|' ${file}"

	_echoT "----------  restart rsyslog ${_CT_NAME}"

	_lxc_exec ${_CT_NAME} "rc-service rsyslog restart"
fi


_echoT "----------  conf client-auth"

file=/etc/rsyslog.d/client-auth.conf
_lxc_exec ${_CT_NAME} "[ -f ${file} ] && rm ${file}"


_echoT "----------  conf host-auth"

file=/etc/rsyslog.d/${file_rsyslog_host_auth##*/}
_eval lxc file push ${file_rsyslog_host_auth} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} rsyslog


########################  RSYSLOG IPTABLES

_echoT "----------  iptables host conf"

path=${S_VM_PATH_LOG}/iptables
_lxc_exec ${_CT_NAME} "[ -d ${path} ] || mkdir -p ${path}"

file=/etc/rsyslog.d/${file_rsyslog_host_iptables##*/}
_eval lxc file push ${file_rsyslog_host_iptables} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} rsyslog


_echoT "----------  iptables host restart"

_lxc_exec ${_CT_NAME} "rc-service rsyslog restart"


_echoT "----------  iptables client conf"

path=${S_PATH_LOG}/iptables
[ -d ${path} ] || _eval mkdir -p ${path}
_eval chown syslog ${path}

file=/etc/rsyslog.d/34-${file_rsyslog_client_iptables##*/}
_eval cp -a ${file_rsyslog_client_iptables} ${file}
_var_replace ${file} rsyslog

_echoT "----------  iptables client restart"

_service restart rsyslog


########################  RSYSLOG LXD

_echoT "----------  lxd host conf"

path=${S_VM_PATH_LOG}/lxd
_lxc_exec ${_CT_NAME} "[ -d ${path} ] || mkdir -p ${path}"

file=/etc/rsyslog.d/${file_rsyslog_host_lxd##*/}
_eval lxc file push ${file_rsyslog_host_lxd} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} rsyslog


_echoT "----------  lxd host restart"

_lxc_exec ${_CT_NAME} "rc-service rsyslog restart"


_echoT "----------  lxd client conf"

path=${S_PATH_LOG}/lxd
[ -d ${path} ] || _eval mkdir -p ${path}
_eval chown syslog ${path}

file=/etc/rsyslog.d/36-${file_rsyslog_client_lxd##*/}
_eval cp -a ${file_rsyslog_client_lxd} ${file}
_var_replace ${file} rsyslog

_echoT "----------  lxd client restart"

_service restart rsyslog


########################  LOGROTATE HOST

_echoT "----------  logrotate rsyslog host"

file=/etc/logrotate.d/${file_logrotate_host_rsyslog##*/}
_eval lxc file push ${file_logrotate_host_rsyslog} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} logrotate


_echoT "----------  logrotate iptables host"

file=/etc/logrotate.d/${file_logrotate_host_iptables##*/}
_eval lxc file push ${file_logrotate_host_iptables} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} logrotate

_echoT "----------  logrotate iptables client"

file=/etc/logrotate.d/${file_logrotate_client_iptables##*/}
_eval cp -a ${file_logrotate_client_iptables} ${file}
_var_replace ${file} logrotate


_echoT "----------  logrotate lxd host"

file=/etc/logrotate.d/${file_logrotate_host_lxd##*/}
_eval lxc file push ${file_logrotate_host_lxd} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} logrotate

file=/etc/logrotate.d/${file_logrotate_client_lxd##*/}
_eval cp -a ${file_logrotate_client_lxd} ${file}
_var_replace ${file} logrotate


########################  PUBLISH

_echoT "----------  publish ${_CT_NAME}"

_eval lxc image list -f json | jq -r '.[].aliases[].name' | grep -q ^${_CT_NAME}$ && lxc image alias rename ${_CT_NAME} ${_CT_NAME}-$(date +%s)
_eval lxc publish --force ${_CT_NAME} --alias ${_CT_NAME}


########################  END

_echoT "---------- ${_PART} end"
_eval "_partadd ${_PART} ${S_FILE_INSTALL_DONE}"

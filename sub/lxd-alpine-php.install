#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${_INSTALL}-${_PART}"

grep -q "^# ${_PART#++}$" ${S_FILE_INSTALL_CONF} || echo  "# ${_PART}" >> ${S_FILE_INSTALL_CONF}

########################  REQUIRED

_echot "------------------ required vm"
cts_all_www=`lxc image list -f csv -c l| grep -e '^\(wa-\|wn-\)'`
[ "${cts_all_www}" ] || _exite "Unable to find image container start with wa-|wn-"

imgs_all_rds=`lxc list -f csv -c n| grep '^rds-'`
[ "${imgs_all_rds}" ] || _exite "Unable to find redis container (name starts with rds-)"

file_phpfpm="${S_PATH_INSTALL_CONF}/apache2/php7-fpm.conf"
file_monitor="${S_PATH_INSTALL_CONF}/apache2/monitor.conf"
file_opcache="${S_PATH_INSTALL_CONF}/apache2/opcache.conf"
file_xdebug="${S_PATH_INSTALL_CONF}/php/xdebug.ini"
file_rsyslog_client=${S_PATH_INSTALL_CONF}/rsyslog/client-phpfpm7.conf
file_rsyslog_host=${S_PATH_INSTALL_CONF}/rsyslog/host-phpfpm7.conf
file_logrotate_client=${S_PATH_INSTALL_CONF}/logrotate/client-phpfpm7
file_logrotate_host=${S_PATH_INSTALL_CONF}/logrotate/host-phpfpm7

_echot "------------------ required files"
_require ${file_phpfpm} ${file_monitor} ${file_opcache} ${file_xdebug} ${file_rsyslog_host} ${file_rsyslog_client} ${file_logrotate_host}

########################  DATA

#php_version=`_lxc_exec ${S_SERVICE[http]} "apk list php7-fpm | sed -n 's|php7-fpm-\([0-9\.]\+\)-.*|\1|p'"`
php_modules="php7-bcmath php7-bz2 php7-ctype php7-curl php7-exif php7-fileinfo php7-dom php7-gd php7-gmp php7-iconv php7-imap php7-json php7-mbstring php7-mysqli php7-openssl php7-pdo_mysql php7-opcache php7-pgsql php7-posix php7-session php7-simplexml php7-sqlite3 php7-xmlreader php7-xmlwriter php7-zip php7-xdebug php7-pecl-mcrypt php7-pecl-redis php7-xml" #  php7-pecl-imagick php7-pear

_echot "------------------  data domain"

anstmp=${S_DOM_FQDN} && _askno "Domain name to use (${anstmp})"
_DOM_FQDN="${_ANSWER:-$anstmp}"

anstmp=wap-${_DOM_FQDN//./-} && _askno "Base name of containers to build (${anstmp})"
ct_base="${_ANSWER:-$anstmp}"

anstmp=2 && _askno "Number of containers to build (${anstmp})"
ct_num="${_ANSWER:-$anstmp}"

_echot "------------------  data image"

_menu "Select one available image Apache container for www base" ${cts_all_www}
ct_www=${_ANSWER}

profiles=`lxc profile list -f csv|grep "^www.*,"|cut -d, -f1`
[ "${profiles}" ] && _menu "Select an available WWW profile to apply" ${profiles}
profile_www="${_ANSWER}" || _ANSWER=

_menu "Select one available container for cache" ${imgs_all_rds}
ct_rds=${_ANSWER}

_echot "------------------  data php"

profiles=`lxc profile list -f csv|grep "^php.*,"|cut -d, -f1`
[ "${profiles}" ] && _menu "Select an available PHP profile to apply or none" none ${profiles} || _ANSWER=
profile="${_ANSWER/none/}"
[ -z "${profile}" ] && anstmp=php7-${_DOM_FQDN} && _askno "Name of the new  PHP profile (${anstmp})" && profile="${_ANSWER:-$anstmp}"


anstmp="20" && _askno "max_execution_time (${anstmp})s"
_PHP_MAX_EXECUTION_TIME="${_ANSWER:-$anstmp}" && _confset _PHP_MAX_EXECUTION_TIME "${_PHP_MAX_EXECUTION_TIME}"

anstmp="30" && _askno "max_input_time (${anstmp})s"
_PHP_MAX_INPUT_TIME="${_ANSWER:-$anstmp}" && _confset _PHP_MAX_INPUT_TIME "${_PHP_MAX_INPUT_TIME}"

anstmp="128M" && _askno "memory_limit (${anstmp})"
_PHP_MEMORY_LIMIT="${_ANSWER:-$anstmp}" && _confset _PHP_MEMORY_LIMIT "${_PHP_MEMORY_LIMIT}"

anstmp="8M" && _askno "post_max_size (${anstmp})"
_PHP_POST_MAX_SIZE="${_ANSWER:-$anstmp}" && _confset _PHP_POST_MAX_SIZE "${_PHP_POST_MAX_SIZE}"

anstmp="8M" && _askno "upload_max_filesize (${anstmp})"
_PHP_UPLOAD_MAX_FILESIZE="${_ANSWER:-$anstmp}" && _confset _PHP_UPLOAD_MAX_FILESIZE "${_PHP_UPLOAD_MAX_FILESIZE}"

anstmp="1" && _askno "session.use_strict_mode (${anstmp})"
_PHP_SESSION_STRICT_MODE="${_ANSWER:-$anstmp}" && _confset _PHP_SESSION_STRICT_MODE "${_PHP_SESSION_STRICT_MODE}"

anstmp="${php_modules}" && _askno "php modules to install: \n${anstmp}"
_PHP_MODULES="${_ANSWER:-$anstmp}" && _confset _PHP_MODULES "${_PHP_MODULES}"

_echot "------------------  data php-fpm"

anstmp='30' && _askno "Give value for 'emergency_restart_threshold' (${anstmp})"
_PHP_RESTART_THRESHOLD="${_ANSWER:-$anstmp}" && _confset _PHP_RESTART_THRESHOLD "${_PHP_RESTART_THRESHOLD}"

anstmp='60s' && _askno "Give value for 'emergency_restart_interval' (${anstmp})"
_PHP_RESTART_INTERVAL="${_ANSWER:-$anstmp}" && _confset _PHP_RESTART_INTERVAL "${_PHP_RESTART_INTERVAL}"

anstmp='0' && _askno "Give value for 'process_control_timeout' (${anstmp})s"
_PHP_CONTROL_TIMEOUT="${_ANSWER:-$anstmp}" && _confset _PHP_CONTROL_TIMEOUT "${_PHP_CONTROL_TIMEOUT}"

_echot "------------------  data pool www"

anstmp='20' && _askno "Give value for 'pm.max_children' (${anstmp})"
_PHP_W_MAX_CHILDREN="${_ANSWER:-$anstmp}" && _confset _PHP_W_MAX_CHILDREN "${_PHP_W_MAX_CHILDREN}"

anstmp='4' && _askno "Give value for 'pm.start_servers' (${anstmp})"
_PHP_W_START_SERVERS="${_ANSWER:-$anstmp}" && _confset _PHP_W_START_SERVERS "${_PHP_W_START_SERVERS}"

anstmp='4' && _askno "Give value for 'pm.min_spare_servers' (${anstmp})"
_PHP_W_MIN_SPARE_SERVERS="${_ANSWER:-$anstmp}" && _confset _PHP_W_MIN_SPARE_SERVERS "${_PHP_W_MIN_SPARE_SERVERS}"

anstmp='15' && _askno "Give value for 'pm.max_spare_servers' (${anstmp})"
_PHP_W_MAX_SPARE_SERVERS="${_ANSWER:-$anstmp}" && _confset _PHP_W_MAX_SPARE_SERVERS "${_PHP_W_MAX_SPARE_SERVERS}"

anstmp='100000' && _askno "Give value for 'pm.max_requests' (${anstmp})"
_PHP_W_MAX_REQUESTS="${_ANSWER:-$anstmp}" && _confset _PHP_W_MAX_REQUESTS "${_PHP_W_MAX_REQUESTS}"

anstmp='2' && _askno "Give value for 'request_SLOWLOG_TIMEOUT' (${anstmp})"
_PHP_SLOWLOG_TIMEOUT="${_ANSWER:-$anstmp}" && _confset _PHP_SLOWLOG_TIMEOUT "${_PHP_SLOWLOG_TIMEOUT}"


_PHP_SERVICE=php-fpm7 && _confset _PHP_SERVICE "${_PHP_SERVICE}"
_PHP_FPM_SOCK=/run/${_PHP_SERVICE}/php-fpm.sock && _confset _PHP_SERVICE "${_PHP_SERVICE}"
_PHP_FPM_ADMIN_SOCK=/run/${_PHP_SERVICE}/php-fpm-admin.sock && _confset _PHP_SERVICE "${_PHP_SERVICE}"

file_php_conf=/etc/php7/php.ini
file_fpm_conf=/etc/php7/php-fpm.conf

path_php_conf=/etc/php7/conf.d
path_fpm_conf=/etc/php7/php-fpm.d
path_apache_conf=/etc/apache2/conf.d

# shared
path_dom=${S_VM_PATH_SHARE}/www/${_DOM_FQDN}
path_php_share=${S_VM_PATH_SHARE}/php/${_DOM_FQDN}
path_fpm_pool=${path_php_share}/pools
path_xdebug_profile=${path_php_share}/xdebug/profile
path_xdebug_trace=${path_php_share}/xdebug/trace

_CT_NAME=${ct_base}-1

########################  PROFILE

if ! lxc profile list -f csv|grep -q "^${profile},"; then
	_echot "------------------  profile create ${profile}"
	_eval lxc profile create ${profile}

	path=${S_HOST_PATH_SHARE}/php/${_DOM_FQDN}
	path_ct=${path_php_share}
	[ -d ${path} ] || _evalr mkdir -p ${path}
	_evalr chown -R ${_LXD_UID}:${_LXD_UID} ${S_HOST_PATH_SHARE}/php
	_eval lxc profile device add ${profile} ${profile} disk source=${path} path=${path_ct}
else
	_echot "------------------  existing profile ${profile}"
fi

########################  INIT

_echot "------------------  init"
if lxc list -f csv -c n | grep -q ^${_CT_NAME}$; then
	lxc list -f csv -c n status=Running| grep -q ^${_CT_NAME}$ && _eval lxc stop ${_CT_NAME}
	_echot "------------------ rename ${_CT_NAME} -> ${_CT_NAME}-${_SDATE}"
	_eval lxc rename ${_CT_NAME} ${_CT_NAME}-${_SDATE}
fi
_eval lxc init ${ct_www} ${_CT_NAME} -p default -p global -p ${profile_www} -p ${profile}

#_echot "------------------  network fixed ip"
#
#if ! lxc list -f json | jq -r '.[] | select(.name == "'${_CT_NAME}'").devices[].name' | grep -q eth0; then
#	_eval lxc network attach ${s_inet} ${_CT_NAME} eth0 eth0
#fi
#_eval lxc config device set ${_CT_NAME} eth0 ipv4.address ${_CT_IP}

_echot "------------------  ${_CT_NAME} start"
_eval lxc start ${_CT_NAME}

########################  METADATA

_echot "------------------  metadata"
_lxc_meta_set ${_CT_NAME} profiles default global ${profile_www} ${profile}
_lxc_meta_add ${_CT_NAME} apps php7

########################  PATHS

_echot "------------------  paths ${_PHP_SERVICE}"

paths="${path_php_share}/tmp ${path_php_share}/sessions ${path_php_share}/soap ${path_xdebug_profile} ${path_xdebug_trace} ${path_fpm_pool}/www ${path_fpm_pool}/www-admin"
cmd="for path in ${paths}; do [ -d \${path} ] || mkdir -p \${path}; done"
_lxc_exec ${_CT_NAME} "${cmd}"

########################  INSTALL

_echot "------------------  update"
_lxc_exec ${_CT_NAME} "apk update"

_echot "------------------  install php7-fpm"
_lxc_exec ${_CT_NAME} "apk add php7-fpm"

_echot "------------------  install php7 modules"
_lxc_exec ${_CT_NAME} "apk add ${php_modules}"

_echot "------------------  service set & start"
service=${_PHP_SERVICE}
_lxc_exec ${_CT_NAME} "rc-update add ${service}"
_lxc_exec ${_CT_NAME} "rc-service ${service} start"

########################  CONF PHP.INI

_echot "------------------  conf php.ini global"
file=${file_php_conf}
_lxc_exec ${_CT_NAME} "[ -f ${file} ] && cp -a ${file} ${file}.${_SDATE}"

# global
cmds=; while read str val; do
	cmds+="sed -i 's|^;\?\(${str}\s*=\).*|\1 ${val}|' ${file}
"; done <<< "track_errors Off
max_execution_time  ${_PHP_MAX_EXECUTION_TIME}
max_input_time  ${_PHP_MAX_INPUT_TIME}
memory_limit  ${_PHP_MEMORY_LIMIT}
post_max_size  ${_PHP_POST_MAX_SIZE}
file_uploads  On
upload_max_filesize  ${_PHP_UPLOAD_MAX_FILESIZE}
date.timezone  'Europe/Paris'
session.use_strict_mode  ${_PHP_SESSION_STRICT_MODE}
session.save_handler  redis
session.save_path  \"tcp://${ct_rds}:${S_CACHE_PORT}\"
mail.log  syslog"
#error_log  syslog
#syslog.ident  php
#syslog.facility  user
_lxc_exec ${_CT_NAME} "${cmds}"

_echot "------------------  conf php.ini opcache"
cmds=; while read str val; do
	cmds+="sed -i 's|^;\?\(${str}\s*=\).*|\1 ${val}|' ${file}
"; done <<< "opcache.enable 1
opcache.enable_cli  0
opcache.memory_consumption  128
opcache.interned_strings_buffer  16
opcache.max_accelerated_files  10000
validate_timestamps  1
opcache.revalidate_freq  4
opcache.save_comments  1"
_lxc_exec ${_CT_NAME} "${cmds}"

_echot "------------------  conf php.ini paths"

cmds=; while read str val; do
	cmds+="sed -i 's|^;\?\(${str}\s*=\).*|\1 ${val}|' ${file}
"; done <<< "upload_tmp_dir  ${path_php_share}/tmp
sys_temp_dir  ${path_php_share}/tmp
soap.wsdl_cache_dir  ${path_php_share}/soap"
_lxc_exec ${_CT_NAME} "${cmds}"

########################  CONF PHP-FPM

file=${file_fpm_conf}
_lxc_exec ${_CT_NAME} "[ -f ${file} ] && cp -a ${file} ${file}.${_SDATE}"

_echot "------------------  conf php.fpm global"

cmds=; while read str val; do
	cmds+="sed -i 's|^;\?\(${str}\s*=\).*|\1 ${val}|' ${file}
"; done <<< "emergency_restart_threshold  ${_PHP_RESTART_THRESHOLD}
emergency_restart_interval  ${_PHP_RESTART_INTERVAL}
process_control_timeout  ${_PHP_CONTROL_TIMEOUT}
error_log  syslog
syslog.facility  daemon
syslog.ident  ${_PHP_SERVICE}
log_level  notice
log_limit  1024
log_buffering  yes"
_lxc_exec ${_CT_NAME} "${cmds}"

########################  POOL - WWW

pool=www
_echot "------------------  file pool ${pool}"
file=${path_fpm_conf}/${pool}.conf

_lxc_exec ${_CT_NAME} "[ -f ${file} ] && cp -a ${file} ${file}.${_SDATE}"
_echot "------------------  conf pool ${pool}"
cmds=; while read str val; do
	cmds+="sed -i 's|^;\?\(${str}\s*=\).*|\1 ${val}|' ${file}
"; done <<< "prefix  ${path_fpm_pool}/www
user apache
group apache
listen  ${_PHP_FPM_SOCK}
listen.backlog  $(( ${_APA_MAX_SYN_BACKLOG} / 2 ))
listen.owner  apache
listen.group  apache
listen.mode  0666
process.priority  0
process.dumpable  yes
pm dynamic
pm.max_children  ${_PHP_W_MAX_CHILDREN}
pm.start_servers  ${_PHP_W_START_SERVERS}
pm.min_spare_servers  ${_PHP_W_MIN_SPARE_SERVERS}
pm.max_spare_servers  ${_PHP_W_MAX_SPARE_SERVERS}
pm.max_requests  ${_PHP_W_MAX_REQUESTS}
pm.status_path  /status-www
ping.path  /ping-www
ping.response  pong
access.log  ${S_PATH_LOG}/php7/\$pool.access.info
slowlog  ${S_PATH_LOG}/php7/\$pool.slow.info
request_slowlog_timeout  ${_PHP_SLOWLOG_TIMEOUT}
catch_workers_output  yes"
_lxc_exec ${_CT_NAME} "${cmds}"

_lxc_exec ${_CT_NAME} "sed -i 's|^;\?\(access.format\s*=\).*|\1  \"%R - %u %t \\\\\"%m %r%Q%q\\\\\" %s %f %{mili}d %{kilo}M %C%%\"|' ${file}"

########################  POOL - WWW-ADMIN

pool=www-admin

_echot "------------------  file pool ${pool}"
file=${path_fpm_conf}/${pool}.conf
_lxc_exec ${_CT_NAME} "[ -f ${file} ] && cp -a ${file} ${file}.${_SDATE}"
_lxc_exec ${_CT_NAME} "cp -a ${path_fpm_conf}/www.conf.${_SDATE} ${file}"

_echot "------------------  conf pool ${pool}"
_lxc_exec ${_CT_NAME} "sed -i 's|^\[.*\]$|[${pool}]|' ${file}"

cmds=; while read str val; do
	cmds+="sed -i 's|^;\?\(${str}\s*=\).*$|\1 ${val}|' ${file}
"; done <<< "prefix  ${path_fpm_pool}/www-admin
user apache
group apache
listen  ${_PHP_FPM_ADMIN_SOCK}
listen.backlog  $(( ${_APA_MAX_SYN_BACKLOG} / 2 ))
listen.owner  apache
listen.group  apache
listen.mode  0666
process.priority  0
process.dumpable  yes
pm static
pm.max_children  1
pm.max_requests  100000
pm.status_path  /status-www-admin
ping.path  /ping-www-admin
ping.response  pong"
_lxc_exec ${_CT_NAME} "${cmds}"

########################  APACHE

_echot "------------------  apache php-fpm"

file=${path_apache_conf}/${file_phpfpm##*/}
_eval lxc file push -q ${file_phpfpm} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} php apache

_echot "------------------  localhost files"
_lxc_exec ${_CT_NAME} "echo '<?php phpinfo() ?>' > ${_APA_PATH_WWW}/phpinf.php"
file=${_APA_PATH_WWW}/index.php
_lxc_exec ${_CT_NAME} "echo '<html><body><h1><?php echo \"php works!\" ?></h1></body></html>' > ${file}"
file=${_APA_PATH_WWW}/index.html
_lxc_exec ${_CT_NAME} "[ -f ${file} ] && mv ${file} ${file}.keep"

_echot "------------------  ${_DOM_FQDN} files"
_lxc_exec ${_CT_NAME} "echo '<?php phpinfo() ?>' > ${path_dom}/html/phpinf.php"
file=${path_dom}/html/index.php
_lxc_exec ${_CT_NAME} "echo '<html><body><h1>${_DOM_FQDN} php works!</h1></body></html>' > ${file}"
file=${path_dom}/index.html
_lxc_exec ${_CT_NAME} "[ -f ${file} ] && mv ${file} ${file}.keep"

########################  PING-MONITOR

_echot "------------------  ping-monitor file"
_lxc_exec ${_CT_NAME} "echo '<?php echo \"pong\"; ?>' > ${_APA_PATH_WWW}/ping-monitor.php"

_echot "------------------  ping-monitor conf"
file=${path_apache_conf}/${file_monitor##*/}
_keepcpts ${file}
_eval lxc file push -q ${file_monitor} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} apache php

########################  OPCACHE

_echot "------------------  opcache file"
url=https://raw.githubusercontent.com/rlerdorf/opcache-status/master/opcache.php
file=${_APA_PATH_WWW}/opcache.php
_lxc_exec ${_CT_NAME} "wget -q ${url} -O ${file}"

_echot "------------------  opcache conf"
file=${path_apache_conf}/${file_opcache##*/}
_keepcpts ${file}
_eval lxc file push -q ${file_opcache} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} apache php

########################  RIGHTS

_echot "------------------  rights"
_lxc_exec ${_CT_NAME} "chown apache:apache -R ${path_php_share}/*"
_lxc_exec ${_CT_NAME} "chown apache:apache -R ${_APA_PATH_WWW}"
_lxc_exec ${_CT_NAME} "chown apache:apache -R ${path_dom}/*"

########################  RESTART

_echot "------------------  ${_PHP_SERVICE} restart"
_lxc_exec ${_CT_NAME} "rc-service ${_PHP_SERVICE} restart"

_echot "------------------  apache2 restart"
_lxc_exec ${_CT_NAME} "rc-service apache2 restart"

########################  RSYSLOG

_echot "------------------  ${S_SERVICE[log]} host path"
path=${S_VM_PATH_LOG}/php7
_lxc_exec ${S_SERVICE[log]} "[ -d ${path} ] || mkdir -p ${path}"

_echot "------------------  ${S_SERVICE[log]} host"
file=/etc/rsyslog.d/${file_rsyslog_host##*/}
_eval lxc file push -q ${file_rsyslog_host} ${S_SERVICE[log]}${file}
_lxc_var_replace ${S_SERVICE[log]} ${file} rsyslog php

_echot "------------------  rsyslog restart ${S_SERVICE[log]}"
_lxc_exec ${S_SERVICE[log]} "rc-service rsyslog restart"

_echot "------------------  ${_CT_NAME} client path"
path=${S_PATH_LOG}/php7
_lxc_exec ${_CT_NAME} "[ -d ${path} ] || mkdir -p ${path}"

_echot "------------------  ${_CT_NAME} client"
file=/etc/rsyslog.d/${file_rsyslog_client##*/}
_eval lxc file push -q ${file_rsyslog_client} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} rsyslog php

_echot "------------------  rsyslog restart ${_CT_NAME}"
_lxc_exec ${_CT_NAME} "rc-service rsyslog restart"

########################  LOGROTATE

_echot "------------------  ${S_SERVICE[log]} logrotate"
file=/etc/logrotate.d/${file_logrotate_host##*/}
_eval lxc file push -q ${file_logrotate_host} ${S_SERVICE[log]}${file}
_lxc_var_replace ${S_SERVICE[log]} ${file} logrotate
_lxc_exec ${S_SERVICE[log]} "chmod g-w,o= /etc/logrotate.d/*"

_echot "------------------  ${S_SERVICE[log]} crond restart"
_lxc_exec ${S_SERVICE[log]} "rc-service crond restart"

_echot "------------------  ${_CT_NAME} logrotate"
file=/etc/logrotate.d/${file_logrotate_client##*/}
_eval lxc file push -q ${file_logrotate_client} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} logrotate
_lxc_exec ${_CT_NAME} "chmod g-w,o= /etc/logrotate.d/*"

_echot "------------------  ${_CT_NAME} crond restart"
_lxc_exec ${_CT_NAME} "rc-service crond restart"

########################  CLEAN LOG

_echot "------------------  ${_CT_NAME} log clean"
_lxc_exec ${_CT_NAME} "find ${S_PATH_LOG}/php7 -name *.log -exec rm {} \;"

########################  COPY

for i in `seq 2 ${ct_num}`; do
	ct_name=${ct_base}-${i}
	_echot "---------- build ${ct_name}"

	if lxc list -f csv -c n | grep -q ^${ct_name}$; then
		lxc list -f csv -c n status=Running| grep -q ^${ct_name}$ && _eval lxc stop ${ct_name}
		_eval lxc rename ${ct_name} ${ct_name}-${_SDATE}
	fi
	_eval lxc copy ${_CT_NAME} ${ct_name}
	_eval lxc start ${ct_name}
done

########################  TEST

_echot "------------------  php test"

_echoA "To verify php configuration, type:"
_echoa "curl ${_IPTHIS}/phpinf.php"
_echoa "curl ${_CT_NAME}/phpinf.php"
_echoa "curl ${_DOM_FQDN}:80"

_echoA "To verify ping response, type:"
_echoa "curl ${_CT_NAME}/ping-monitor"

_echoA "To verify opcache response, type:"
_echoa "curl ${_CT_NAME}/opcache"

_echoA "To verify 'www' pool informations, type:"
_echoa "curl ${_CT_NAME}/status-www"
_echoa "curl ${_CT_NAME}/status-www?full"

_echoA "To verify 'www-admin' pool informations, type:"
_echoa "curl ${_CT_NAME}/status-www-admin"
_echoa "curl ${_CT_NAME}/status-www-admin?full"

########################  HAPROXY

_echoA "\nAdjust backend in proxy for domain: ${_DOM_FQDN} with:"
_echoa $(for i in `seq 1 ${ct_num}`; do echo ${ct_base}-${i};done)

########################  PUBLISH

for i in `seq 1 ${ct_num}`; do
 	ct_name=${ct_base}-${i}
	_echot "------------------  publish ${ct_name}"
	lxc image list -f csv -c l | grep -q ^${ct_name}$ && _eval lxc image alias rename ${ct_name} ${ct_name}-${_SDATE}
	_eval lxc publish --force ${ct_name} --alias ${ct_name}
done

########################  END

_echoT "===================== ${_PART} end"
_partadd ${_PART#++} ${S_FILE_INSTALL_DONE}

#!/bin/bash
#
# write by Aguy


_echoT "\n==========================================  $S_RELEASE $_PART"


####################################  MAIN

_SSH_PORT=$(sed -n 's|.*port=\([^ ]\+\).*|\1|p' <<<${S_CLUSTER[$HOSTNAME]})

_echoT "----------  ssh-keygen"

_askyn "Do you wante to generate new keys for ssh"
[ "$_ANSWER" = y ] && _eval "ssh-keygen -t rsa"


_echoT "----------  ssh configure"

_askno "Give an port for SSH connection ($_SSH_PORT) "
[ "$_ANSWER" ] && _SSH_PORT="$_ANSWER" && _confset _SSH_PORT $_SSH_PORT $S_GLOBAL_CONF

# client
file='/etc/ssh/ssh_config'
_keepcpts "$file"
sed -i "/^\s*GSSAPIAuthentication yes/ s| yes| no|" "$file"

# server
file='/etc/ssh/sshd_config'
_keepcpts "$file"

sed -i "/^#\?Port/ c Port ${_SSH_PORT}" "$file"
sed -i "/^#\?GSSAPIAuthentication/ {s|^#||;s| yes| no|}" "$file"
sed -i "/^#\?UseDNS/ {s|^#||;s| yes| no|}" "$file"
sed -i "/^#\?PasswordAuthentication/ {s|^#||;s| yes| no|}" "$file"
sed -i "/^#\?ClientAliveInterval/ c ClientAliveInterval 300" "$file"
sed -i "/^#\?ClientAliveCountMax/ c ClientAliveCountMax 3" "$file"


_echoT "----------  ssh restart"

_service restart sshd


str=" home ovh "; if [ "${str/ "$S_SERVER_TYPE" /}" != "$str" ]; then

	_echoT "----------  ssh restore"

	# use saved keys
	file=${HOSTNAME}-ssh.tgz
	if [ -f "${S_PATH_INSTALL_CONF}/ssh/$file" ]; then
		_askyn "Would you replace ssh keys with backuped ones in\n'${S_PATH_INSTALL_XTRA}/$file'"
		if [ "$_ANSWER" == y ]; then
			_evalq cd "$S_PATH_INSTALL_XTRA"
			_evalq tar xzf "$file"
			_evalq mv .ssh/id_rsa* ~/.ssh
			_evalq rm -fR .ssh
			_evalq cd
		fi
	else
		_echoT "Unable to find file: '${S_PATH_INSTALL_XTRA}/$file'"
		_askno "If this installation are a re-installation,\nPlease overwrite manually key files in ~/.ssh"
	fi

	if ! [ -f ~/.ssh/id_rsa ]
	then
		_echoT "----------  ssh-keygen"
		! [ -f ~/.ssh/id_rsa ] && _eval "ssh-keygen -t rsa"
		#ssh-copy-id <username>@<host>
		# root
		#sudo ssh-keygen -t rsa
		#gksudo ssh-copy-id <username>@<host>
		#exit
	fi

	_echoT "----------  ssh backup"

	file=${S_PATH_SAVE_BACKUP}/${HOSTNAME}-ssh.tgz
	cd
	tar cvzf "$file" .ssh/
	_echoT "a backup of path '.ssh' have been made in '$file'\nPlease keep it safe"

fi


_echoT "----------  end"
_eval "_partadd ${_PART} ${S_FILE_INSTALL_DONE}"


<<keep
# /etc/ssh/sshd_config
'PermitRootLogin yes
PubkeyAuthentication yes
PasswordAuthentication no
UsePAM yes
Match User git
    PasswordAuthentication yes'
keep


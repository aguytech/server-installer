#!/bin/bash
#
# write by Aguy

_echoT "#################### START $_PARTMAIL"


########################################  MAIN

_echoT "----------  User add $_VMAIL_USER"

_evalq useradd -u "$_VMAIL_UID" -U -d "$_VMAIL_PATH" "$_VMAIL_USER"


_echoT "----------  Path $_VMAIL_PATH create"

if [ "$S_SERVER_TYPE" == vz ]; then

    if [ "$_PATH_VMAIL" != "$_VMAIL_PATH" ]; then
        [ -d "$_VMAIL_PATH" ] && rm -fR "$_VMAIL_PATH"
        [ ! -h "$_VMAIL_PATH" ] && ln -sv "$_PATH_VMAIL" "$_VMAIL_PATH"
    fi


fi

! [ -d "${_PATH_VMAIL}/mailboxes" ] && _evalq mkdir -p "${_PATH_VMAIL}/mailboxes"
! [ -d "${_PATH_SIEVE}/global" ] && _evalq mkdir -p "${_PATH_SIEVE}/global"


_echoT "----------  Dovecot install"

_evalq "apt install -y dovecot-core dovecot-imapd dovecot-lmtpd dovecot-mysql dovecot-sieve dovecot-managesieved"


_echoT "----------  Dovecot stop"

_evalq "systemctl stop dovecot.service"


######################################## DOVECOT-SQL.CONF


_echoT "----------  Dovecot conf sql"

# dovecot-sql.conf.ext
FILE=/etc/dovecot/dovecot-sql.conf.ext
[ ! -f "$FILE.$_DDATE" ] && _evalq cp -a "$FILE" "$FILE.$DDATE"


SCH="driver"; STR="mysql"
sed -i "s|^#\?\($SCH\s*=\)\s*.*$|\1 $STR|" "$FILE"
SCH="connect"; STR="\"host=$_DBHOST dbname=$_DBNAME user=$_DBUSER password=$_DBPWD\""
sed -i "s|^#\?\($SCH\s*=\)\s*.*$|\1 $STR|" "$FILE"
STR="SHA512-CRYPT"; SCH="default_pass_scheme"
sed -i "s|^#\?\($SCH\s*=\)\s*.*$|\1 $STR|" "$FILE"

if [ "$_VMAIL_NAME" == "postfixadmin" ]; then
    SCH="password_query"; STR="SELECT username, password, domain FROM mailbox WHERE username = '%u' AND active = true"
    sed -i "/default_pass_scheme/,/user_query/{s|^#\?\($SCH *=\).*$|\1 $STR|}" "$FILE"
    SCH="user_query"; STR="SELECT concat('*:storage=', quota) AS quota_rule FROM mailbox WHERE username = '%u' AND active = true"
    sed -i "s|^#\?\($SCH *=\).*$|\1 $STR|" "$FILE"
    SCH="iterate_query"; STR="SELECT username, domain FROM mailbox WHERE active = true"
    sed -i "s|^#\?\($SCH *=\).*$|\1 $STR|" "$FILE"
elif [ "$_VMAIL_NAME" == "vmailmanage" ]; then
    SCH="password_query"; STR="SELECT username AS user, domain, password FROM accounts WHERE username = '%n' AND domain = '%d' AND enabled = true"
    sed -i "/default_pass_scheme/,/user_query/{s|^#\?\($SCH *=\).*$|\1 $STR|}" "$FILE"
    SCH="user_query"; STR="SELECT concat('*:storage=', quota, 'M') AS quota_rule FROM accounts WHERE username = '%n' AND domain = '%d' AND sendonly = false"
    sed -i "s|^#\?\($SCH *=\).*$|\1 $STR|" "$FILE"
    SCH="sendonly"; STR="false"
    sed -i "s|^#\?\($SCH *=\).*$|\1 $STR|" "$FILE"
    SCH="iterate_query"; STR="SELECT username, domain FROM accounts WHERE sendonly = false"
    sed -i "s|^#\?\($SCH *=\).*$|\1 $STR|" "$FILE"
fi


######################################## DOVECOT CONF


_echoT "----------  Dovecot conf"

# dovecot.conf
FILE=/etc/dovecot/dovecot.conf
[ ! -f "$FILE.$_DDATE" ] && _evalq cp -a "$FILE" "$FILE.$DDATE"

SCH='login_trusted_networks'; STR="127.0.0.1 ${_VM_IP_BASE}.0/24 ${_IPSIN}"; sed -i "s|^#\s*\?\(${SCH}\s*=\).*$|\1 ${STR}|" "$FILE"

# conf.d
PATHCONF=/etc/dovecot/conf.d
[ ! -f $PATHCONF.$_DDATE ] && _evalq cp -a "$PATHCONF" "$PATHCONF.$DDATE"


# 10-auth
FILE="$PATHCONF/10-auth.conf"
SCH='disable_plaintext_auth'; STR='yes'; sed -i "s|^#\?\(${SCH}\s*= \).*|\1${STR}|" "$FILE"
SCH='auth_mechanisms'; STR='plain login'; sed -i "s|^#\?\(${SCH}\s*= \).*|\1${STR}|" "$FILE"
SCH='!include auth-system.conf.ext'; sed -i "s|^\(${SCH}.*\)|#\1|" "$FILE"
SCH='!include auth-sql.conf.ext'; sed -i "s|^#\(${SCH}.*\)|\1|" "$FILE"


# 10-logging.conf
FILE="$PATHCONF/10-logging.conf"
SCH='log_path'; STR="syslog"; sed -i "s|^#\?\(${SCH}\s*=\).*|\1 ${STR}|" "$FILE"
SCH='info_log_path'; STR="$S_PATH_LOG/dovecot.log"; sed -i "s|^#\?\(${SCH}\s*=\).*|#\1 ${STR}|" "$FILE"
SCH='debug_log_path'; STR="$S_PATH_LOG/dovecot-debug.log"; sed -i "s|^#\?\(${SCH}\s*=\).*|#\1 ${STR}|" "$FILE"
SCH='syslog_facility'; STR="mail"; sed -i "s|^#\?\(${SCH}\s*=\).*|\1 ${STR}|" "$FILE"

echo "$S_PATH_LOG/dovecot.log
$S_PATH_LOG/dovecot-error.log
$S_PATH_LOG/dovecot-debug.log
{
    rotate 5
    weekly
    missingok
    notifempty
    compress
    delaycompress
    #create 640 root dovecot
}" > /etc/logrotate.d/dovecot


# 10-mail.conf
FILE="$PATHCONF/10-mail.conf"
begin='namespace inbox {'; end='}'
SCH="type"; STR="private"; sed -i "/^\s*${begin}/,/^\s*${end}/s/^\(\s*\)#\?\(${SCH}\s*=\).*/\1\2 ${STR}/" "$FILE"
SCH="prefix"; STR=""; sed -i "/^\s*${begin}/,/^\s*${end}/s/^\(\s*\)#\?\(${SCH}\s*=\).*/\1\2 ${STR}/" "$FILE"
SCH="location"; STR=""; sed -i "/^\s*${begin}/,/^\s*${end}/s/^\(\s*\)#\?\(${SCH}\s*=\).*/\1\2 ${STR}/" "$FILE"
SCH="inbox"; STR="yes"; sed -i "/^\s*${begin}/,/^\s*${end}/s/^\(\s*\)#\?\(${SCH}\s*=\).*/\1\2 ${STR}/" "$FILE"

SCH='mail_uid'; STR='vmail'; sed -i "s|^#\?\(${SCH}\s*=\).*|\1 ${STR}|" "$FILE"
SCH='mail_gid'; STR='vmail'; sed -i "s|^#\?\(${SCH}\s*=\).*|\1 ${STR}|" "$FILE"
SCH='mail_privileged_group'; STR='vmail'; sed -i "s|^#\?\(${SCH}\s*=\).*|\1 ${STR}|" "$FILE"
SCH='mail_location'; STR="maildir:~/mail:LAYOUT=fs\nmail_home = ${_PATH_VMAIL}/mailboxes/%d/%n"; sed -i "s|^#\?\(${SCH}\s*=\).*|\1 ${STR}|" "$FILE"
SCH='mail_plugin_dir'; STR='/usr/lib/dovecot/modules'; sed -i "s|^\(\s*\)#\?\(${SCH}\s*=\).*|\1\2 ${STR}|" "$FILE"

begin='namespace inbox {'; end='}'
SCH='inbox'; STR='yes'; sed -i "/^${begin}/,/^${end}/s|^\(\s*${SCH}\s*=\).*|\1 ${STR}|" "$FILE"


# 10-master.conf
FILE="$PATHCONF/10-master.conf"
sed -i "/^\s*unix_listener lmtp/,/^\s*}/s/^\(  \)\(.*\)/\1#\2/" "$FILE"
SCH='service lmtp {'
STR="  unix_listener /var/spool/postfix/private/dovecot-lmtp {\n    mode = 0660\n    group = postfix\n    user = postfix\n  }\n  user = vmail\n"
sed -i "s|^\(\s*$SCH.*\)$|\1\n$STR|" "$FILE"

begin='unix_listener auth-userdb {'; end='}'
SCH="mode"; STR="0660"; sed -i "/^\s*${begin}/,/^\s*${end}/s/^\(\s*\)#\?\(${SCH}\s*= \).*/\1\2${STR}/" "$FILE"
SCH="user"; STR="vmail"; sed -i "/^\s*${begin}/,/^\s*${end}/s/^\(\s*\)#\?\(${SCH}\s*= \).*/\1\2${STR}/" "$FILE"
SCH="group"; STR="vmail"; sed -i "/^\s*${begin}/,/^\s*${end}/s/^\(\s*\)#\?\(${SCH}\s*= \).*/\1\2${STR}/" "$FILE"

begin='unix_listener /var/spool/postfix/private/auth'; end='}'
sed -i "\|^\s*#${begin}|,/^\s*#${end}/s|#||" "$FILE"
SCH="mode = 0666"; STR="    mode = 0660\n    user = postfix\n    group = postfix"; sed -i "\|^\s*${begin}|,/^\s*}/s|^\s*${SCH}|${STR}|" "$FILE"

begin='inet_listener imap {'; end='}'
SCH="port"; STR="143"; sed -i "/^\s*${begin}/,/^\s*${end}/s/^\(\s*\)#\?\(${SCH}\s*= \).*/\1\2${STR}/" "$FILE"
begin='inet_listener imaps {'; end='}'
SCH="port"; STR="993"; sed -i "/^\s*${begin}/,/^\s*${end}/s/^\(\s*\)#\?\(${SCH}\s*= \).*/\1\2${STR}/" "$FILE"
SCH="ssl"; STR="yes"; sed -i "/^\s*${begin}/,/^\s*${end}/s/^\(\s*\)#\?\(${SCH}\s*= \).*/\1\2${STR}/" "$FILE"


# 10-ssl.conf
FILE="$PATHCONF/10-ssl.conf"
SCH='ssl'; STR="required"; sed -i "s|^\(\s*${SCH}\s*= \).*|\1${STR}|" "$FILE"
SCH='ssl_cert'; STR="\<$_FILESSLCRT"; sed -i "s|^#\?\(${SCH}\s*= \).*|\1${STR}|" "$FILE"
SCH='ssl_key'; STR="\<$_FILESSLKEY"; sed -i "s|^#\?\(${SCH}\s*= \).*|\1${STR}|" "$FILE"
SCH='ssl_dh_parameters_length'; STR="2048"; sed -i "s|^#\?\(${SCH}\s*= \).*|\1${STR}|" "$FILE"
SCH='ssl_protocols'; STR='!SSLv3'; sed -i "s|^#\?\(${SCH}\s*= \).*|\1${STR}|" "$FILE"
SCH='ssl_cipher_list'; STR='EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH:CAMELLIA128-SHA:AES128-SHA'; sed -i "s|^#\?\(${SCH}\s*= \).*|\1${STR}|" "$FILE"
SCH='ssl_prefer_server_ciphers'; STR="yes"; sed -i "s|^#\?\(${SCH}\s*= \).*|\1${STR}|" "$FILE"


# 15-lda.conf
#FILE="$PATHCONF/15-lda.conf"
#SCH='postmaster_address'; STR="postmaster@${_MYDOMAIN}"; sed -i "s|^#\?\s*\(${SCH}\s*=\).*|\1 ${STR}|" "$FILE"
#SCH='sendmail_path'; STR="/usr/sbin/sendmail"; sed -i "s|^#\?\s*\(${SCH}\s*=\).*|\1 ${STR}|" "$FILE"


# 15-mailboxes.conf
FILE="$PATHCONF/15-mailboxes.conf"
SCH='mailbox Trash {'; STR="  mailbox Spam {\n    special_use = \\\\Junk\n  }"
sed -i "s|^\(\s*${SCH}.*\)|${STR}\n\1|" "$FILE"

# auto create
SCH='special_use ='; STR="    auto = create"; sed -i "s|^\(\s*${SCH}.*\)|\1\n${STR}|" "$FILE"
begin='mailbox Junk {'; end='}'
sed -i "\|^\s*#\?${begin}|,/^\s*#\?${end}/s|^\( *auto = create.*\)|#\1|" "$FILE"
begin="mailbox \"Sent Messages\" {"; end='}'
sed -i "\|^\s*#\?${begin}|,/^\s*#\?${end}/s|^\( *auto = create.*\)|#\1|" "$FILE"


# 20-imap.conf
FILE="$PATHCONF/20-imap.conf"
SCH='mail_plugins'; STR='$mail_plugins quota imap_quota imap_sieve imap_zlib zlib'; sed -i "s|^\(\s*\)#\?\(${SCH}\s*= \).*|\1\2${STR}|" "$FILE"
SCH='mail_max_userip_connections'; STR='20'; sed -i "s|^\(\s*\)#\?\(${SCH}\s*= \).*|\1\2${STR}|" "$FILE"
SCH='imap_idle_notify_interval'; STR='2 mins'; sed -i "s|^\(\s*\)#\?\(${SCH}\s*= \).*|\1\2${STR}|" "$FILE"


# 20-lmtp.conf
FILE="$PATHCONF/20-lmtp.conf"
SCH='protocol lmtp {'
STR="  postmaster_address = postmaster@ambau.ovh"
sed -i "s|^\(${SCH}.*\)$|\1\n${STR}|" "$FILE"
SCH='mail_plugins'; STR="\$mail_plugins sieve zlib"; sed -i "s|^\(\s*\)#\?\(${SCH}\s*= \).*$|\1\2${STR}|" "$FILE"

# 20-managesieve.conf
FILE="$PATHCONF/20-managesieve.conf"
SCH='protocols'; STR="\$protocols imap lmtp sieve"; sed -i "s|^#\?\s*\(${SCH}\s*=\).*$|\1 ${STR}|" "$FILE"
#service managesieve-login {
begin='service managesieve-login {'; end='}'
sed -i "\|^#${begin}|,/^#${end}/s|^#||" "$FILE"
begin='inet_listener sieve {'; end='}'
sed -i "\|^\s*#${begin}|,/^\s*#${end}/s|#||" "$FILE"

# 90-quota.conf
FILE="$PATHCONF/90-quota.conf"
SCH='quota = maildir:User quota'; STR="quota_exceeded_message = User %u has exhausted allowed storage space."; sed -i "s|^\(\s*\)#\?\(${SCH}.*\)$|\1\2\n\1${STR}|" "$FILE"


# 90-plugin.conf
FILE="$PATHCONF/90-plugin.conf"
sed -i "/zlib_save_level/d" "$FILE"
sed -i "/zlib_save/d" "$FILE"
SCH='plugin {'; STR="plugin {\n  zlib_save_level = 6\n  zlib_save = gz"; sed -i "s|^\($SCH\)$|$STR|" "$FILE"


# 90-sieve.conf
FILE="$PATHCONF/90-sieve.conf"
SCH='sieve_plugins'; STR="sieve_imapsieve sieve_extprograms"; sed -i "s|^\(\s*\)#\?\(${SCH}\s*=.*\)$|\1\2 ${STR}|" "$FILE"
SCH='sieve_before3'; STR="sieve_before = ${_PATH_SIEVE}/global/spam-global.sieve"; sed -i "s|^\(\s*\)\(#\?${SCH}\s*=.*\)$|\1\2\n\1${STR}|" "$FILE"
SCH='sieve'; STR="file:${_PATH_SIEVE}/%d/%n/scripts;active=${_PATH_SIEVE}/%d/%n/active-script.sieve"; sed -i "s|^\(\s*\)#\?\(${SCH}\s*=\).*$|\1\2 ${STR}|" "$FILE"
SCH='sieve_global_extensions'; STR="+vnd.dovecot.pipe"; sed -i "s|^\(\s*\)#\?\(${SCH}\s*=\).*$|\1\2 ${STR}|" "$FILE"
SCH='}'; STR="\n  ## Spam learning\n  # From elsewhere to Spam folder\n  imapsieve_mailbox1_name = Spam\n  imapsieve_mailbox1_causes = COPY\n  imapsieve_mailbox1_before = file:${_PATH_SIEVE}/global/learn-spam.sieve\n\n  # From Spam folder to elsewhere\n  imapsieve_mailbox2_name = *\n  imapsieve_mailbox2_from = Spam\n  imapsieve_mailbox2_causes = COPY\n  imapsieve_mailbox2_before = file:${_PATH_SIEVE}/global/learn-ham.sieve"; sed -i "s|^\(${SCH}.*\)|${STR}\n\1|" "$FILE"


# 90-sieve-extprograms.conf
FILE="$PATHCONF/90-sieve-extprograms.conf"
SCH='sieve_pipe_socket_dir'; STR="sieve-pipe"; sed -i "s|^\(\s*\)#\?\(${SCH}\s*=\).*$|\1\2 ${STR}|" "$FILE"
SCH='sieve_filter_socket_dir'; STR="sieve-filter"; sed -i "s|^\(\s*\)#\?\(${SCH}\s*=\).*$|\1\2 ${STR}|" "$FILE"
SCH='sieve_execute_socket_dir'; STR="sieve-execute"; sed -i "s|^\(\s*\)#\?\(${SCH}\s*=\).*$|\1\2 ${STR}|" "$FILE"
SCH='sieve_pipe_bin_dir'; STR="/usr/bin"; sed -i "s|^\(\s*\)#\?\(${SCH}\s*=\).*$|\1\2 ${STR}|" "$FILE"
SCH='sieve_filter_bin_dir'; STR="/usr/bin"; sed -i "s|^\(\s*\)#\?\(${SCH}\s*=\).*$|\1\2 ${STR}|" "$FILE"
SCH='sieve_execute_bin_dir'; STR="/usr/bin"; sed -i "s|^\(\s*\)#\?\(${SCH}\s*=\).*$|\1\2 ${STR}|" "$FILE"


<<KEEP
# auth-sql.conf.ext
FILE='auth-sql.conf.ext'
begin='userdb {'; end='}'
sed -i "/^${begin}/,/^${end}/ s/^\(.*\)/#\1/" "$FILE"
echo "userdb {
  driver = prefetch
}" >> "$FILE"
KEEP


########################################  SIEVE
#_PATH_SIEVE

_echoT "----------  Sieve conf"

FILE="${_PATH_SIEVE}/global/spam-global.sieve"
cat > $FILE << EOF
require "fileinto";

if header :contains "X-Spam-Flag" "YES" {
    fileinto "Spam";
}

if header :is "X-Spam" "Yes" {
    fileinto "Spam";
}
EOF
_evalq "sievec $FILE"

FILE="${_PATH_SIEVE}/global/learn-spam.sieve"
cat > $FILE << EOF
require ["vnd.dovecot.pipe", "copy", "imapsieve"];
pipe :copy "rspamc" ["learn_spam"];
EOF
_evalq "sievec $FILE"

FILE="${_PATH_SIEVE}/global/learn-ham.sieve"
cat > $FILE << EOF
require ["vnd.dovecot.pipe", "copy", "imapsieve"];
pipe :copy "rspamc" ["learn_ham"];
EOF
_evalq "sievec $FILE"


_echoT "----------  right on vmail"

_evalq chown "$_VMAIL_USER":"$_VMAIL_USER" "$_PATH_SSL"
_evalq chown "$_VMAIL_USER":"$_VMAIL_USER" -R  "$_PATHSSLKEY" "$_PATHSSLCRT"

_evalq chown "$_VMAIL_USER":"$_VMAIL_USER" -R "$_PATH_MAIL" "$_PATH_VMAIL" "$_PATH_SIEVE"
_evalq chmod g-rwx -R "$_PATH_VMAIL"
_evalq "find '$_PATH_VMAIL' -type f -exec chmod 640 '{}' \;"


########################################  END

_echoT "------------------ write $_PARTMAIL"
_partadd "$_PARTMAIL" "$_FILEMAILDONE"

_echoT "#################### END $_PARTMAIL"

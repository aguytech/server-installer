#!/bin/bash
#
# write by Aguy


####################################  global configuration

! type _menu &>/dev/null && ! [ -f $S_GLOBAL_FUNCTIONS ] && echo -e "\e[1;31mUnable to load file '/usr/local/bs/inc-functions'${cclear} from ${BASH_SOURCE[0]}\e[0;0m" && exit 1
. $S_GLOBAL_FUNCTIONS


_echoT "\n==========================================  $S_RELEASE $_PART"


_echoT "----------  openvz tools install"

_eval "apt-get install -y vzctl vzquota ploop vzstats vzdump bridge-utils"

! [ -d /var/lib/vz/vztmp ] && _eval "mkdir /var/lib/vz/vztmp"


_echoT "----------  vzdump modify"

cp -a /usr/share/perl5/PVE/VZDump.pm /usr/share/perl5/PVE/VZDump.pm.$DDATE
str='\"vzdump_\" . \$vmid . \"_\" . $vmname;'; pre='\tmy $vmname = `vzlist -Ho hostname $vmid`; chomp $vmname;'; sed -i "s/^\(\(.*my \$bkname = \).*\)$/#\1\n$pre\n\2$str/" /usr/share/perl5/PVE/VZDump.pm
str='sprintf \"\${bkname}_%04d%02d%02d-%02d%02d%02d\",'; sed -i "s/^\(\(.*my \$basename = \).*\)$/#\1\n\2$str/" /usr/share/perl5/PVE/VZDump.pm


_echoT "----------  paths create"

! [ -d $S_HOSTING_PATH_SHARE ] && _eval "mkdir -p $S_HOSTING_PATH_SHARE"
! [ -d $S_VZ_PATH_DUMP/$S_PATH_VZ_DUMP_REL_XTRA ] && _eval "mkdir -p $S_VZ_PATH_DUMP/$S_PATH_VZ_DUMP_REL_XTRA"
! [ -d $S_VZ_PATH_DUMP_TEMPLATE/$S_PATH_VZ_DUMP_REL_XTRA ] && _eval "mkdir -p $S_VZ_PATH_DUMP_TEMPLATE/$S_PATH_VZ_DUMP_REL_XTRA"

! [ -d $S_VZ_PATH_DUMP_SNAPSHOT ] && _eval "mkdir -p $S_VZ_PATH_DUMP_SNAPSHOT"
! [ -d $S_VZ_PATH_DUMP_SUSPEND ] && _eval "mkdir -p $S_VZ_PATH_DUMP_SUSPEND"


file=/etc/fail2ban/jail.local
if ! grep -q "\[ssh-vz\]" /etc/fail2ban/jail.local; then
	_echoT "----------  fail2ban enable ssh-vz"

	pattern='\[dropbear\]'
	str="\[ssh-vz\]\n\nenabled  = true\nport     = ssh\nfilter   = sshd\nlogpath  = $S_VZ_PATH_NODE/*/log/auth.log\nmaxretry = 3\n"
	sed -i "/$pattern/ i $str" $file
fi


_echoT "----------  firewall test"

_eval "service firewall stop"
_askyn "Verify iptables rules with 'iptl' & 'iptln'"
[ $_ANSWER == n ] && _exit 1

_eval "service firewall start"
_askyn "Verify iptables rules with 'iptl' & 'iptln'"
[ $_ANSWER == n ] && _exit 1


_echoT "----------  logrotate conf"

file=/etc/logrotate.d/vzctl
# add compress
! grep -q compress "$file" &&  sed -i "s|^\([[:space:]]*\)\(rotate.*\)|\1\2\n\1compress|" $file
! grep -q delaycompress "$file" &&  sed -i "s|^\([[:space:]]*\)\(compress.*\)|\1\2\n\1delaycompress|" $file


_echoT "----------  end"
_eval "_partadd ${_PART} ${S_FILE_INSTALL_DONE}"


<<keep

--------------------------------------------------------
network_nat()

# http://help.ovh.co.uk/Proxmox

ctIp=${ctIp:-10.0.0.121}
hostInt=$S_ETH # connected to web
hostIp=${hostIp:-$(ifconfig $S_ETH | awk '/inet addr/{print substr($2,6)}')} # 91.121.133.145

# net
iptables -t nat -A POSTROUTING -s $ctIp/24 -o $hostInt -j SNAT --to $hostIp

# ssh
sshIn="1022"; iptables -t nat -A PREROUTING -i $hostInt -p tcp --dport $sshIn -j DNAT --to $ctIp:22

file='/etc/init.d/vz-nath'
echo '#!/bin/sh
' > $file
echo "
case \"\$1\" in
start) echo 'Starting iptables NAT for openvz'
    /sbin/iptables -t nat -A POSTROUTING -s 10.0.0.0/24 -o $hostInt -j SNAT --to $hostInt

    /sbin/iptables -t nat -A PREROUTING -i $hostInt -p tcp --dport 1022 -j DNAT --to $hostInt

    ;;
stop) echo 'Stopping iptables NAT for openvz'
    #replace $hostInt by the ip output
    /sbin/iptables -t nat -D POSTROUTING -s 10.0.0.0/24 -o $hostInt -j SNAT --to $hostInt

    #set the rules for adding iptables port forwarding
    /sbin/iptables -t nat -D PREROUTING -i $hostInt -p tcp --dport 1022 -j DNAT --to 10.0.0.1:22
    ;;
*) echo 'Usage: /etc/init.d/nat-vz {start|stop}'
    exit 2
    ;;
esac
exit 0" >> $file

keep

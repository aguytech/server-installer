#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${_INSTALL}-${_PART#++}"
grep -q "^# ${_PART#++}$" ${S_FILE_INSTALL_CONF} || echo  "# ${_PART#++}" >> ${S_FILE_INSTALL_CONF}

########################  REQUIRED

_echot "------------------ required vm image"
lxc image list -f csv -c l | grep -q ^${_CT_INIT_NAME}$ || _exite "Unable to find image container: '${_CT_INIT_NAME}'"

_echot "------------------ required vm"
lxc list -f csv -c n | grep -q ^${S_SERVICE[log]}$ || _exite "Unable to find container: '${S_SERVICE[log]}'"

file_conf_default=${S_PATH_INSTALL_CONF}/apache2/default.conf
file_conf_httpd=${S_PATH_INSTALL_CONF}/apache2/httpd.conf
file_conf_mpm=${S_PATH_INSTALL_CONF}/apache2/mpm.conf
file_conf_log=${S_PATH_INSTALL_CONF}/apache2/log.conf
file_conf_info=${S_PATH_INSTALL_CONF}/apache2/info.conf
file_conf_monitor=${S_PATH_INSTALL_CONF}/apache2/monitor.conf

file_conf_site=${S_PATH_INSTALL_CONF}/apache2/sites/default.conf
file_conf_index=${S_PATH_INSTALL_CONF}/apache2/sites/index.html

file_rsyslog_host=${S_PATH_INSTALL_CONF}/rsyslog/host-apache.conf
file_rsyslog_client=${S_PATH_INSTALL_CONF}/rsyslog/client-apache.conf
file_logrotate_host=${S_PATH_INSTALL_CONF}/logrotate/host-apache
file_logrotate_client=${S_PATH_INSTALL_CONF}/logrotate/client-apache

_echot "------------------ required files"
_require ${file_conf_default} ${file_conf_httpd} ${file_conf_mpm} ${file_conf_log} ${file_conf_info}
_require ${file_conf_monitor} ${file_conf_site}
_require ${file_rsyslog_host} ${file_rsyslog_client} ${file_logrotate_host} ${file_logrotate_client}

########################  DATA

_echot "------------------  data domain"

[ -z ${_APA_DOM_FQDN+x} ] && { anstmp=${S_DOM_FQDN}; _askno "Domain name to use (${anstmp})"; _APA_DOM_FQDN="${_ANSWER:-${anstmp}}"; }

[ -z ${_APA_CT_NAME+x} ] && { anstmp=wa-${_APA_DOM_FQDN//./-}; _askno "Name of container to build (${anstmp})"; _APA_CT_NAME="${_ANSWER:-${anstmp}}"; }

[ -z ${_APA_CT_PROFILE+x} ] && { anstmp=www-${_APA_DOM_FQDN}; _askno "Base name of the mariadb profile (${anstmp})"; _APA_CT_PROFILE="${_ANSWER:-${anstmp}}"; }

[ -z ${_APA_DOM_ADMIN+x} ] && { anstmp=admin; _askno "Give the subdomain name for administration (${anstmp})"; _APA_DOM_ADMIN="${_ANSWER:-${anstmp}}"; }
_confset _APA_DOM_ADMIN "${_APA_DOM_ADMIN}"

[ -z ${_APA_PWD_ADMIN+x} ] && { anstmp=$(_pwd); _askno "Password for admin user to access to info/status of apache/php (${anstmp})"; _APA_PWD_ADMIN="${_ANSWER:-${anstmp}}"; }
_confset _APA_PWD_ADMIN "${_APA_PWD_ADMIN}"

_echot "------------------  data sysctl.conf"

[ -z ${_APA_MAX_SYN_BACKLOG+x} ] && { anstmp="${_MAX_SYN_BACKLOG}"; _askno "Set $(sysctl net.ipv4.tcp_max_syn_backlog) - (${anstmp})"; _APA_MAX_SYN_BACKLOG="${_ANSWER:-${anstmp}}"; }
_confset _APA_MAX_SYN_BACKLOG "${_APA_MAX_SYN_BACKLOG}"

[ -z ${_APA_MAX_TW_BUCKETS+x} ] && { anstmp="${_MAX_TW_BUCKETS}"; _askno "Set $(sysctl net.ipv4.tcp_max_tw_buckets) - (${anstmp})"; _APA_MAX_TW_BUCKETS="${_ANSWER:-${anstmp}}"; }
_confset _APA_MAX_TW_BUCKETS "${_APA_MAX_TW_BUCKETS}"

[ -z ${_APA_FIN_TIMEOUT+x} ] && { anstmp="${_FIN_TIMEOUT}"; _askno "Set $(sysctl net.ipv4.tcp_fin_timeout) - (${anstmp})"; _APA_FIN_TIMEOUT="${_ANSWER:-${anstmp}}"; }
_confset _APA_FIN_TIMEOUT "${_APA_FIN_TIMEOUT}"

[ -z ${_APA_KEEPALIVE_TIME+x} ] && { anstmp="240"; _askno "Set $(sysctl net.ipv4.tcp_keepalive_time) - (${anstmp})"; _APA_KEEPALIVE_TIME="${_ANSWER:-${anstmp}}"; }
_confset _APA_KEEPALIVE_TIME "${_APA_KEEPALIVE_TIME}"

[ -z ${_APA_KEEPALIVE_INTVL+x} ] && { anstmp="30"; _askno "Set $(sysctl net.ipv4.tcp_keepalive_intvl) - (${anstmp})"; _APA_KEEPALIVE_INTVL="${_ANSWER:-${anstmp}}"; }
_confset _APA_KEEPALIVE_INTVL "${_APA_KEEPALIVE_INTVL}"

[ -z ${_APA_KEEPALIVE_PROBES+x} ] && { anstmp="9"; _askno "Set $(sysctl net.ipv4.tcp_keepalive_probes) - (${anstmp})"; _APA_KEEPALIVE_PROBES="${_ANSWER:-${anstmp}}"; }
_confset _APA_KEEPALIVE_PROBES "${_APA_KEEPALIVE_PROBES}"

_echot "------------------  data apache"

[ -z ${_APA_TIMEOUT+x} ] && { anstmp="60"; _askno "Time before receives and sends time out (${anstmp})"; _APA_TIMEOUT="${_ANSWER:-${anstmp}}"; }
_confset _APA_TIMEOUT "${_APA_TIMEOUT}"

[ -z ${_APA_KEEPALIVE_ON+x} ] && { anstmp="On"; _askno "Allow persistent connections On/Off (${anstmp})"; _APA_KEEPALIVE_ON="${_ANSWER:-${anstmp}}"; }
_confset _APA_KEEPALIVE_ON "${_APA_KEEPALIVE_ON}"

[ -z ${_APA_KEEPALIVE_REQUEST+x} ] && { anstmp="100"; _askno "The maximum number of requests to allow during a persistent connection (${anstmp})"; _APA_KEEPALIVE_REQUEST="${_ANSWER:-${anstmp}}"; }
_confset _APA_KEEPALIVE_REQUEST "${_APA_KEEPALIVE_REQUEST}"

 [ -z ${_APA_KEEPALIVE_TIMEOUT+x} ] && { anstmp="5"; _askno "Number of seconds to wait for the next request (${anstmp})"; _APA_KEEPALIVE_TIMEOUT="${_ANSWER:-${anstmp}}"; }
_confset _APA_KEEPALIVE_TIMEOUT "${_APA_KEEPALIVE_TIMEOUT}"

_echot "------------------  data apache mpm"

[ -z ${_APA_START_SERVERS+x} ] && { anstmp="13"; _askno "StartServers (${anstmp})"; _APA_START_SERVERS="${_ANSWER:-${anstmp}}"; }
_confset _APA_START_SERVERS "${_APA_START_SERVERS}"

[ -z ${_APA_MIN_SPARE_THREADS+x} ] && { anstmp="50"; _askno "MinSpareThreads (${anstmp})"; _APA_MIN_SPARE_THREADS="${_ANSWER:-${anstmp}}"; }
_confset _APA_MIN_SPARE_THREADS "${_APA_MIN_SPARE_THREADS}"

[ -z ${_APA_MAX_SPARE_THREADS+x} ] && { anstmp="250"; _askno "MaxSpareThreads (${anstmp})"; _APA_MAX_SPARE_THREADS="${_ANSWER:-${anstmp}}"; }
_confset _APA_MAX_SPARE_THREADS "${_APA_MAX_SPARE_THREADS}"

[ -z ${_APA_THREADS_PER_CHILD+x} ] && { anstmp="25"; _askno "ThreadsPerChild (${anstmp})"; _APA_THREADS_PER_CHILD="${_ANSWER:-${anstmp}}"; }
_confset _APA_THREADS_PER_CHILD "${_APA_THREADS_PER_CHILD}"

[ -z ${_APA_MAX_REQUEST_WORKERS+x} ] && { anstmp="400"; _askno "MaxRequestWorkers (${anstmp})"; _APA_MAX_REQUEST_WORKERS="${_ANSWER:-${anstmp}}"; }
_confset _APA_MAX_REQUEST_WORKERS "${_APA_MAX_REQUEST_WORKERS}"

[ -z ${_APA_MAX_CONNECTIONS_PER_CHILD+x} ] && { anstmp="0"; _askno "MaxConnectionsPerChild (${anstmp})"; _APA_MAX_CONNECTIONS_PER_CHILD="${_ANSWER:-${anstmp}}"; }
_confset _APA_MAX_CONNECTIONS_PER_CHILD "${_APA_MAX_CONNECTIONS_PER_CHILD}"

[ -z ${_APA_PATH_WWW+x} ] && { _APA_PATH_WWW=/var/www/localhost; }
_confset _APA_PATH_WWW "${_APA_PATH_WWW}"

_CT_NAME=${_APA_CT_NAME}
_APA_PATH_DOM=${S_VM_PATH_SHARE}/www/${_APA_DOM_FQDN}
_APA_PATH_SITES=/etc/apache2/sites;  _confset _APA_PATH_SITES "${_APA_PATH_SITES}"

path_confd=/etc/apache2/conf.d
file_httpd_conf=/etc/apache2/httpd.conf

########################  CONFIGURATION

# load configuration file
. ${S_FILE_INSTALL_CONF}

########################  PROFILE

profile=${_APA_CT_PROFILE}
if ! lxc profile list -f csv|grep -q "^${profile},"; then
	_echot "------------------  profile ${profile}"
	_eval lxc profile create ${profile}
	path=${S_HOST_PATH_SHARE}/www/${_APA_DOM_FQDN}
	path_ct=${_APA_PATH_DOM}
	[ -d ${path} ] || _evalr mkdir -p ${path}
	_evalr chown -R ${_LXD_UID}:${_LXD_UID} ${S_HOST_PATH_SHARE}/www
	_eval lxc profile device add ${profile} ${profile} disk source=${path} path=${path_ct}
fi

########################  INIT

_echot "------------------  init"

if lxc list -f csv -c n | grep -q ^${_CT_NAME}$; then
	lxc list -f csv -c n status=Running| grep -q ^${_CT_NAME}$ && _eval lxc stop ${_CT_NAME}
	_echot "------------------ rename ${_CT_NAME} -> ${_CT_NAME}-${_SDATE}"
	_eval lxc rename ${_CT_NAME} ${_CT_NAME}-${_SDATE}
fi
_eval lxc init ${_CT_INIT_NAME} ${_CT_NAME} -p default -p global -p ${profile}

#_echot "------------------  network fixed ip"
#
#if ! lxc list -f json | jq -r '.[] | select(.name == "'${_CT_NAME}'").devices[].name' | grep -q eth0; then
#	_eval lxc network attach ${s_inet} ${_CT_NAME} eth0 eth0
#fi
#_eval lxc config device set ${_CT_NAME} eth0 ipv4.address ${_CT_IP}

_echot "------------------  ${_CT_NAME} start"
_eval lxc start ${_CT_NAME}

########################  METADATA

_echot "------------------  metadata"
_lxc_meta_set ${_CT_NAME} profiles default global ${profile}
_lxc_meta_add ${_CT_NAME} apps apache2

########################  IPTABLES

_echot "------------------  iptables"
sed -i '/^_NAT_HTTP=/ s|=.*$|=true|' ${_IPT_FILE_CONF}
_service restart ${_IPT_SERVICE}

########################  SYSCTL

_echot "------------------  conf sysctl.conf"

file=/etc/sysctl.d/20-lxd.conf
txt="# apache2
net.ipv4.tcp_max_syn_backlog = ${_APA_MAX_SYN_BACKLOG}
net.ipv4.tcp_max_tw_buckets = ${_APA_MAX_TW_BUCKETS}
net.ipv4.tcp_fin_timeout = ${_APA_FIN_TIMEOUT}
net.ipv4.tcp_keepalive_time = ${_APA_KEEPALIVE_TIME}
net.ipv4.tcp_keepalive_intvl = ${_APA_KEEPALIVE_INTVL}
net.ipv4.tcp_keepalive_probes = ${_APA_KEEPALIVE_PROBES}"
_lxc_exec ${_CT_NAME} "echo '${txt}' > ${file}"

########################  INSTALL

_echot "------------------  install"
_lxc_exec ${_CT_NAME} "apk update"
_lxc_exec ${_CT_NAME} "apk add apache2-proxy apache2-utils"
_lxc_exec ${_CT_NAME} "rc-update add apache2"

########################  PATHS

_echot "------------------  paths create"
cmds="for path in ${_APA_PATH_SITES} ${_APA_PATH_DOM}/html; do [ -d \${path} ] || mkdir -p \${path}; done"
_lxc_exec ${_CT_NAME} "${cmds}"

_echot "------------------  path html"
_lxc_exec ${_CT_NAME} "[ -d '${_APA_PATH_WWW}/html' ] || mv /var/www/localhost/htdocs ${_APA_PATH_WWW}/html"
#_lxc_exec ${_CT_NAME} "chown -R apache/apache ${_APA_PATH_SITES}"

########################  CONF

_echot "------------------  conf default.conf"
file=${path_confd}/${file_conf_default##*/}
_lxc_exec_t ${_CT_NAME} "cp -a ${file} ${file}.${_SDATE}"
_eval lxc file push -q ${file_conf_default} ${_CT_NAME}${file}

_echot "------------------  conf httpd"
file=${file_httpd_conf}
_lxc_exec_t ${_CT_NAME} "cp -a ${file} ${file}.${_SDATE}"
_eval lxc file push -q ${file_conf_httpd} ${_CT_NAME}${file}

_echot "------------------  conf mpm"
file=${path_confd}/${file_conf_mpm##*/}
_lxc_exec_t ${_CT_NAME} "cp -a ${file} ${file}.${_SDATE}"
_eval lxc file push -q ${file_conf_mpm} ${_CT_NAME}${file}

_echot "------------------  conf log"
file=${path_confd}/${file_conf_log##*/}
_eval lxc file push -q ${file_conf_log} ${_CT_NAME}${file}

_echot "------------------  conf info"
file=${path_confd}/${file_conf_info##*/}
_lxc_exec_t ${_CT_NAME} "cp -a ${file} ${file}.${_SDATE}"
_eval lxc file push -q ${file_conf_info} ${_CT_NAME}${file}

_echot "------------------  conf monitor"
file=${path_confd}/${file_conf_monitor##*/}
_eval lxc file push -q ${file_conf_monitor} ${_CT_NAME}${file}

_echot "------------------  ping-monitor"
_lxc_exec ${_CT_NAME} "echo pong > ${_APA_PATH_WWW}/html/ping-monitor.html"

########################  _APA_DOM_FQDN

_echot "------------------  ${_APA_DOM_FQDN} index.html"
file=${_APA_PATH_DOM}/html/index.html
_lxc_exec_t ${_CT_NAME} "[ -f '${file}' ] && cp -a ${file} ${file}.${_SDATE}"
_eval lxc file push -q ${file_conf_index} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} apache

_echot "------------------  conf site default"
file=${_APA_PATH_SITES}/${file_conf_site##*/}
_eval lxc file push -q ${file_conf_site} ${_CT_NAME}${file}

_echot "------------------  ${_APA_DOM_FQDN} conf"
file_conf_domain=${S_PATH_INSTALL_CONF}/apache2/sites/${_APA_DOM_FQDN}.conf
if [ -f "${file_conf_domain}" ]; then
	file=${_APA_PATH_SITES}/${file_conf_domain##*/}
	_eval lxc file push -q ${file_conf_domain} ${_CT_NAME}${file}
	_lxc_var_replace ${_CT_NAME} ${file} apache
	# desactive default virtualhost site
	file=${_APA_PATH_SITES}/${file_conf_site##*/}
	_lxc_exec ${_CT_NAME} "mv ${file} ${file}.keep"
fi

########################  HTPASSWD

_echot "------------------  ${_APA_PATH_WWW} htpasswd"
file=${_APA_PATH_WWW}/pwd
_lxc_exec ${_CT_NAME} "[ -f '${file}' ] && opt=b || opt=cb; htpasswd -\${opt} ${file} admin ${_APA_PWD_ADMIN}"

########################  RIGHTS

_echot "------------------  rights file"
_lxc_exec ${_CT_NAME} "chown apache:apache -R ${_APA_PATH_WWW} ${_APA_PATH_DOM}/*"

########################  RESTART

_echot "------------------  var replace"
_lxc_var_replace ${_CT_NAME} /etc/apache2 apache apache2

_echot "------------------  service start"
_lxc_exec ${_CT_NAME} "rc-service apache2 restart"

if lxc image list -f csv -c l | grep -q ^${S_SERVICE[proxy]}$; then
	_echot "------------------  ${S_SERVICE[proxy]} reload"
	_lxc_exec ${S_SERVICE[proxy]} "rc-service haproxy reload"
fi

########################  RSYSLOG

_echot "------------------  ${S_SERVICE[log]} host path"
path=${S_VM_PATH_LOG}/apache2
_lxc_exec ${S_SERVICE[log]} "[ -d ${path} ] || mkdir -p ${path}"


_echot "------------------  ${S_SERVICE[log]} host"
file=/etc/rsyslog.d/${file_rsyslog_host##*/}
_eval lxc file push -q ${file_rsyslog_host} ${S_SERVICE[log]}${file}
_lxc_var_replace ${S_SERVICE[log]} ${file} rsyslog

_echot "------------------  ${S_SERVICE[log]} restart rsyslog"
_lxc_exec ${S_SERVICE[log]} "rc-service rsyslog restart"


_echot "------------------  ${_CT_NAME} client path"
path=${S_PATH_LOG}/apache2
_lxc_exec ${_CT_NAME} "[ -d ${path} ] || mkdir -p ${path}"

_echot "------------------  ${_CT_NAME} client"
file=/etc/rsyslog.d/${file_rsyslog_client##*/}
_eval lxc file push -q ${file_rsyslog_client} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} rsyslog

_echot "------------------  ${_CT_NAME} rsyslog restart"
_lxc_exec ${_CT_NAME} "rc-service rsyslog restart"

########################  LOGROTATE

_echot "------------------  ${S_SERVICE[log]} logrotate"
file=/etc/logrotate.d/${file_logrotate_host##*/}
_eval lxc file push -q ${file_logrotate_host} ${S_SERVICE[log]}${file}
_lxc_var_replace ${S_SERVICE[log]} ${file} logrotate
_lxc_exec ${S_SERVICE[log]} "chmod g-w,o= /etc/logrotate.d/*"

_echot "------------------  ${S_SERVICE[log]} crond restart"
_lxc_exec ${S_SERVICE[log]} "rc-service crond restart"


_echot "------------------  ${_CT_NAME} logrotate"
file=/etc/logrotate.d/${file_logrotate_client##*/}
_eval lxc file push -q ${file_logrotate_client} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} logrotate
_lxc_exec ${_CT_NAME} "chmod g-w,o= /etc/logrotate.d/*"

_echot "------------------  ${_CT_NAME} crond restart"
_lxc_exec ${_CT_NAME} "rc-service crond restart"

########################  CLEAN LOG

_echot "------------------  ${_CT_NAME} log clean"
_lxc_exec ${_CT_NAME} "find ${S_PATH_LOG}/apache2 -name *.log -exec rm {} \;"

########################  TEST

_echot "------------------  test ${_CT_NAME}"

_echoA "To test connection type from host:"
_echoa "curl ${_CT_NAME}:80"
_echoa "curl ${_CT_NAME}/ping-monitor"

########################  PUBLISH

_echot "------------------  publish ${_CT_NAME}"

lxc image list -f csv -c l | grep -q ^${_CT_NAME}$ && _eval lxc image alias rename ${_CT_NAME} ${_CT_NAME}-${_SDATE}
_eval lxc publish --force ${_CT_NAME} --alias ${_CT_NAME}

########################  END

_echoT "===================== ${_PART} end"
_partadd ${_PART#++} ${S_FILE_INSTALL_DONE}


<<KEEP
# LogLevel
_lxc_exec ${_CT_NAME} "sed -i 's|^\(LogLevel\).*$|\1 warn|' ${file_httpd_conf}"
# ErrorLogFormat
if _lxc_exec ${_CT_NAME} "grep -q ErrorLogFormat  ${file_httpd_conf}"; then
	str=''
	_lxc_exec ${_CT_NAME} "sed -i 's|^\(ErrorLogFormat\) .*$|\1 \"[%{u}t] [%-m:%l] [pid %P:tid %T] %7F: %E: [client\\\\ %{X-Forwarded-For}i-%a-%A] %M% ,\\\\ referer\\\\ %{Referer}i\"|' ${file_httpd_conf}"
else
	_lxc_exec ${_CT_NAME} "sed -i '/^ErrorLog/ iErrorLogFormat \"[%{u}t] [%-m:%l] [pid %P:tid %T] %7F: %E: [client\\\\ %{X-Forwarded-For}i-%a-%A] %M% ,\\\\ referer\\\\ %{Referer}i\"' ${file_httpd_conf}"
fi

# ErrorLog
_lxc_exec ${_CT_NAME} "sed -i 's|^\(ErrorLog\) .*$|\1 \"\|/usr/bin/logger -p local7.err -t localhost/apache\"|' ${file_httpd_conf}"

# CustomLog
str='    SetEnvIf X-Forwarded-For \".+\" forwarded\n'
str+='    #SetEnvIf Remote_Addr "127\.0\.0\.1" loglocal\n'
str+='    #SetEnvIf Remote_Addr "'${_CIDR_VM}'" loglocal\n'
str+='    #SetEnvIf Remote_Addr "'${_IPTHIS}'" loglocal\n'
str+='    #SetEnvIf Remote_Addr "'${_IPTHISV6}'" loglocal\n'
str+='    SetEnvIf Request_URI "^/ping-.*" nolog\n'
str+='    SetEnvIf Request_Method OPTIONS nolog\n'
str+='    LogFormat "%a %l %u %t \\"%r\\" %>s %O \\"%{Referer}i\\" \\"%{User-Agent}i\\"" combined\n'
str+='    #CustomLog "\|/usr/bin/logger -p local7.info -t localhost/apache" combined\n'
str+='    CustomLog "\|/usr/bin/logger -p local7.info -t localhost/apache" combined env=!nolog'
_lxc_exec ${_CT_NAME} "grep -q CustomLog.*/usr/bin/logger ${file_httpd_conf} || sed -i 's|^\s*\(CustomLog.*\)$|    #\1\n${str}|' ${file_httpd_conf}"

_lxc_exec ${_CT_NAME} "sed -i 's|^\s*\(CustomLog.*\)$|    #\2\n    SetEnvIf X-Forwarded-For \".+\" forwarded\n    CustomLog \"\|/usr/bin/logger -p local7.info -t localhost/apache\" combined\n    CustomLog \"\|/usr/bin/logger -p local7.info -t localhost/apache\" combined env=forwarded|' ${file_httpd_conf}"
KEEP

#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${_INSTALL}-${_PART}"

grep -q "^# ${_PART#++}$" ${S_FILE_INSTALL_CONF} || echo  "# ${_PART}" >> ${S_FILE_INSTALL_CONF}

########################  REQUIRED

_echoT "------------------ required vm image"
lxc image list -f csv -c l | grep -q ^${_CT_NAME_COM}$ || _exite "Unable to find image container: '${_CT_NAME_COM}'"

_echoT "------------------ required vm"
lxc list -f csv -c n | grep -q ^${S_SERVICE[log]}$ || _exite "Unable to find image container: '${S_SERVICE[log]}'"

file_site=${S_PATH_INSTALL_CONF}/apache2/default.conf
file_rsyslog_host=${S_PATH_INSTALL_CONF}/rsyslog/host-apache.conf
file_rsyslog_client=${S_PATH_INSTALL_CONF}/rsyslog/client-apache.conf
file_logrotate_host=${S_PATH_INSTALL_CONF}/logrotate/host-apache
file_logrotate_client=${S_PATH_INSTALL_CONF}/logrotate/client-apache
file_log=${S_PATH_INSTALL_CONF}/apache2/log.conf

_echoT "------------------ required files"
_require ${file_rsyslog_host} ${file_rsyslog_client} ${file_logrotate_host} ${file_logrotate_client} ${file_log} ${file_site}


########################  DATA

#eval ${S_HOST_VM_ETH[default]}
#_CT_IP=${s_base}.${S_SERVICE_BITS[http]}

_echoT "----------  data domain"

anstmp=${S_DOMAIN_FQDN} && _askno "Domain name to use (${anstmp})"
_DOMAIN_FQDN="${_ANSWER:-$anstmp}"
_DOMAIN_NAME="${_DOMAIN_FQDN%.*}"

anstmp=wa-${_DOMAIN_FQDN//./-} && _askno "Name of container to build (${anstmp})"
_CT_NAME="${_ANSWER:-$anstmp}"


_echoT "----------  data sysctl.conf"

[ -z ${_APA_MAX_SYN_BACKLOG+x} ] && anstmp="${_MAX_SYN_BACKLOG}" && _askno "Set $(sysctl net.ipv4.tcp_max_syn_backlog) - (${anstmp})" && _APA_MAX_SYN_BACKLOG="${_ANSWER:-$anstmp}" && _confset _APA_MAX_SYN_BACKLOG "${_APA_MAX_SYN_BACKLOG}"
[ -z ${_APA_MAX_TW_BUCKETS+x} ] && anstmp="${_MAX_TW_BUCKETS}" && _askno "Set $(sysctl net.ipv4.tcp_max_tw_buckets) - (${anstmp})" && _APA_MAX_TW_BUCKETS="${_ANSWER:-$anstmp}" && _confset _APA_MAX_TW_BUCKETS "${_APA_MAX_TW_BUCKETS}"
[ -z ${_APA_FIN_TIMEOUT+x} ] && anstmp="${_FIN_TIMEOUT}" && _askno "Set $(sysctl net.ipv4.tcp_fin_timeout) - (${anstmp})" && _APA_FIN_TIMEOUT="${_ANSWER:-$anstmp}" && _confset _APA_FIN_TIMEOUT "${_APA_FIN_TIMEOUT}"
[ -z ${_APA_KEEPALIVE_TIME+x} ] && anstmp="240" && _askno "Set $(sysctl net.ipv4.tcp_keepalive_time) - (${anstmp})" && _APA_KEEPALIVE_TIME="${_ANSWER:-$anstmp}" && _confset _APA_KEEPALIVE_TIME "${_APA_KEEPALIVE_TIME}"
[ -z ${_APA_KEEPALIVE_INTVL+x} ] && anstmp="30" && _askno "Set $(sysctl net.ipv4.tcp_keepalive_intvl) - (${anstmp})" && _APA_KEEPALIVE_INTVL="${_ANSWER:-$anstmp}" && _confset _APA_KEEPALIVE_INTVL "${_APA_KEEPALIVE_INTVL}"
[ -z ${_APA_KEEPALIVE_PROBES+x} ] && anstmp="9" && _askno "Set $(sysctl net.ipv4.tcp_keepalive_probes) - (${anstmp})" && _APA_KEEPALIVE_PROBES="${_ANSWER:-$anstmp}" && _confset _APA_KEEPALIVE_PROBES "${_APA_KEEPALIVE_PROBES}"


_echoT "----------  data apache"

[ -z ${_APA_TIMEOUT+x} ] && anstmp="60" && _askno "Time before receives and sends time out (${anstmp})" && _APA_TIMEOUT="${_ANSWER:-$anstmp}" && _confset _APA_TIMEOUT "${_APA_TIMEOUT}"
[ -z ${_APA_KEEPALIVE+x} ] && anstmp="On" && _askno "Allow persistent connections On/Off (${anstmp})" && _APA_KEEPALIVE="${_ANSWER:-$anstmp}" && _confset _APA_KEEPALIVE "${_APA_KEEPALIVE}"
[ -z ${_APA_KEEPALIVE_REQUEST+x} ] && anstmp="100" && _askno "The maximum number of requests to allow during a persistent connection (${anstmp})" && _APA_KEEPALIVE_REQUEST="${_ANSWER:-$anstmp}" && _confset _APA_KEEPALIVE_REQUEST "${_APA_KEEPALIVE_REQUEST}"
 [ -z ${_APA_KEEPALIVE_TIMEOUT+x} ] && anstmp="5" && _askno "Number of seconds to wait for the next request (${anstmp})" && _APA_KEEPALIVE_TIMEOUT="${_ANSWER:-$anstmp}" && _confset _APA_KEEPALIVE_TIMEOUT "${_APA_KEEPALIVE_TIMEOUT}"

_echoT "----------  data apache mpm"

anstmp="13" && _askno "StartServers (${anstmp})" && _APA_START_SERVERS="${_ANSWER:-$anstmp}" && _confset _APA_START_SERVERS "${_APA_START_SERVERS}"
anstmp="50" && _askno "MinSpareThreads (${anstmp})" && _APA_MIN_SPARE_THREADS="${_ANSWER:-$anstmp}" && _confset _APA_MIN_SPARE_THREADS "${_APA_MIN_SPARE_THREADS}"
anstmp="250" && _askno "MaxSpareThreads (${anstmp})" && _APA_MAX_SPARE_THREADS="${_ANSWER:-$anstmp}" && _confset _APA_MAX_SPARE_THREADS "${_APA_MAX_SPARE_THREADS}"
anstmp="25" && _askno "ThreadsPerChild (${anstmp})" && _APA_THREADS_PER_CHILD="${_ANSWER:-$anstmp}" && _confset _APA_THREADS_PER_CHILD "${_APA_THREADS_PER_CHILD}"
anstmp="400" && _askno "MaxRequestWorkers (${anstmp})" && _APA_MAX_REQUEST_WORKERS="${_ANSWER:-$anstmp}" && _confset _APA_MAX_REQUEST_WORKERS "${_APA_MAX_REQUEST_WORKERS}"
anstmp="0" && _askno "MaxConnectionsPerChild (${anstmp})" && _APA_MAX_CONNECTIONS_PER_CHILD="${_ANSWER:-$anstmp}" && _confset _APA_MAX_CONNECTIONS_PER_CHILD "${_APA_MAX_CONNECTIONS_PER_CHILD}"

path_sites=/etc/apache2/sites
path_conf=/etc/apache2/conf.d
file_conf_http=/etc/apache2/httpd.conf

_APA_PATH_WWW=/var/www/localhost/html &&  _confset _APA_PATH_WWW "${_APA_PATH_WWW}"
_PATH_DOMAIN=${S_VM_PATH_SHARE}/www/${_DOMAIN_FQDN}


########################  PROFILE

profile=www-${_DOMAIN_FQDN}
_echoT "----------  profile ${profile}"

lxc profile list -f csv|grep -q "^${profile}," && _eval lxc profile rename ${profile} ${profile}.${_SDATE}
_eval lxc profile create ${profile}

path=${S_HOST_PATH_SHARE}/www/${_DOMAIN_FQDN}
path_ct=${_PATH_DOMAIN}
[ -d ${path} ] || _evalr mkdir -p ${path}
_eval lxc profile device add ${profile} ${profile} disk source=${path} path=${path_ct}


########################  INIT

_echoT "----------  init"

if lxc list -f csv -c n | grep -q ^${_CT_NAME}$; then
	lxc list -f csv -c n status=Running| grep -q ^${_CT_NAME}$ && _eval lxc stop ${_CT_NAME}
	_eval lxc rename ${_CT_NAME} ${_CT_NAME}-${_SDATE}
fi
_eval lxc init ${_CT_NAME_COM} ${_CT_NAME} -p default -p global -p ${profile}


#_echoT "----------  network fixed ip"
#
#if ! lxc list -f json | jq -r '.[] | select(.name == "'${_CT_NAME}'").devices[].name' | grep -q eth0; then
#	_eval lxc network attach ${s_inet} ${_CT_NAME} eth0 eth0
#fi
#_eval lxc config device set ${_CT_NAME} eth0 ipv4.address ${_CT_IP}


_echoT "----------  ${_CT_NAME} start"
_eval lxc start ${_CT_NAME}


########################  METADATA

_echoT "----------  metadata"
_lxc_meta_add ${_CT_NAME} profiles ${profile}
_lxc_meta_add ${_CT_NAME} apps apache2


########################  IPTABLES

_echoT "----------  iptables"
sed -i '/^_NAT_HTTP=/ s|=.*$|=true|' ${_IPT_FILE_CONF}
_service restart ${_IPT_SERVICE}

########################  SYSCTL

_echoT "----------  conf sysctl.conf"

file=/etc/sysctl.d/20-lxd.conf

txt="# apache2
net.ipv4.tcp_max_syn_backlog = ${_APA_MAX_SYN_BACKLOG}
net.ipv4.tcp_max_tw_buckets = ${_APA_MAX_TW_BUCKETS}
net.ipv4.tcp_fin_timeout = ${_APA_FIN_TIMEOUT}
net.ipv4.tcp_keepalive_time = ${_APA_KEEPALIVE_TIME}
net.ipv4.tcp_keepalive_intvl = ${_APA_KEEPALIVE_INTVL}
net.ipv4.tcp_keepalive_probes = ${_APA_KEEPALIVE_PROBES}"

_lxc_exec ${_CT_NAME} "echo '${txt}' > ${file}"


########################  INSTALL

_echoT "----------  install"

_lxc_exec ${_CT_NAME} "apk update"
_lxc_exec ${_CT_NAME} "apk add apache2-proxy"

_echoT "----------  conf ServerName"

_lxc_exec ${_CT_NAME} "sed -i 's|^.\?\(ServerName\) .*$|\1 localhost|' ${file_conf_http}"

_echoT "----------  service set & start"

service=apache2
_lxc_exec ${_CT_NAME} "rc-update add ${service}"
_lxc_exec ${_CT_NAME} "rc-service ${service} start"


########################  CONF

_echoT "----------  conf.d default"

file=${path_conf}/default.conf
_lxc_exec ${_CT_NAME} "[ -f ${file} ] && cp -a ${file} ${file}.${_SDATE}"

cmds="sed -i 's|^.\?\(Timeout\) .*$|\1 ${_APA_TIMEOUT}|' ${file}
sed -i 's|^.\?\(KeepAlive\) .*$|\1 ${_APA_KEEPALIVE}|' ${file}
sed -i 's|^.\?\(MaxKeepAliveRequests\) .*$|\1 ${_APA_KEEPALIVE_REQUEST}|' ${file}
sed -i 's|^.\?\(KeepAliveTimeout\) .*$|\1 ${_APA_KEEPALIVE_TIMEOUT}|' ${file}"
_lxc_exec ${_CT_NAME} "${cmds}"


_echoT "----------  conf httpd module root"

_lxc_exec ${_CT_NAME} "[ -d ${path_sites} ] || mkdir -p ${path_sites}"
path=/var/www/localhost/htdocs
_lxc_exec ${_CT_NAME} "[ -d /var/www/localhost/htdocs ] && mv /var/www/localhost/htdocs ${_APA_PATH_WWW}"
#_lxc_exec ${_CT_NAME} "chown -R apache/apache ${path_sites}"

_echoT "----------  conf httpd module"

_lxc_exec ${_CT_NAME} "[ -f ${file_conf_http} ] && cp -a ${file_conf_http} ${file_conf_http}.${_SDATE}"

# conf.d/default
cmds="sed -i 's|^.\?\(LoadModule mpm_event_module.*\)$|\1|' ${file_conf_http}
sed -i 's|^.\?\(LoadModule mpm_prefork_module.*\)$|#\1|' ${file_conf_http}
sed -i 's|^.\?\(LoadModule mpm_worker_module.*\)$|#\1|' ${file_conf_http}
sed -i 's|^.\?\(LoadModule vhost_alias_module.*\)$|\1|' ${file_conf_http}
sed -i 's|^.\?\(LoadModule info_module.*\)$|\1|' ${file_conf_http}
sed -i 's|^.\?\(LoadModule rewrite_module.*\)$|\1|' ${file_conf_http}"
#sed -i 's|^.\?\(LoadModule remoteip_module.*\)$|\1|' ${file_conf_http}
_lxc_exec ${_CT_NAME} "${cmds}"

_echoT "----------  conf mpm"

file=${path_conf}/mpm.conf
_lxc_exec ${_CT_NAME} "[ ! -f '${file}.${_SDATE}' ] && cp -a '${file}' '${file}.${_SDATE}'"

cmds="sed -i '/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\(\s*StartServers\s*\).*|\1 ${_APA_START_SERVERS}|' ${file}
sed -i '/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\(\s*MinSpareThreads\s*\).*|\1 ${_APA_MIN_SPARE_THREADS}|' ${file}
sed -i '/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\(\s*MaxSpareThreads\s*\).*|\1 ${_APA_MAX_SPARE_THREADS}|' ${file}
sed -i '/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\(\s*ThreadsPerChild\s*\).*|\1 ${_APA_THREADS_PER_CHILD}|' ${file}
sed -i '/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\(\s*MaxRequestWorkers\s*\).*|\1 ${_APA_MAX_REQUEST_WORKERS}|' ${file}
sed -i '/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\(\s*MaxConnectionsPerChild\s*\).*|\1 ${_APA_MAX_CONNECTIONS_PER_CHILD}|' ${file}"
_lxc_exec ${_CT_NAME} "${cmds}"


_echoT "----------  conf httpd"

# IncludeOptional
_lxc_exec ${_CT_NAME} "grep -q ${path_sites} ${file_conf_http} || echo 'IncludeOptional ${path_sites}/*.conf' >>  ${file_conf_http}"

cmds="sed -i 's|^.\?\(ServerName\) .*$|\1 localhost|' ${file_conf_http}
sed -i 's|^.\?\(ServerAdmin\) .*$|\1 ${S_DOMAIN_EMAIL_ADMIN}|' ${file_conf_http}
sed -i 's|^\(ServerSignature\) .*$|\1 Off|' ${file_conf_http}
sed -i 's|^\(ServerTokens\) .*$|\1 Prod|' ${file_conf_http}
sed -i 's|/var/www/localhost/htdocs|${_APA_PATH_WWW}|' ${file_conf_http}"
_lxc_exec ${_CT_NAME} "${cmds}"

# Options
_lxc_exec ${_CT_NAME} "sed -i '/^<Directory \"\/var\/www\/localhost\/html\">/,/<\/Directory>/ {s|^\(\s*Options\) .*|\1 -Indexes -MultiViews +FollowSymLinks|}' ${file_conf_http}"

# Log options
_lxc_exec ${_CT_NAME} "sed -i '/^LogLevel/ s|^|#|' ${file_conf_http}"
_lxc_exec ${_CT_NAME} "sed -i '/^ErrorLog/ s|^|#|' ${file_conf_http}"
_lxc_exec ${_CT_NAME} "sed -i '/^<IfModule log_config_module>/i# To configure logs, see the file: ${path_conf}/log.conf' ${file_conf_http}"
#_lxc_exec ${_CT_NAME} "sed -i '/^<IfModule log_config_module>/,/^<\/IfModule>/ s|^\([^<].*\)$|#\1|' ${file_conf_http}"

file=${path_conf}/${file_log##*/}
_eval lxc file push ${file_log} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} apache


_echoT "----------  conf info & status"

file=${path_conf}/info.conf
_lxc_exec ${_CT_NAME} "[ ! -f '${file}.${_SDATE}' ] && cp -a '${file}' '${file}.${_SDATE}'"
# optimize require for info
_lxc_exec ${_CT_NAME} "sed -i '/<Location \/server-status>/,/<\/Location>/ {s|^\(\s*\)\(Require host\).*|\1\2 ${_DOMAIN_FQDN}\n\1Require ip ${_IPS_AUTH}|}' ${file}"
# optimize require for status
_lxc_exec ${_CT_NAME} "sed -i '/<Location \/server-info>/,/<\/Location>/ {s|^\(\s*\)\(Require host\).*|\1\2 ${_DOMAIN_FQDN}\n\1Require ip ${_IPS_AUTH}|}' ${file}"


########################  PING-MONITOR

_echoT "----------  ping-monitor"
_lxc_exec ${_CT_NAME} "echo 'pong' > ${_APA_PATH_WWW}/ping-monitor.html"

cmd="echo 'Alias \"/ping-monitor\" \"${_APA_PATH_WWW}/ping-monitor.html
<Files ping-monitor.html>
	SetEnvIf X-Forwarded-For ^$ notforwarded
	Require env notforwarded
</Files>' >  ${path_conf}/monitor.conf"
_lxc_exec ${_CT_NAME} "${cmd}"


########################  _DOMAIN_FQDN

_echoT "----------  ${_DOMAIN_FQDN} path"

path=${_PATH_DOMAIN}/html
_lxc_exec ${_CT_NAME} "[ -d ${path} ] || mkdir -p ${path}"

_echoT "----------  ${_DOMAIN_FQDN} index.html"

file=${_PATH_DOMAIN}/html/index.html
_lxc_exec ${_CT_NAME} "echo '<html><body><h1>${_DOMAIN_FQDN} works!</h1></body></html>' > ${file}"


_echoT "----------  ${_DOMAIN_FQDN} conf"

file=${path_sites}/${file_site##*/}
_eval lxc file push ${file_site} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} apache

file_domain=${S_PATH_INSTALL_CONF}/apache2/${_DOMAIN_FQDN}.conf
if [ -f "${file_domain}" ]; then
	file=${path_sites}/${file_domain##*/}
	_eval lxc file push ${file_domain} ${_CT_NAME}${file}
	_lxc_var_replace ${_CT_NAME} ${file} apache

	# desactive default virtualhost site
	file=${path_sites}/${file_site##*/}
	_lxc_exec ${_CT_NAME} "mv ${file} ${file}.keep"
fi

_echoT "----------  ${_DOMAIN_FQDN} path"
path=${S_VM_PATH_LOG}/apache2
_lxc_exec ${S_SERVICE[log]} "[ -d ${path} ] || mkdir -p ${path}"


########################  RIGHTS

_echoT "----------  rights"
_lxc_exec ${_CT_NAME} "chown apache:apache -R ${_APA_PATH_WWW}"
_lxc_exec ${_CT_NAME} "chown apache:apache -R ${_PATH_DOMAIN}/*"


########################  RESTART

service=apache2
_echoT "----------  ${_CT_NAME} ${service} restart"
_lxc_exec ${_CT_NAME} "rc-service ${service} restart"

if lxc image list -f csv -c l | grep -q ^${S_SERVICE[proxy]}$; then

	_echoT "----------  ${S_SERVICE[proxy]} reload haproxy reload"
	_lxc_exec ${S_SERVICE[proxy]} "rc-service haproxy reload"
fi

########################  RSYSLOG

_echoT "----------  ${S_SERVICE[log]} host path"
path=${S_VM_PATH_LOG}/apache2
_lxc_exec ${S_SERVICE[log]} "[ -d ${path} ] || mkdir -p ${path}"


_echoT "----------  ${S_SERVICE[log]} host"
file=/etc/rsyslog.d/${file_rsyslog_host##*/}
_eval lxc file push ${file_rsyslog_host} ${S_SERVICE[log]}${file}
_lxc_var_replace ${S_SERVICE[log]} ${file} rsyslog

_echoT "----------  rsyslog restart ${S_SERVICE[log]}"
_lxc_exec ${S_SERVICE[log]} "rc-service rsyslog restart"


_echoT "----------  ${_CT_NAME} client path"
path=${S_PATH_LOG}/apache2
_lxc_exec ${_CT_NAME} "[ -d ${path} ] || mkdir -p ${path}"

_echoT "----------  ${_CT_NAME} client"
file=/etc/rsyslog.d/${file_rsyslog_client##*/}
_eval lxc file push ${file_rsyslog_client} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} rsyslog

_echoT "----------  ${_CT_NAME} rsyslog restart"
_lxc_exec ${_CT_NAME} "rc-service rsyslog restart"


########################  LOGROTATE

_echoT "----------  ${S_SERVICE[log]} logrotate"
file=/etc/logrotate.d/${file_logrotate_host##*/}
_eval lxc file push ${file_logrotate_host} ${S_SERVICE[log]}${file}
_lxc_var_replace ${S_SERVICE[log]} ${file} logrotate

_echoT "----------  ${S_SERVICE[log]} crond restart"
_lxc_exec ${S_SERVICE[log]} "rc-service crond restart"


_echoT "----------  ${_CT_NAME} logrotate"
file=/etc/logrotate.d/${file_logrotate_client##*/}
_eval lxc file push ${file_logrotate_client} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} logrotate

_echoT "----------  ${_CT_NAME} crond restart"
_lxc_exec ${_CT_NAME} "rc-service crond restart"


########################  CLEAN LOG

_echoT "----------  ${_CT_NAME} log clean"
_lxc_exec ${_CT_NAME} "find ${S_PATH_LOG}/apache2 -name *.log -exec rm {} \;"


########################  TEST

_echoT "----------  publish ${_CT_NAME}"

_echoI "To test connection type:"
_echo "curl ${_CT_NAME}:80"
_echo "curl ${_CT_NAME}/ping-monitor"


########################  PUBLISH

_echoT "----------  publish ${_CT_NAME}"

lxc image list -f csv -c l | grep -q ^${_CT_NAME}$ && _eval lxc image alias rename ${_CT_NAME} ${_CT_NAME}-${_SDATE}
_eval lxc publish --force ${_CT_NAME} --alias ${_CT_NAME}


########################  END

_echoT "===================== ${_PART} end"
_partadd ${_PART#++} ${S_FILE_INSTALL_DONE}


<<KEEP
# LogLevel
_lxc_exec ${_CT_NAME} "sed -i 's|^\(LogLevel\).*$|\1 warn|' ${file_conf_http}"
# ErrorLogFormat
if _lxc_exec ${_CT_NAME} "grep -q ErrorLogFormat  ${file_conf_http}"; then
	str=''
	_lxc_exec ${_CT_NAME} "sed -i 's|^\(ErrorLogFormat\) .*$|\1 \"[%{u}t] [%-m:%l] [pid %P:tid %T] %7F: %E: [client\\\\ %{X-Forwarded-For}i-%a-%A] %M% ,\\\\ referer\\\\ %{Referer}i\"|' ${file_conf_http}"
else
	_lxc_exec ${_CT_NAME} "sed -i '/^ErrorLog/ iErrorLogFormat \"[%{u}t] [%-m:%l] [pid %P:tid %T] %7F: %E: [client\\\\ %{X-Forwarded-For}i-%a-%A] %M% ,\\\\ referer\\\\ %{Referer}i\"' ${file_conf_http}"
fi

# ErrorLog
_lxc_exec ${_CT_NAME} "sed -i 's|^\(ErrorLog\) .*$|\1 \"\|/usr/bin/logger -p local7.err -t localhost/apache\"|' ${file_conf_http}"

# CustomLog
str='    SetEnvIf X-Forwarded-For \".+\" forwarded\n'
str+='    #SetEnvIf Remote_Addr "127\.0\.0\.1" loglocal\n'
str+='    #SetEnvIf Remote_Addr "'${_CIDR_VM}'" loglocal\n'
str+='    #SetEnvIf Remote_Addr "'${_IPTHIS}'" loglocal\n'
str+='    #SetEnvIf Remote_Addr "'${_IPTHISV6}'" loglocal\n'
str+='    SetEnvIf Request_URI "^/ping-.*" nolog\n'
str+='    SetEnvIf Request_Method OPTIONS nolog\n'
str+='    LogFormat "%a %l %u %t \\"%r\\" %>s %O \\"%{Referer}i\\" \\"%{User-Agent}i\\"" combined\n'
str+='    #CustomLog "\|/usr/bin/logger -p local7.info -t localhost/apache" combined\n'
str+='    CustomLog "\|/usr/bin/logger -p local7.info -t localhost/apache" combined env=!nolog'
_lxc_exec ${_CT_NAME} "grep -q CustomLog.*/usr/bin/logger ${file_conf_http} || sed -i 's|^\s*\(CustomLog.*\)$|    #\1\n${str}|' ${file_conf_http}"

_lxc_exec ${_CT_NAME} "sed -i 's|^\s*\(CustomLog.*\)$|    #\2\n    SetEnvIf X-Forwarded-For \".+\" forwarded\n    CustomLog \"\|/usr/bin/logger -p local7.info -t localhost/apache\" combined\n    CustomLog \"\|/usr/bin/logger -p local7.info -t localhost/apache\" combined env=forwarded|' ${file_conf_http}"
KEEP

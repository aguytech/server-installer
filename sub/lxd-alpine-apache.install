#!/bin/bash
#
# write by Aguy


_echoT "\n==========================================  ${_RELEASE} ${_PART}"

file_rsyslog=${S_PATH_INSTALL_CONF}/rsyslog/vm-apache.conf
file_site=${S_PATH_INSTALL_CONF}/apache2/000-default.conf

_echoT "------------------ required files"
_require ${file_site} ${file_rsyslog}


####################################  DATA

_CT_NAME=${S_SERVICE[http]}

eval ${S_HOST_VM_ETH[default]}
_CT_IP=${s_base}.${S_SERVICE_BITS[http]}

_echoT "----------  data sysctl.conf"

[ -z ${_SOMAXCONN+x} ] && anstmp="4096" && _askno "Set net.core.somaxconn ($anstmp)" && _SOMAXCONN=${_ANSWER:-$anstmp} && _confset _SOMAXCONN "$_SOMAXCONN"
[ -z ${_MAX_BACKLOG+x} ] && anstmp="1024" && _askno "Set net.core.netdev_MAX_BACKLOG ($anstmp)" && _MAX_BACKLOG=${_ANSWER:-$anstmp} && _confset _MAX_BACKLOG "$_MAX_BACKLOG"
[ -z ${_FIN_TIMEOUT+x} ] && anstmp="15" && _askno "Set net.ipv4.tcp_FIN_TIMEOUT ($anstmp)" && _FIN_TIMEOUT=${_ANSWER:-$anstmp} && _confset _FIN_TIMEOUT "$_FIN_TIMEOUT"
[ -z ${_KEEPALIVE_TIME+x} ] && anstmp="300" && _askno "Set net.ipv4.tcp_KEEPALIVE_TIME ($anstmp)" && _KEEPALIVE_TIME=${_ANSWER:-$anstmp} && _confset _KEEPALIVE_TIME "$_KEEPALIVE_TIME"
[ -z ${_KEEPALIVE_PROBES+x} ] && anstmp="5" && _askno "Set net.ipv4.tcp_KEEPALIVE_PROBES ($anstmp)" && _KEEPALIVE_PROBES=${_ANSWER:-$anstmp} && _confset _KEEPALIVE_PROBES "$_KEEPALIVE_PROBES"
[ -z ${_KEEPALIVE_INTVL+x} ] && anstmp="15" && _askno "Set net.ipv4.tcp_KEEPALIVE_INTVL ($anstmp)" && _KEEPALIVE_INTVL=${_ANSWER:-$anstmp} && _confset _KEEPALIVE_INTVL "$_KEEPALIVE_INTVL"

path_www=/var/www/localhost/html
path_sites=/etc/apache2/sites
path_conf=/etc/apache2/conf.d
file_conf_http=/etc/apache2/httpd.conf


####################################  INIT

profile=www-${S_DOMAIN_NAME}
_echoT "----------  profiles ${profile}"

path=${S_HOST_PATH_SHARE}/www/${profile}
path_ct=${S_VM_PATH_SHARE}/www/${profile}
! [ -d "${path}" ] && _eval mkdir -p "${path}"

if ! [ "`lxc profile list --format=json | jq -r '.[] | select(.name == "'${profile}'").name'`" ]; then
	_eval lxc profile create ${profile}
	_eval lxc profile device add ${profile} ${profile} disk source=${path} path=${path_ct}
fi


_echoT "----------  init"

! lxc image list -f json |jq -r '.[].aliases[].name' | grep -q ^${_CT_NAME_COM}$ && _exite "Unable to find image container '${_CT_NAME_COM}'"
if lxc list -f json |jq -r '.[].name' | grep -q ^${_CT_NAME}$; then
	if lxc list --format=json | jq -r '.[] | select(.status == "Running").name' | grep -q ^${_CT_NAME}$; then
		_eval lxc stop ${_CT_NAME}
		_eval lxc rename ${_CT_NAME} ${_CT_NAME}.${_SDATE}
		_eval lxc start ${_CT_NAME}
	else
		_eval lxc rename ${_CT_NAME} ${_CT_NAME}.${_SDATE}
	fi

fi

_eval lxc init ${_CT_NAME_COM} ${_CT_NAME} -p default -p global -p ${profile}


_echoT "----------  network fixed ip"

if ! lxc list --format=json | jq -r '.[] | select(.name == "'${_CT_NAME}'").devices[].name' | grep -q eth0; then
	_eval lxc network attach ${s_inet} ${_CT_NAME} eth0 eth0
fi
_eval lxc config device set ${_CT_NAME} eth0 ipv4.address ${_CT_IP}


_echoT "----------  ${_CT_NAME} start"

_eval lxc start ${_CT_NAME}


_echoT "----------  conf sysctl.conf"

file=/etc/sysctl.d/lxd.conf

txt="# apache2 php-fpm
net.core.somaxconn = ${_SOMAXCONN}
net.core.netdev_MAX_BACKLOG = ${_MAX_BACKLOG}
net.ipv4.tcp_FIN_TIMEOUT = ${_FIN_TIMEOUT}
net.ipv4.tcp_KEEPALIVE_TIME = ${_KEEPALIVE_TIME}
net.ipv4.tcp_KEEPALIVE_PROBES = ${_KEEPALIVE_PROBES}
net.ipv4.tcp_KEEPALIVE_INTVL = ${_KEEPALIVE_INTVL}"

_lxc_exec ${_CT_NAME} "echo '$txt' > $file"


####################################  INSTALL

_echoT "----------  install"

_lxc_exec ${_CT_NAME} "apk add apache2-proxy"

service=apache2
_lxc_exec ${_CT_NAME} "rc-update add ${service}"
_lxc_exec ${_CT_NAME} "rc-service ${service} start"


_echoT "----------  paths"

_lxc_exec ${_CT_NAME} "! [ -d "${path_sites}" ] && mkdir -p ${path_sites}"
path=/var/www/localhost/htdocs
_lxc_exec ${_CT_NAME} "[ -d /var/www/localhost/htdocs ] && mv /var/www/localhost/htdocs ${path_www}"
#_lxc_exec ${_CT_NAME} "chown -R apache/apache ${path_sites}"


_echoT "----------  conf httpd module"

_lxc_exec ${_CT_NAME} "[ -f \"${file_conf_http}\" ] && cp -a ${file_conf_http} ${file_conf_http}.${_SDATE}"

cmds="sed -i 's|^.\?\(LoadModule mpm_event_module.*\)$|\1|' ${file_conf_http}
sed -i 's|^.\?\(LoadModule mpm_prefork_module.*\)$|#\1|' ${file_conf_http}
sed -i 's|^.\?\(LoadModule mpm_worker_module.*\)$|#\1|' ${file_conf_http}
sed -i 's|^.\?\(LoadModule vhost_alias_module.*\)$|\1|' ${file_conf_http}
sed -i 's|^.\?\(LoadModule info_module.*\)$|\1|' ${file_conf_http}
sed -i 's|^.\?\(LoadModule rewrite_module.*\)$|\1|' ${file_conf_http}"
_lxc_exec ${_CT_NAME} "$cmds"


_echoT "----------  conf httpd"

# IncludeOptional
cmds="grep -q ${path_sites} ${file_conf_http} || echo 'IncludeOptional ${path_sites}/*.conf' >>  ${file_conf_http}"
_lxc_exec ${_CT_NAME} "$cmds"

# ServerName
_lxc_exec ${_CT_NAME} "sed -i 's|^.\?\(ServerName\).*$|\1 localhost|' ${file_conf_http}"
# ServerAdmin
_lxc_exec ${_CT_NAME} "sed -i 's|^.\?\(ServerAdmin\).*$|\1 ${S_DOMAIN_EMAIL_TECH}|' ${file_conf_http}"
# ServerSignature Off
_lxc_exec ${_CT_NAME} "sed -i 's|^\(ServerSignature\).*$|\1 Off|' ${file_conf_http}"
# TraceEnable Off
_lxc_exec ${_CT_NAME} "sed -i 's|^\(ServerTokens\).*$|\1 Prod|' ${file_conf_http}"

# htdocs
_lxc_exec ${_CT_NAME} "sed -i 's|/var/www/localhost/htdocs|${path_www}|' ${file_conf_http}"
# Options
_lxc_exec ${_CT_NAME} "sed -i '/^<Directory \"\/var\/www\/localhost\/html\">/,/<\/Directory>/ {s|^\(\s*Options\) .*|\1 -Indexes -MultiViews +FollowSymLinks|}' ${file_conf_http}"

# LogLevel
_lxc_exec ${_CT_NAME} "sed -i 's|^\(LogLevel\).*$|\1 warn|' ${file_conf_http}"
# ErrorLog
_lxc_exec ${_CT_NAME} "sed -i 's|^\(ErrorLog\).*$|\1 \"\|/usr/bin/logger -p local7.err -t localhost/apache\"|' ${file_conf_http}"
# CustomLog
_lxc_exec ${_CT_NAME} "grep -q CustomLog.*/usr/bin/logger ${file_conf_http} || sed -i 's|^\(\s*\)\(CustomLog.*\)$|\1#\2\n    SetEnvIf X-Forwarded-For \".+\" forwarded\n    CustomLog \"\|/usr/bin/logger -p local7.info -t localhost/apache\" combined\n    CustomLog \"\|/usr/bin/logger -p local7.info -t localhost/apache\" combined env=forwarded|' ${file_conf_http}"


_echoT "----------  conf mpm"

file=${path_conf}/mpm.conf
_lxc_exec ${_CT_NAME} "[ ! -f '${file}.${_SDATE}' ] && cp -a '${file}' '${file}.${_SDATE}'"

cmds="sch=StartServers; str=\"\t\t3\"
sed -i \"/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\s*\(\$sch\)\s*.*|\t\1\$str|\" ${file}
sch=MinSpareThreads; str=\"\t\t50\"
sed -i \"/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\s*\(\$sch\)\s*.*|\t\1\$str|\" ${file}
sch=MaxSpareThreads; str=\"\t\t250\"
sed -i \"/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\s*\(\$sch\)\s*.*|\t\1\$str|\" ${file}
sch=ThreadsPerChild; str=\"\t\t25\"
sed -i \"/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\s*\(\$sch\)\s*.*|\t\1\$str|\" ${file}
sch=MaxRequestWorkers; str=\"\t400\"
sed -i \"/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\s*\(\$sch\)\s*.*|\t\1\$str|\" ${file}
sch=MaxConnectionsPerChild; str=\"\t0\"
sed -i \"/<IfModule mpm_event_module>/,/<\/IfModule>/ s|^\s*\(\$sch\)\s*.*|\t\1\$str|\" ${file}"
_lxc_exec ${_CT_NAME} "${cmds}"


_echoT "----------  conf info & status"

file=${path_conf}/info.conf
_lxc_exec ${_CT_NAME} "[ ! -f '${file}.${_SDATE}' ] && cp -a '${file}' '${file}.${_SDATE}'"
# optimize require for info
_lxc_exec ${_CT_NAME} "sed -i '/<Location \/server-status>/,/<\/Location>/ {s|^\(\s*\)\(Require host\).*|\1\2 ${S_DOMAIN_FQDN}\n\1Require ip ${_IPS_AUTH}|}' ${file}"
# optimize require for status
_lxc_exec ${_CT_NAME} "sed -i '/<Location \/server-info>/,/<\/Location>/ {s|^\(\s*\)\(Require host\).*|\1\2 ${S_DOMAIN_FQDN}\n\1Require ip ${_IPS_AUTH}|}' ${file}"


_echoT "----------  service restart"

service=apache2
_lxc_exec ${_CT_NAME} "rc-service ${service} restart"


########################################  PING

_echoT "----------  ping-monitor"

_lxc_exec ${_CT_NAME} "echo 'pong' > ${path_www}/ping-monitor.html"


########################################  RSYSLOG

_echoT "----------  rsyslog conf apache"

file=/etc/rsyslog.d/vm-apache.conf
_eval lxc file push ${file_rsyslog} ${_CT_NAME}${file}
_lxc_var_replace ${_CT_NAME} ${file} rsyslog


_echoT "----------  restart rsyslog"

_lxc_exec ${_CT_NAME} "rc-service rsyslog restart"


########################################  LOGROTATE

_echoT "----------  logrotate conf"

file=/etc/logrotate.d/apache2
_lxc_exec ${_CT_NAME} "grep -q /var/log/apache2/\*.info ${file} || sed -i '1i/var/log/apache2/*.info' ${file}"
_lxc_exec ${_CT_NAME} "grep -q /var/log/apache2/\*.info ${file} || sed -i '1i/var/log/apache2/*.err' ${file}"
_lxc_exec ${_CT_NAME} "grep -q daily ${file} || sed -i 's|^\(\s*missingok\)|    daily\n\1|' ${file}"
_lxc_exec ${_CT_NAME} "grep -q ^\s*rotate ${file} || sed -i 's|^\(\s*missingok\)|\1\n    rotate 14|' ${file}"


########################################  PUBLISH

_echoT "----------  publish ${_CT_NAME}"

_eval lxc image list --format=json | jq -r '.[].aliases[].name' | grep -q ^${_CT_NAME}$ && lxc image alias rename ${_CT_NAME} ${_CT_NAME}-$(date +%s)
_eval lxc publish ${_CT_NAME} --alias ${_CT_NAME} --force


####################################  END

_echoT "---------- ${_PART} end"
_eval "_partadd ${_PART} ${S_FILE_INSTALL_DONE}"

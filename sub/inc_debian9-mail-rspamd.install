#!/bin/bash
#
# write by Aguy

_echoT "#################### START $_PARTMAIL"


_echoT "------------------ fileconf source"
[ -f "$S_FILE_INSTALL_CONF" ] && . "$S_FILE_INSTALL_CONF"


########################################  MAIN


####################  DATA

# selector
[ -z ${_DKIM_SELECT+x} ] && anstmp="dkim" && _askno "Give the name of default selector for DKIM ($anstmp)" && _DKIM_SELECT=${_ANSWER:-$anstmp} && _confset _DKIM_SELECT "$_DKIM_SELECT"

FILE_DKIM_PUB="${_PATH_DKIM}/${_MYDOMAIN}.${_DKIM_SELECT}.pub"
FILE_DKIM_KEY="${_PATH_DKIM}/${_MYDOMAIN}.${_DKIM_SELECT}.key"


####################  INSTALL

_echoT "----------  rspamd redis-tools install"

# _evalq "wget -O- https://rspamd.com/apt-stable/gpg.key | apt-key add -"
_evalq "wget --no-check-certificate -O- https://rspamd.com/apt-stable/gpg.key | apt-key add -"
_evalq "echo -e 'deb http://rspamd.com/apt-stable/ $(lsb_release -c -s) main\ndeb-src http://rspamd.com/apt-stable/ $(lsb_release -c -s) main' > /etc/apt/sources.list.d/rspamd.list"
_evalq "apt update"
_evalq "apt install -y rspamd redis-tools"


_echoT "----------  daemon stop"

_evalq systemctl stop rspamd


_echoT "----------  rspamd password"

# rspamd password
_echoE "Please enter a password for RSPAMD http access (make sure you keep it)"
PWD="$(rspamadm pw -e)"


_echoT "----------  dkim key generate"

! [[ -f $FILE_DKIM_PUB && -f $FILE_DKIM_KEY ]] && _evalq "rspamadm dkim_keygen -b 2048 -s $_DKIM_SELECT -k $FILE_DKIM_KEY > $FILE_DKIM_PUB"


_echoT "----------  DNS conf"

_echo "$(cat $FILE_DKIM_PUB)"
_echo "Here is options for DKIM configuration :
record-name        ${_DKIM_SELECT}._domainkey
TTl                défaut
DKIM               1
SHA-1              0
SHA-256            0
RSA                1
Type de service    tous
Mode test          activé
sous-domaines      valide
"
_echo "And the public key :"
_echo "---------------------------------------------------"
_echo "$(sed -n '2p' $FILE_DKIM_PUB| sed 's|^\s*"p=\(.*\)"$|\1|')$(sed -n '3p' $FILE_DKIM_PUB| sed 's|^\s*"\(.*\)"$|\1|')"
_echo "---------------------------------------------------"
_askno "Configure DNS of the domain '$_MYDOMAIN' with above parameters\nConfirm"


####################  CONF

PATHCONF="/etc/rspamd/local.d"
REDISIP=${S_SERVICE_IPS['cache']%% *}

_echoT "----------  conf worker"

cat > "$PATHCONF/worker-normal.inc" << EOF
bind_socket = "localhost:11333";
# Number of workers to use. Default: number of virtual processor cores.
count = 1
EOF

cat > "$PATHCONF/worker-controller.inc" << EOF
bind_socket = "*:11334";
password = "$PWD";
EOF

cat > "$PATHCONF/worker-proxy.inc" << EOF
bind_socket = "localhost:11332";
milter = yes;
timeout = 120s;
upstream "local" {
    default = yes;
    self_scan = yes;
}
EOF


_echoT "----------  conf log"

cat > "$PATHCONF/logging.inc" << EOF
#type = "file";
#filename = "$S_PATH_LOG/rspamd/rspamd.log";
type = "syslog";
#facility = "7";
# error - warning - info - debug
level = "error";
debug_modules = [];
EOF


_echoT "----------  conf network"

cat > "$PATHCONF/options.inc" << EOF
local_addrs = "127.0.0.0/8, ::1, ${_VM_IP_BASE}.0/24, ${S_NODE_IPV4}, ${S_NODE_IPV6}";

dns {
    nameserver = ["127.0.0.1:53:10"];
}
EOF


_echoT "----------  conf whitelist"

# whitelist local network
cat > "$PATHCONF/multimap.conf" << EOF
whitelisted_ip {
  type = "ip";
  map = "${_PATH_RSPAMD}/ips_local_network.map";
  prefilter = true;
  action = "accept";
}
EOF

cat > "${_PATH_RSPAMD}/ips_local_network.map" << EOF
# Ips for local network
127.0.0.0/8
[::1]/64
${_VM_IP_BASE}.0/24
${S_NODE_IPV4}
[${S_NODE_IPV6}]
EOF


_echoT "----------  conf redis"

cat > "$PATHCONF/classifier-bayes.conf" << EOF
backend = "redis";
new_schema = true;
expire = 8640000;
EOF

cat > "$PATHCONF/redis.conf" << EOF
#write_servers = "$REDISIP";
#read_servers = "$REDISIP";
servers = "$REDISIP";
EOF


_echoT "----------  conf milter"

cat > "$PATHCONF/milter_headers.conf" << EOF
use = ["x-spamd-bar", "x-spam-level", "authentication-results"];
authenticated_headers = ["authentication-results"];
EOF


####################  DKIM

FILE_SELECTORS="${_PATH_RSPAMD}/dkim_selectors.map"

_echoT "----------  conf dkim"

cat > "$PATHCONF/dkim.conf" << EOF
# enable dkim in rspamd
rspamd_sign = yes;
EOF

cat > "$PATHCONF/dkim_signing.conf" << EOF
# local.d/dkim_signing.conf
try_fallback = true;
path = "${_PATH_DKIM}/\$domain.\$selector.key";
selector_map = "${FILE_SELECTORS}";
selector = "$_DKIM_SELECT";

# Enable DKIM signing for alias sender addresses
allow_username_mismatch = true;

# Domain specific settings
#domain {
#    ambau.ovh {
#        selector = "dkim";
#        privkey = "/var/share/mail/default/rspamd/dkim/ambau.ovh.dkim.key";
#    }
#}

EOF

echo "${_MYDOMAIN} ${_DKIM_SELECT}" > "$FILE_SELECTORS"
#echo "${_MYDOMAIN} ${FILE_DKIM_KEY}" > "$FILE_PATHS"


_echoT "----------  conf arc"

_evalq "cp -R $PATHCONF/dkim_signing.conf $PATHCONF/arc.conf"


_echoT "----------  path & file rights"

_evalq chown -R _rspamd:_rspamd "$_PATH_RSPAMD" "$_PATH_DKIM"
_evalq chmod o-rwx -R "$_PATH_DKIM"
_evalq "find '$_PATH_DKIM' -type f -exec chmod 440 '{}' \\;"


########################################  RSYSLOG

STR=" vz lxd "
if [ "${STR/ "$S_SERVER_TYPE" /}" != "$STR" ]; then

    _echoT "----------  rsyslog conf"

    FILECONF="/etc/rsyslog.d/vm-rspamd.conf"
    FILE=${S_PATH_INSTALL_CONF}/rsyslog/vm-rspamd.conf
    [ ! -f "$FILE" ] && _exite "Unable to find file: '$FILE'"

    _evalq cp -a "$FILE" "$FILECONF"
    _var_replace "$FILECONF"


    _echoT "----------  restart rsyslog"

    systemctl restart rsyslog.service
fi


########################################  LOGROTATE

_echoT "----------  fail2ban conf"

FILE=/etc/logrotate.d/rspamd
STR="7"; sed -i "s|^\( *rotate\) .*$|\1 $STR|" "$FILE"


# PARTSUB
PARTSUB="host-$_PARTMAIL"
str=" vz lxd "
if [ "${str/ "$S_SERVER_TYPE" /}" != "$str" ] && ! grep -q "$PARTSUB" "${_FILEMAILDONE}"; then
  _echoT "----------  $PARTSUB"

  while ! grep -q "^${PARTSUB}$" "${_FILEMAILDONE}"; do
    _echoi "To add database configuration for user: $_VMAIL_ACRO, please"
    _echoi "${whiteb}From an other terminal in the HOST, launch:"
    _echoI "${S_PATH_INSTALL}/sub/${S_HOST_RELEASE}-${PARTSUB}.install ${_CTIDTHIS} ${_FILEMAILDONE}${cclear}"
    _askyn "Confirm the end of this subprocess to continue"
  done
fi


####################  TEST

_echoT "----------  redis connection test"

if [ "$(timeout 3 redis-cli -h $REDISIP ping 2>/dev/null)" ]; then
  _echoI "Connection to redis : $REDISIP OK !"
else
  _echoE "Unable to connect to REDIS server at $REDISIP"
  _askno "Please correct the problem after installation. valid to continue"
fi


_echoT "----------  rsapmd start"

_evalq "systemctl start rspamd"


_echoT "----------  RSPAMD access"

_echo "Test this URL to access to RSPAMD statistics"
_echoi "http://${S_NODE_IPV4}:${S_RSPAMD_STATS_PORT}"
_askno "Confirm"


_echoT "----------  rspamadm configwizard"

_echo "If problem occurs with redis (old version), disable redis with:"
_echoi "rm /etc/rspamd/local.d/redis.conf /etc/rspamd/local.d/classifier-bayes\nrspamadm configwizard"
_askno "Confirm"


_echoT "----------  dkim for other domains"

_echo "To generate dkim keys for new domain, use"
_echoi "NEWDOMAIN='newdomain'
FILE_DKIM_PUB="${_PATH_DKIM}/\${NEWDOMAIN}.${_DKIM_SELECT}.pub"
FILE_DKIM_KEY="${_PATH_DKIM}/\${NEWDOMAIN}.${_DKIM_SELECT}.key"
rspamadm dkim_keygen -b 2048 -s $_DKIM_SELECT -k \$FILE_DKIM_KEY > \$FILE_DKIM_PUB
chown _rspamd._rspamd ${_PATH_DKIM}/\${NEWDOMAIN}.*
chmod 440 ${_PATH_DKIM}/\${NEWDOMAIN}.*
echo "\${NEWDOMAIN} ${_DKIM_SELECT}" > $FILE_SELECTORS
"


########################################  END

_echoT "------------------ write $_PARTMAIL"
_partadd "$_PARTMAIL" "$_FILEMAILDONE"

_echoT "#################### END $_PARTMAIL"


<<KEEP

# to remove redis from rspamd for compatibility problem between rspamd & redis (old kernel)

rm /etc/rspamd/local.d/redis.conf
rm /etc/rspamd/local.d/classifier-bayes.conf

rspamadm configwizard

KEEP

#!/bin/bash
#
# write by Aguy

_echoT "\n==========================================  ${_INSTALL}-${_PART}"

########################  REQUIRED

_echoT "------------------ required vm image"
lxc image list -f csv -c l | grep -q ^${_CT_NAME_COM}$ || _exite "Unable to find image container: '${_CT_NAME_COM}'"

_echoT "------------------ required vm"
lxc list -f csv -c n | grep -q ^${S_SERVICE[proxy]}$ || _exite "Unable to find container: '${S_SERVICE[proxy]}'"
lxc list -f csv -c n | grep -q ^${S_SERVICE[log]}$ || _exite "Unable to find container: '${S_SERVICE[log]}'"

####################  SELECT

_echoT "------------------ select"

anstmp=${S_DOMAIN_FQDN} && _askno "Domain name to use (${anstmp})"
_DOMAIN_FQDN="${_ANSWER:-${anstmp}}"
_DOMAIN_NAME=${_DOMAIN_FQDN%.lxd} && _DOMAIN_NAME=${_DOMAIN_NAME%.*}
_FILE_INSTALL_CONF=${S_PATH_CONF}/${_PART}-${_DOMAIN_FQDN}.conf
_confset _FILE_INSTALL_CONF "${_FILE_INSTALL_CONF}" ${_FILE_INSTALL_CONF}
_confset _DOMAIN_FQDN "${_DOMAIN_FQDN}" ${_FILE_INSTALL_CONF}
_confset _DOMAIN_NAME "${_DOMAIN_NAME}" ${_FILE_INSTALL_CONF}

####################  DATA

_PARTMAIL=mail-data
if ! _parthave ${_PARTMAIL} ${S_FILE_INSTALL_DONE}; then
	. "${_PATH_BASE_SUB}/${_RELEASE_PART}-${_PARTMAIL}.install" || _exite "Wrong part: ${_PARTMAIL}"
	[ "$_STEP" ] && _askno "Valid to continue" 
else
	. ${_FILE_INSTALL_CONF}
	_echoW "performed *** ${_PARTMAIL}"
fi

####################  INIT

_PARTMAIL=mail-init
if ! _parthave ${_PARTMAIL} ${S_FILE_INSTALL_DONE}; then
	. "${_PATH_BASE_SUB}/${_RELEASE_PART}-${_PARTMAIL}.install" || _exite "Wrong part: ${_PARTMAIL}"
	[ "$_STEP" ] && _askno "Valid to continue" 
else
	_echoW "performed *** ${_PARTMAIL}"
fi

####################  SSL

_PARTMAIL=mail-ssl
if ! _parthave ${_PARTMAIL} ${S_FILE_INSTALL_DONE}; then
	. "${_PATH_BASE_SUB}/${_RELEASE_PART}-${_PARTMAIL}.install" || _exite "Wrong part: ${_PARTMAIL}"
	[ "$_STEP" ] && _askno "Valid to continue" 
else
	_echoW "performed *** ${_PARTMAIL}"
fi

####################  MARIADB

_PARTMAIL=mail-mariadb
if ! _parthave ${_PARTMAIL} ${S_FILE_INSTALL_DONE}; then
	. "${_PATH_BASE_SUB}/${_RELEASE_PART}-${_PARTMAIL}.install" || _exite "Wrong part: ${_PARTMAIL}"
	[ "$_STEP" ] && _askno "Valid to continue" 
else
	_echoW "performed *** ${_PARTMAIL}"
fi

####################  _VMAIL_APP

_PARTMAIL=mail-${_VMAIL_APP}
if ! _parthave ${_PARTMAIL} ${S_FILE_INSTALL_DONE}; then
	. "${_PATH_BASE_SUB}/${_RELEASE_PART}-${_PARTMAIL}.install" || _exite "Wrong part: ${_PARTMAIL}"
	[ "$_STEP" ] && _askno "Valid to continue" 
else
	_echoW "performed *** ${_PARTMAIL}"
fi

####################  POSTFIX

_PARTMAIL=mail-postfix
if ! _parthave ${_PARTMAIL} ${S_FILE_INSTALL_DONE}; then
	. "${_PATH_BASE_SUB}/${_RELEASE_PART}-${_PARTMAIL}.install" || _exite "Wrong part: ${_PARTMAIL}"
	[ "$_STEP" ] && _askno "Valid to continue" 
else
	_echoW "performed *** ${_PARTMAIL}"
fi


exit


####################  DOVECOT

_PARTMAIL=mail-dovecot
if ! _parthave ${_PARTMAIL} ${S_FILE_INSTALL_DONE}; then
	. "${_PATH_BASE_SUB}/${_RELEASE_PART}-${_PARTMAIL}.install" || _exite "Wrong part: ${_PARTMAIL}"
	[ "$_STEP" ] && _askno "Valid to continue" 
else
	_echoW "performed *** ${_PARTMAIL}"
fi

####################  RSPAMD

_PARTMAIL=mail-rspamd
if ! _parthave ${_PARTMAIL} ${S_FILE_INSTALL_DONE}; then
	. "${_PATH_BASE_SUB}/${_RELEASE_PART}-${_PARTMAIL}.install" || _exite "Wrong part: ${_PARTMAIL}"
	[ "$_STEP" ] && _askno "Valid to continue" 
else
	_echoW "performed *** ${_PARTMAIL}"
fi

####################################  START

_echoT "------------------ postfix start"
_evalq "systemctl start postfix"

_echoT "------------------ dovecot start"
_evalq "systemctl start dovecot.service"

#################################### test mail sending

_echoT "------------------ test mail sending : root -> postmaster@$_DOMAIN_FQDN"

# sendmail -v postmaster@$_DOMAIN_FQDN
_mail "root <root@$_DOMAIN_FQDN>" postmaster@$_DOMAIN_FQDN test "Here is the first email of Postfix from $HOSTNAME / $_IPTHIS\nYes ;o)"
sleep 1
_askno "${bblue}Please verify you have received the email test to postmaster@$_DOMAIN_FQDN\n& valid${cclear}"

####################################  CONNECT

_echoi "To use your mail manager, follow this informations:"
_echoi "${yellowb}IMAP-Server${cclear} mail.$_DOMAIN_FQDN | Port: 143 | STARTTLS"
_echoi "${yellowb}SMTP-Server${cclear} mail.$_DOMAIN_FQDN | Port: 587 | STARTTLS"
_echoi "${yellowb}Managesieve${cclear} mail.$_DOMAIN_FQDN | Port: 4190 | STARTTLS"
_echoi "${yellowb}Username${cclear} Complete e-mail address"

########################  COPY

for i in `seq 2 ${_CT_NUM}`; do
	ct_name=${_CT_NAME}-${i}
	_echoT "---------- build ${ct_name}"

	if lxc list -f csv -c n | grep -q ^${ct_name}$; then
		lxc list -f csv -c n status=Running| grep -q ^${ct_name}$ && _eval lxc stop ${ct_name}
		_eval lxc rename ${ct_name} ${ct_name}-${_SDATE}
	fi
	_eval lxc copy ${_CT_NAME} ${ct_name}
	_eval lxc start ${ct_name}
done

########################  FIX IP

_echoT "------------------ network fixed ip"
if ! lxc list -f json | jq -r '.[] | select(.name == "'${_CT_NAME}'").devices[].name' | grep -q eth0; then
	_eval lxc config device override ${_CT_NAME} eth0 ipv4.address=${_CT_IP}
fi


########################  TEST

_echoT "------------------  mail test"




########################  HAPROXY

_echoI "\nAdjust backend in proxy for backend: ${S_SERVICE[mail]} with:"
_echo $(for i in `seq 1 ${_CT_NUM}`; do echo ${_CT_NAME}-${i};done)

########################  PUBLISH

for ct_name in ${_CT_ALL_NAME}
	_echoT "------------------ publish ${ct_name}"
	lxc image list -f csv -c l | grep -q ^${ct_name}$ && _eval lxc image alias rename ${ct_name} ${ct_name}-${_SDATE}
	_eval lxc publish --force ${ct_name} --alias ${ct_name}
done

########################  END

_echoT "===================== ${_PART} end"
_partadd ${_PART#++} ${S_FILE_INSTALL_DONE}

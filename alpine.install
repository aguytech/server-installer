#!/bin/bash
#
# write by Aguy

<<MANUALY
# HOST
ctname=alpine311-test

cmds="apt update
apt dist-upgrade
apt install -y rsync zfsutils-linux
ln -sv /usr/local/bs/conf/.bash_aliases /root/.bash_aliases"

ssh root@node2 bash -i <<<$cmds
rsync /usr/local/bs/ root@${ctname}:/usr/local/bs/ -e 'ssh -p 22' --exclude=/.git --delete -av
rsync /usr/local/bs/install/ root@${ctname}:/usr/local/bs/install/ -e 'ssh -p 22' --exclude=/.git --delete -av

lxc shell ${ctname}
/usr/local/bs/install
MANUALY

################################ global functions
#S_TRACE=debug

if [[ -z "$S_GLOBAL_FUNCTIONS" || -f $S_GLOBAL_FUNCTIONS ]]; then
	file="/usr/local/bs/inc-functions"
	if ! . "$file"; then echo -e "\e[1;31merror - unable to find file '$file' from ${BASH_SOURCE[0]}\e[0;0m" && exit 1; fi
fi
. $S_GLOBAL_FUNCTIONS

################################  mandatory parts

# init
_PART="init"
! _parthave "$_PART" "$S_FILE_INSTALL_DONE" && _source "${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install"

<<TODO
# openvz
part_sub=host-root
if [ "$S_SERVER_TYPE" = "vz" ] && ! _parthave "$part_sub" "${S_FILE_INSTALL_DONE}"; then
	_echoi "to mount device(s) in this container\nexit from this container ${_CTIDTHIS} and from hosting server launch:"
	_echoI "${_PATH_BASE_SUB}/${S_HOST_RELEASE}-${part_sub}.install ${_CTIDTHIS} $S_PATH_LOG_INSTALL/${S_RELEASE}.done"
	_exit
fi
TODO

# common + ssh
parts="common ssh"
for _PART in $parts; do
	! _parthave "$_PART" "$S_FILE_INSTALL_DONE" && _source "${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install"
done


################################  MENU

while [ "$_PART" != "quit" ]; do

	partsall="$(sed -n "s|^\t*\(\w\+\)) # .*$S_SERVER_TYPE.*$|\1|p" "$0" | xargs)"
	partsrelease=" $(ls -1 "$_PATH_BASE_SUB"/*${S_RELEASE}* | sed -n "s|.*${S_RELEASE}-\(.*\)\.install|\1|p" | xargs) "
	partsmade=" $(cat ${S_FILE_INSTALL_DONE} | xargs) "
	parts2do=
	for part in $partsall; do
		[ "${partsmade/ $part /}" = "$partsmade" ] && [ "${partsrelease/ $part /}" != "$partsrelease" ] && parts2do+="$part "
	done

	_echoD "partsall='$partsall'"
	_echoD "partsmade='$partsmade'"
	_echoD "parts2do='$parts2do'"

	_echo "Part already made: ${blueb}$partsmade${cclear}"
	PS3="Give your choice: "
	select _PART in quit $parts2do; do
		case "$_PART" in
			quit)
				break
				;;
			iptables) # ovh home
				_source "${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install"
				;;
			lxd) # ovh home
				_source "${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install"
				;;
			haproxy) # ovh home
				_source "${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install"
				;;
			*)
				_echoE "Wrong option: '$_PART'"
				;;
		esac
		break
	done

done

_exit



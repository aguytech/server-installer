#!/bin/bash
#
# write by Aguy

######################## global functions
S_TRACE=debug

# allow conf-init
_INSTALL=lxd-alpine

S_GLOBAL_FUNCTIONS=${S_GLOBAL_FUNCTIONS:-/usr/local/bs/inc-functions.sh}
! [ -f ${S_GLOBAL_FUNCTIONS} ] && echo -e "\e[1;31merror - unable to find file '${S_GLOBAL_FUNCTIONS}' from ${BASH_SOURCE[0]}\e[0;0m" && exit 1
. ${S_GLOBAL_FUNCTIONS}


########################  conf

_echoT "------------------ conf && data"

# for install from desktop
S_PATH_INSTALL="${S_PATH_INSTALL/-desktop/}"
S_PATH_INSTALL_XTRA="${S_PATH_INSTALL}/xtra"
S_PATH_INSTALL_CONF="${S_PATH_INSTALL}/conf"

S_FILE_INSTALL_CONF="${S_PATH_CONF}/lxd.conf"
S_FILE_INSTALL_DONE="${S_PATH_CONF}/lxd.done"

# load configuration file from host installation
[ -f "${S_PATH_CONF}/install.conf" ] && . ${S_PATH_CONF}/install.conf
# load configuration file of this installation
[ -f "${S_FILE_INSTALL_CONF}" ] && . ${S_FILE_INSTALL_CONF}

#don't mix with S_* variables from host
[ -z ${_RELEASE_ID+x} ] && _RELEASE_ID="alpine" && _confset _RELEASE_ID "${_RELEASE_ID}"
_IP_HOST_VM=${_CIDR_VM%/*} && _confset _IP_HOST_VM "${_IP_HOST_VM}"

########################  mandatory parts


# init common
 parts="init common"
for _PART in ${parts}; do
	! _parthave "${_PART}" "$S_FILE_INSTALL_DONE" && _source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART}.install"
done


########################  MENU

while [ "${_PART}" != "quit" ]; do

	partsall="$(sed -n "s|^\t*\([^)]\+\)) # .*${S_SERVER_TYPE}.*|\1|p" "$0"|xargs)"
	partsadd="$(sed -n "s|^\t*\([^)]\+\)) # .*${S_SERVER_TYPE}.*|\1|p" "$0"|grep ^++|xargs)"
	partsrelease=" $(ls -1 "${_PATH_BASE_SUB}"/*lxd-${_RELEASE_ID}*|sed -n "s|.*lxd-${_RELEASE_ID}-\(.*\)\.install|\1|p"|xargs) "
	partsrelease+="${partsadd} "
	partsmade=" $(cat ${S_FILE_INSTALL_DONE}|xargs) "
	parts2do=
	for part in ${partsall}; do
		[ "${partsmade/ ${part} /}" = "${partsmade}" ] && [ "${partsrelease/ ${part} /}" != "${partsrelease}" ] && parts2do+="${part} "
	done

	_echod "partsall='${partsall}'"
	_echod "partsmade='${partsmade}'"
	_echod "parts2do='${parts2do}'"

	_echo "Part already made: ${blueb}${partsmade}${cclear}"
	PS3="Give your choice: "
	select _PART in quit ${parts2do}; do
		# update time
		_SDATE=`date +%s`

		case "$_PART" in
			quit)
				break
				;;
			rsyslog) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			apache) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			haproxy) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			redis) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			php) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			mariadb) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			mariadb-ms) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			phpmyadmin) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			++mariadb) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			++mariadb-ms) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			++phpmyadmin) # ovh home
				_source "${_PATH_BASE_SUB}/lxd-${_RELEASE_ID}-${_PART#++}.install"
				;;
			*)
				_echoE "Wrong option: '${_PART}'"
				;;
		esac
		break
	done

done

_exit



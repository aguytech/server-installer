#!/bin/bash
#
# write by Aguy

########################  global configuration

S_GLOBAL_FUNCTIONS=${S_GLOBAL_FUNCTIONS:-/usr/local/bs/inc-functions.sh}
! [ -f ${S_GLOBAL_FUNCTIONS} ] && echo -e "\e[1;31merror - unable to find file '${S_GLOBAL_FUNCTIONS}' from ${BASH_SOURCE[0]}\e[0;0m" && exit 1
. ${S_GLOBAL_FUNCTIONS}


########################  DATA

file='/etc/centos-release'
! [ -f $file ] && _echoE "Unable to find the file '$file'" && _exit 1
S_FILE_INSTALL_DONE="$S_PATH_LOG_INSTALL/${S_RELEASE}.done"


########################  MANDATORY

# openvz
PARTSUB=ct-openvz
if [ "$S_SERVER_TYPE" == vz ] && ! _parthave "$PARTSUB" "${S_FILE_INSTALL_DONE}"; then
	_echoA "To mount device(s) in this container execute from hosting server :"
	_echoa "${whiteb}Exit from this container ${_CTIDTHIS} and from host in a terminal launch :"
	_echoa "'${_PATH_BASE_SUB}/${S_HOST_RELEASE}-${PARTSUB}.install ${_CTIDTHIS}'${cclear}"
	_exit
fi


# mandatory GLOBAL
partsmandatory="global-conf"
for _PART in $partsmandatory; do
	_echod "_PART='$_PART'"
	! _parthave "$_PART" "$S_FILE_INSTALL_DONE" && _source "${_PATH_BASE}/${_PART}.install"
done

# mandatory _RELEASE
partsmandatory="conf common ssh"
for _PART in $partsmandatory; do
	_echod "_PART='$_PART'"
	! _parthave "$_PART" "$S_FILE_INSTALL_DONE" && _source "${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install"
done


########################  MENU

while [ "$_PART" != quit ]; do

	partsall="$(grep "^\s*.*) # .*$S_SERVER_TYPE.*$" "${_PATH_BASE}/${_SCRIPT}.install" |sed "s/^\t*\(.*\)) # .*$/\1/" |xargs)"
	partsrelease=" $(ls -1 "$_PATH_BASE_SUB" |grep "^${S_RELEASE}" |sed "s|^${S_RELEASE}-\(.*\)\.install$|\1|" |xargs) "
	partsmade=" $(cat ${S_FILE_INSTALL_DONE} |xargs) "
	parts2do=
	for part in $partsall; do
		[ "${partsmade/ $part /}" == "$partsmade" ] && [ "${partsrelease/ $part /}" != "$partsrelease" ] && parts2do+="$part "
	done

	_echod "partsall='$partsall'"
	_echod "partsmade='$partsmade'"
	_echod "parts2do='$parts2do'"

	_echo "Part already made :"
	_echoT "$partsmade"
	PS3="Write your choice : "
	select _PART in quit $parts2do
	do
		case "$_PART" in
			quit)
				break
				;;
			postfix) # ovh vz lxd
				_source ${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install
				;;
			tuleap) # ovh vz lxd
				_source ${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install
				;;
			*)
				_echoE "Wrong option: '$_PART'"
				;;
		esac
		break
	done

done

_exit


<<KEEP

# wipe free disk space

file=/tmp/test
paths="$(df -l |grep "^/dev.*" |sed "s|^.* \([^ ]*\)$|\1|" | sed "/save/d")"
#paths='/ /var'
echo '#!/bin/bash' > $file
for path in $paths
do
        echo "# $path" >> $file
        echo "(echo \"start $path - pid $! - \$(date +\"%T - %N\")\"; cd $path; dd if=/dev/zero of=free2zero; rm free2zero; echo \"end $path \$(date +\"%T - %N\")\"; exit) &" >> $file
done
chmod +x $file
#cat $file
sh $file

#watch -dn10 df

KEEP


<<KEEP

# rescue

HOST=ns398616

DIRSAVE=/dev/mapper/vg-save
RELEASE=debian7

apt-get install -y

DATE=$(date +"%Y%m%d")
VD="/dev/sda"
VDP=${VD#/}; VDP=${VDP//\//_}
DIR="/mnt/save"
DIRBCK="$DIR/backup/rescue"
#VOLS="/dev/sda1 /dev/mapper/vg-lvvar /dev/mapper/vg-lvvz /dev/mapper/vg-lvvzdump /dev/mapper/vg-lvlibvirt"
VOLS=$(blkid |grep "^/dev/.*TYPE=\"ext4\".*" |sed "s|^\([^:]*\):.*$|\1|" |sed "/save/d")

#apt-get install -y lsb-release
#RELEASE=$(lsb_release -sc)
whiteb='\e[1;1m'; redb='\e[1;31m'; greenb='\e[1;32m'; blueb='\e[1;34m'; magentab='\e[1;35m'; yellowb='\e[1;33m'; cclear='\e[0;0m'

blkid
echo $VOLS


# mount
! [ -d $DIR ] && mkdir -p $DIR
mount $DIRSAVE /mnt/save
! [ -d $DIRBCK ] && mkdir -p $DIRBCK
cd $DIRBCK

sudo bs=446 count=1 if=/dev/sda of="$HOST-${RELEASE}-${DATE}-mbr.iso"
sudo bs=512 count=1 if=/dev/sda of="$HOST-${RELEASE}-${DATE}-mbrpt.iso"

for VOL in $VOLS
do
	echo -e "${cyanb}************************  $VOL${cclear}"
	VOLNAME=${VOL#/dev/}; VOLNAME=${VOLNAME//\//_}
	e2fsck -f $VOL
	SIZE=$(fdisk -l /dev/sda1 |grep "^Disk.*" |sed "s/^Disk .*, \([0-9]*\) bytes, .*$/\1/")
	dcfldd bs=4096 if=$VOL | gzip > $HOST-$RELEASE-$DATE-$VOLNAME.iso.gz
done

# umount
cd
umount /mnt/save

reboot

KEEP


<<KEEP

# restore rescue

DIR="/mnt/save"
DIRBCK="$DIR/backup/rescue"
# mount
! [ -d $DIR ] && mkdir -p $DIR
mount /dev/mapper/vg-lvsave /mnt/save
! [ -d $DIRBCK ] && mkdir -p $DIRBCK
cd $DIRBCK

dcfldd bs=512 count=1 if=ns398616-debian7-20160306-mbrpt.iso of=/dev/sda
gzip -c ns398616-debian7-20160306-sda1.iso.gz | bs=4096 of=/dev/sda1
gzip -c ns398616-debian7-20160306-mapper_vg-lvvar.iso.gz | bs=4096 of=/dev/mapper/vg-lvvar

KEEP

<<OPENVZ
yum -y update && yum -y upgrade
yum install -y wget vi
yum localinstall -y https://download.openvz.org/virtuozzo/releases/openvz-7.0.11-235/x86_64/os/Packages/p/python-subprocess32-3.2.7-1.vz7.5.x86_64.rpm
yum localinstall -y https://download.openvz.org/virtuozzo/releases/openvz-7.0.11-235/x86_64/os/Packages/o/openvz-release-7.0.11-3.vz7.x86_64.rpm
yum install -y epel-release

yum install -y python3
rpm -Uvh http://repo.virtuozzo.com/vzlinux/7/x86_64/os/Packages/r/readykernel-scan-0.11-1.vl7.noarch.rpm
rpm -Uvh http://repo.virtuozzo.com/vzlinux/7/x86_64/os/Packages/z/zstd-1.4.4-1.vl7.x86_64.rpm
rpm -Uvh http://repo.virtuozzo.com/vzlinux/7/x86_64/os/Packages/v/vzlinux-release-7-1.vl7.91.x86_64.rpm

mv /etc/yum.repos.d/CentOS-* /root/
rpm -e --nodeps --justdb json-c
yum erase -y jansson
yum localinstall -y http://repo.virtuozzo.com/vzlinux/7.7/x86_64/os/Packages/j/jansson-2.10-1.vl7.1.x86_64.rpm
yum localinstall -y http://repo.virtuozzo.com/vzlinux/7.7/x86_64/os/Packages/j/json-c-0.11-13.vl7.1.x86_64.rpm

yum install -y prlctl prl-disp-service vzkernel *ploop*
yum update -y

awk -F\' '$1=="menuentry " {print i++ " : " $2}' /etc/grub2.cfg
grub2-set-default 1
grub2-mkconfig -o /boot/grub2/grub.cfg
grub2-mkconfig -o /boot/efi/EFI/virtuozzo/grub.cfg

reboot

modprobe ploop
modprobe pfmt_ploop1
modprobe pfmt_raw
modprobe pio_direct

grep -q net.ipv4.ip_forward /etc/sysctl.conf || echo "
# On Hardware Node we generally need
# packet forwarding enabled and proxy arp disabled
net.ipv4.ip_forward = 1
net.ipv6.conf.default.forwarding = 1
net.ipv6.conf.all.forwarding = 1
net.ipv4.conf.default.proxy_arp = 0

#Enables source route verification
net.ipv4.conf.all.rp_filter = 1

#Enables the magic-sysrq key
kernel.sysrq = 1

#We do not want all our interfaces to send redirects
net.ipv4.conf.default.send_redirects = 1
net.ipv4.conf.all.send_redirects = 0

#only use these if you build a NAT VPS
#otherwise, do not copy these lines
net.ipv4.icmp_echo_ignore_broadcasts = 1
net.ipv4.conf.default.forwarding= 1" >> /etc/sysctl.conf

sysctl -p

sed -i 's|^\(SELINUX=\).*$|\1=disabled|' /etc/sysconfig/selinux

yum -y install vzctl ploop # vzquota

grep -q NEIGHBOUR_DEVS /etc/vz/vz.conf || echo "NEIGHBOUR_DEVS=all" >> /etc/vz/vz.conf

reboot

# CT
vzpkg list --available
vzpkg install template debian-9.0-x86_64
vzpkg create cache debian-9.0
vzctl create 101 --ostemplate debian-9.0-x86_64
OPENVZ


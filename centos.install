#!/bin/bash
#
# write by Aguy


####################################  global configuration

! [ "$S_GLOBAL_CONF" ] && . "$(dirname "$(readlink -e "$0")")/init.install"

# source
_source "$S_GLOBAL_CONF" "$S_GLOBAL_FUNCTIONS"

####################################  DATA

file='/etc/centos-release'
! [ -f $file ] && _echoE "Unable to find the file '$file'" && _exit 1
S_FILE_INSTALL_DONE="$S_PATH_LOG_INSTALL/${S_RELEASE}.done"


####################################  MANDATORY

# openvz
PARTSUB=ct-openvz
if [ "$S_SERVER_TYPE" == vz ] && ! _parthave "$PARTSUB" "${S_FILE_INSTALL_DONE}"; then
	_echoI "To mount device(s) in this container execute from hosting server :"
	_echoI "${whiteb}Exit from this container ${_CTIDTHIS} and from host in a terminal launch :"
	_echoI "'${_PATH_BASE_SUB}/${S_HOST_RELEASE}-${PARTSUB}.install ${_CTIDTHIS}'${cclear}"
	_exit
fi


# mandatory GLOBAL
partsmandatory="global-conf"
for _PART in $partsmandatory; do
	_echoD "_PART='$_PART'"
	! _parthave "$_PART" "$S_FILE_INSTALL_DONE" && _source "${_PATH_BASE}/${_PART}.install"
done

# mandatory _RELEASE
partsmandatory="conf common ssh"
for _PART in $partsmandatory; do
	_echoD "_PART='$_PART'"
	! _parthave "$_PART" "$S_FILE_INSTALL_DONE" && _source "${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install"
done


####################################  MENU

while [ "$_PART" != quit ]; do

	partsall="$(grep "^\s*.*) # .*$S_SERVER_TYPE.*$" "${_PATH_BASE}/${_SCRIPT}.install" |sed "s/^\t*\(.*\)) # .*$/\1/" |xargs)"
	partsrelease=" $(ls -1 "$_PATH_BASE_SUB" |grep "^${S_RELEASE}" |sed "s|^${S_RELEASE}-\(.*\)\.install$|\1|" |xargs) "
	partsmade=" $(cat ${S_FILE_INSTALL_DONE} |xargs) "
	parts2do=
	for part in $partsall; do
		[ "${partsmade/ $part /}" == "$partsmade" ] && [ "${partsrelease/ $part /}" != "$partsrelease" ] && parts2do+="$part "
	done

	_echoD "partsall='$partsall'"
	_echoD "partsmade='$partsmade'"
	_echoD "parts2do='$parts2do'"

	_echo "Part already made :"
	_echoT "$partsmade"
	PS3="Write your choice : "
	select _PART in quit $parts2do
	do
		case "$_PART" in
			quit)
				break
				;;
			postfix) # ovh vz lxd
				_source ${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install
				;;
			tuleap) # ovh vz lxd
				_source ${_PATH_BASE_SUB}/${S_RELEASE}-${_PART}.install
				;;
			*)
				_echoE "Wrong option: '$_PART'"
				;;
		esac
		break
	done

done

_exit


<<keep

# wipe free disk space

file=/tmp/test
paths="$(df -l |grep "^/dev.*" |sed "s|^.* \([^ ]*\)$|\1|" | sed "/save/d")"
#paths='/ /var'
echo '#!/bin/bash' > $file
for path in $paths
do
        echo "# $path" >> $file
        echo "(echo \"start $path - pid $! - \$(date +\"%T - %N\")\"; cd $path; dd if=/dev/zero of=free2zero; rm free2zero; echo \"end $path \$(date +\"%T - %N\")\"; exit) &" >> $file
done
chmod +x $file
#cat $file
sh $file

#watch -dn10 df

keep


<<keep

# rescue

HOST=ns398616

DIRSAVE=/dev/mapper/vg-save
RELEASE=debian7

apt-get install -y

DATE=$(date +"%Y%m%d")
VD="/dev/sda"
VDP=${VD#/}; VDP=${VDP//\//_}
DIR="/mnt/save"
DIRBCK="$DIR/backup/rescue"
#VOLS="/dev/sda1 /dev/mapper/vg-lvvar /dev/mapper/vg-lvvz /dev/mapper/vg-lvvzdump /dev/mapper/vg-lvlibvirt"
VOLS=$(blkid |grep "^/dev/.*TYPE=\"ext4\".*" |sed "s|^\([^:]*\):.*$|\1|" |sed "/save/d")

#apt-get install -y lsb-release
#RELEASE=$(lsb_release -sc)
whiteb='\e[1;1m'; redb='\e[1;31m'; greenb='\e[1;32m'; blueb='\e[1;34m'; magentab='\e[1;35m'; yellowb='\e[1;33m'; cclear='\e[0;0m'

blkid
echo $VOLS


# mount
! [ -d $DIR ] && mkdir -p $DIR
mount $DIRSAVE /mnt/save
! [ -d $DIRBCK ] && mkdir -p $DIRBCK
cd $DIRBCK

sudo bs=446 count=1 if=/dev/sda of="$HOST-${RELEASE}-${DATE}-mbr.iso"
sudo bs=512 count=1 if=/dev/sda of="$HOST-${RELEASE}-${DATE}-mbrpt.iso"

for VOL in $VOLS
do
	echo -e "${blueb}************************  $VOL${cclear}"
	VOLNAME=${VOL#/dev/}; VOLNAME=${VOLNAME//\//_}
	e2fsck -f $VOL
	SIZE=$(fdisk -l /dev/sda1 |grep "^Disk.*" |sed "s/^Disk .*, \([0-9]*\) bytes, .*$/\1/")
	dcfldd bs=4096 if=$VOL | gzip > $HOST-$RELEASE-$DATE-$VOLNAME.iso.gz
done

# umount
cd
umount /mnt/save

reboot

keep


<<keep

# restore rescue

DIR="/mnt/save"
DIRBCK="$DIR/backup/rescue"
# mount
! [ -d $DIR ] && mkdir -p $DIR
mount /dev/mapper/vg-lvsave /mnt/save
! [ -d $DIRBCK ] && mkdir -p $DIRBCK
cd $DIRBCK

dcfldd bs=512 count=1 if=ns398616-debian7-20160306-mbrpt.iso of=/dev/sda
gzip -c ns398616-debian7-20160306-sda1.iso.gz | bs=4096 of=/dev/sda1
gzip -c ns398616-debian7-20160306-mapper_vg-lvvar.iso.gz | bs=4096 of=/dev/mapper/vg-lvvar

keep

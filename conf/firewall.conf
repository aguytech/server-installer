# configuration file for service firewall
# /etc/init.d/firewall

######################## GLOBAL FUNCTIONS
S_TRACE=debug

S_GLOBAL_FUNCTIONS="${S_GLOBAL_FUNCTIONS:-/usr/local/bs/inc-functions.sh}"
! . "$S_GLOBAL_FUNCTIONS" && echo -e "[error] - Unable to source file '$S_GLOBAL_FUNCTIONS' from '${BASH_SOURCE[0]}'" && exit 1

########################  SELECT

# Give a try if true. (true or false)
DRYRUN=false
# log dropped packets if true. (true or false)
_LOG=true
# Nat external IP to VM for mariadb if true. (true or false)
_NAT_SGBD=false
# use fail2ban if true. (true or false)
_FAIL2BAN=false

########################  DATA

# get values of HOST network: s_name  s_ip  s_user  s_port  s_fqdn  s_vm
eval ${S_CLUSTER[$HOSTNAME]}
# get values of VM network: s_inet  s_cidr  s_base
eval ${S_HOST_VM_ETH[default]}

# interface for external connections
_ETH=${S_ETH}
# interface for VM
_ETH_VM=${s_inet}
# IP base for VM interface
_IP_VM_BASE=${s_base}
# CIDR formats of IPs VM interface
_IP_VM_CIDR=${s_cidr}

IS_FAIL2BAN=$(type fail2ban-server >/dev/null 2>&1 && echo true || echo false)
IS_LXD=$(type lxc >/dev/null 2>&1 && echo true || echo false)

########################  GENERAL

# IPs services
declare -A _IP_SRV
for str in ${!S_SERVICE[*]}; do
	_IP_SRV[$str]=${s_base}.${S_SERVICE_BITS[$str]}
done
_
# OVH
_IPS_OVHICMP="92.222.184.0/24 92.222.185.0/24 92.222.186.0/24 167.114.37.0/24"
_IPS_OVHICMP+="213.186.45.4 213.251.184.9 37.59.0.235 8.33.137.2 213.186.33.13  213.186.50.98"
_IPS_OVHICMP+="37.187.231.251 151.80.231.244/29 213.186.33.62 "
_IPS_OVHICMP+="${_IPTHIS%.*}.250 ${_IPTHIS%.*}.251"
# port for OVH RTM
_PORT_OVHRTM="6100:6200"

# IPs of others ovh hosts
_IPS_HOSTS="$(grep ^S_CLUSTER ${S_GLOBAL_CONF}|grep -v ${HOSTNAME}|grep 's_type=ovh'|sed -n 's|.*s_ip=\([0-9\.]\+\).*|\1|p'|xargs)"
# _IPS_AUTH see inc-functions.sh
_IPS_ADMIN="${S_IPS_ADMIN}"

# SSH, If empty no IP allowed port allowed. for all : 0/0
_IPS_SSH_IN="0/0"
_PORTS_SSH="513:65535"
_PORT_SSH=${s_port}

# RSYSLOG
# client rsyslog, if empty: client not allowed for remote connection, 0/0 for all ips
_IPS_RSYSLOG="$(grep ^S_CLUSTER ${S_GLOBAL_CONF}|grep -v ${HOSTNAME}|grep 's_type=ovh'|sed -n 's|.*s_ip=\([0-9\.]\+\).*|\1|p'|xargs)"
_PORT_RSYSLOG="${S_RSYSLOG_PORT}"
_PTC_RSYSLOG="${S_RSYSLOG_PTC}"

# ICMP
# client ips, if empty: ping not allowed for remote client, 0/0 for all ips
_IPS_ICMP="${_IPS_AUTH}  ${_IPS_HOSTS}"

# DNS
# ips client for input requests, 0/0 for all ips access, if empty all drop input requests
_IPS_DNS=""
_PORT_DNS="53"

# NTP
# ips client for input requests, 0/0 for all ips access, if empty all drop input requests
_IPS_NTP=""
_PORT_NTP="123"

########################  PROXY

# HAPROXY
# remote admin access for HAPROXY statistics
_IPS_HAPROXY="0/0" # "${_IPS_AUTH}"
_PORT_HAPROXY="${S_HAPROXY_STATS_PORT} 1778"

########################  HTTP

# HTTP
# port available for http ex: 80 443 8080
_PORTS_HTTP="80 443"
# number of request (x/s x/m x/h x/d)
_LIMIT_HTTP="" # "50/s"
# burst limit for request (enable if limit is non empty)
_LIMIT_BURST_HTTP="200"
# limit to DROP parallels connections over this limit
_CONMAX_HTTP="" # "60"

########################  SGBD

# MariaDB
# client ips. If empty none. for all : 0/0
_IPS_MARIADB="" # "${_IPS_ADMIN}"
_PORTS_MARIADB="" # "1024:65535"
_PORT_MARIADB="${S_DB_MARIA_PORT}"

# PgSQL
# client ips. If empty none. for all : 0/0
_IPS_PGSQL="" # "${_IPS_ADMIN}"
_PORTS_PGSQL="1024:65535"
_PORT_PGSQL="${S_DB_PGSQL_PORT}"

########################  MAIL

# Mail
# limit for a number of request (x/s x/m x/h x/d)
_LIMIT_MAIL="" # "5/s"
# time to decrement limit-- (enable if limit is non empty)
_LIMIT_BURST_MAIL="100"
# "25 465 587 143 993 4190" # smtp 25 / smtp-ssl 465 / smtp-tls 587 / imap 143 / imaps 993 / sieve 4190 / pop 110 / pops 995 / spamassassin 783 / razor 2703
_PORTS_MAIL="25 465 587 143 993 4190"

# RSPAMD
# remote admin access for RSPAMD statistics
_IPS_RSPAMD="${_IPS_ADMIN}"
_PORTS_RSPAMD="11334" # "${S_RSPAMD_PORT[*]}"

########################  VM

# Allow prerouting for cts. Array contains ctid in key & a list of couple of ports for values. the couple of ports :in-out is separated by a score.
# ex __foo[ctid]='porthost-portvm porthost-portvm'
# ctid: last range of VM IP
# portin: port for input on host network
# portout: port for input on VM network
# see S_HOST_PORT_PRE_*

# Nat for IPs admistration only
declare -A _VM_NAT_IPS
#_VM_NAT_IPS[14]='1780-11334 1781-11333'

# others NAT for all IPs
declare -A _VM_NAT
# SSH
#_VM_NAT[10]='2010-22 4010-22'
#_VM_NAT[12]='2012-22'
#
# HTTP
#_VM_NAT[16]='8190-80 9190-443'
#_VM_NAT[18]='8210-80 9210-443'
#_VM_NAT[20]='80-80 443-443'
#
# MARIADB
#_VM_NAT[120]='8120-3306 10120-3306'
#_VM_NAT[121]='8121-3306'
#_VM_NAT[221]='8221-3306'

#!/bin/bash
#
# write by Aguy

_PART=conf-init
echo -e "${blueb}==========================================  ${_PART}${cclear}"


########################  DATA

echo -e "${blueb}----------  data${cclear}"

S_PATH_INSTALL=`dirname "$(readlink -e "${BASH_SOURCE[0]}")"`
S_PATH_INSTALL_CONF=${S_PATH_INSTALL}/conf

file_conf_server=${S_PATH_INSTALL}/conf-server.install
file_install_server=${S_PATH_INSTALL_CONF}/server.conf

[ ${USER} != root ] && _SUDO=sudo


########################  PRE

! [ -d ${S_PATH_SCRIPT} ] && echo -e "${redb}[error] Unable to find path script: '${S_PATH_SCRIPT}'${cclear}" && exit 1

echo -e "${blueb}----------  initialisation${cclear}"

echo -n "unable to find initial configuration, Do you want to do it? (y)/n: "
read answer && [ "${answer}" = n ] && exit


echo -e "${blueb}----------  required files${cclear}"

for file in "${file_conf_server}" "${file_install_server}"; do
	! ${_SUDO} [ -f ${file} ] && echo -e "${redb}[error] unable to find file: '${file}'${cclear}" && exit 1
done


########################  MAIN

echo -e "${blueb}----------  log path${cclear}"

[ -d "${_PATH_LOG}" ] || ${_SUDO} mkdir -p "${_PATH_LOG}"
[ ${USER} != root ] && sudo chown :1000 "${_PATH_LOG}" && sudo chmod g+rw "${_PATH_LOG}"


echo -e "${blueb}----------  paths rights${cclear}"

# install path
path=${_PATH_BASE}
${_SUDO} chown root:root -R ${path}
${_SUDO} chmod g+rw,o-rwx -R ${path}

# scripts path
path=${S_PATH_SCRIPT}
${_SUDO} chown root:root -R ${path}
${_SUDO} chmod g+rw,o-rwx -R ${path}


echo -e "${blueb}----------  conf rights${cclear}"

for path in "${S_PATH_CONF}/ssl/private" "${S_PATH_CONF}/ssl/certs"; do
	! ${_SUDO} [ -d "$path" ] && ${_SUDO} mkdir -p "$path"
done
${_SUDO} find "${S_PATH_CONF}" -type d -exec chmod 770 "{}" \;
${_SUDO} find "${S_PATH_CONF}" -maxdepth 1 -type f -exec chmod 660 "{}" \;
${_SUDO} find "${S_PATH_CONF}/ssl/private" -type d -exec chmod 700 "{}" \;
${_SUDO} find "${S_PATH_CONF}/ssl/private" -type f -exec chmod 600 "{}" \;
[ -h /server ] || ${_SUDO} ln -s /etc/server /server

if [ ${USER} != root ]; then
	echo -e "${blueb}----------  non root rights${cclear}"
	for path in ${S_PATH_CONF} ${_PATH_BASE} ${S_PATH_SCRIPT}; do
		sudo chown 0:1000 -R "${path}"
	done
	sudo find "${S_PATH_CONF}" -maxdepth 1 -type f -exec chown 0:1000 "{}" \;
fi

echo -e "${blueb}----------  server.conf${cclear}"

[ -f "${S_GLOBAL_CONF}" ] || ${_SUDO} cp -a "${file_install_server}" "${S_GLOBAL_CONF}"

echo "If you want to use a specific 'server.conf' , put this file to '${S_GLOBAL_CONF}'"
echo "cp /usr/local/install/conf/server.conf-ovh /etc/server/server.conf"
echo -n "and valid to continue : " && read _ANSWER
. ${S_GLOBAL_CONF}

echo -e "${blueb}----------  install files${cclear}"

files="${S_FILE_INSTALL_CONF} ${S_FILE_INSTALL_DONE}"
for file in ${files}; do
	! [ -f "${file}" ] && _touchr "${file}"
done

. ${S_FILE_INSTALL_CONF}


echo -e "${blueb}----------  fd open${cclear}"

_redirect


_echoT "------------------  server settings"

. "${file_conf_server}"


########################  END

_PART=conf-init
_echoT "===================== ${_PART} end"
_partadd "${_PART}" "${S_FILE_INSTALL_DONE}"

#!/bin/bash
#
# write by Aguy

_PART=conf-init
echo -e "${blueb}==========================================  ${_PART}${cclear}"


####################################  DATA

S_PATH_INSTALL=`dirname "$(readlink -e "${BASH_SOURCE[0]}")"`
S_PATH_INSTALL_CONF="${S_PATH_INSTALL}/conf"

file_conf_server="${S_PATH_INSTALL}/conf-server.install"
file_install_server="${S_PATH_INSTALL_CONF}/server.conf"


####################################  PRE

# exit
[ "$USER" != root ] && echo -e "${redb}You have to run this script under root privileges${cclear}" && exit 1

echo -e "${blueb}----------  initialisation${cclear}"

echo -n "unable to find initial configuration, Do you want to do it? (y)/n: "
read answer
[ "$answer" = "n" ] && exit


echo -e "${blueb}----------  required files${cclear}"

for file in "${file_conf_server}" "${file_install_server}"; do
	! [ -f ${file} ] && echo -e "${redb}error - unable to find file: '${file}'${cclear}" && exit 1
done


####################################  MAIN

echo -e "${blueb}----------  log path${cclear}"

[ -d "$_PATH_LOG" ] && mkdir -p "$_PATH_LOG"


echo -e "${blueb}----------  ssl paths${cclear}"

for path in "${S_PATH_CONF}/ssl/private" "${S_PATH_CONF}/ssl/certs"; do
	! [ -d "$path" ] && mkdir -p "$path"
done
find "${S_PATH_CONF}" -type d -exec chmod 750 -R "{}" \;
find "${S_PATH_CONF}" -type f -exec chmod 640 -R "{}" \;
find "${S_PATH_CONF}/ssl/private" -type d -exec chmod 700 -R "{}" \;
find "${S_PATH_CONF}/ssl/private" -type f -exec chmod 600 -R "{}" \;


echo -e "${blueb}----------  server.conf${cclear}"

_keepmvts ${S_GLOBAL_CONF}
cp -a "${file_install_server}" "${S_GLOBAL_CONF}"

echo "If you want to use a specific 'server.conf' , put this file to '${S_GLOBAL_CONF}' and valid to continue : " && read _ANSWER
. "$S_GLOBAL_CONF"

echo -e "${blueb}----------  install files${cclear}"

files="${S_FILE_INSTALL_CONF} ${S_FILE_INSTALL_DONE}"
for file in ${files}; do
	! [ -f "${file}" ] && touch "${file}"
done

. ${S_FILE_INSTALL_CONF}


echo -e "${blueb}----------  fd open${cclear}"

_redirect


_echoT "----------  server settings"

if ! [ -f "${file_conf_server}" ]; then
	_echoe "unable to find file '${file_conf_server}' from ${BASH_SOURCE[0]}"
	exit 1
fi
. "${file_conf_server}"


####################################  GLOBAL

_echoT "----------  source ${S_GLOBAL_CONF}"

. "${S_GLOBAL_CONF}"


file_env="${S_PATH_SCRIPT_CONF}/env"
_echoT "----------  source ${file_env}"

. "${file_env}"


####################################  END

_PART=conf-init
_echoT "---------- ${_PART} end"
_eval _partadd "${_PART}" "${S_FILE_INSTALL_DONE}"

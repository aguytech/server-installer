#!/bin/bash
#
# write by Aguy

_PART=conf-init
echo -e "${blueb}==========================================  ${_PART}${cclear}"


####################################  DATA

S_PATH_INSTALL=`dirname "$(readlink -e "${BASH_SOURCE[0]}")"`

S_PATH_CONF="/etc/server"
S_PATH_INSTALL_CONF="${S_PATH_INSTALL}/conf"
S_GLOBAL_CONF="${S_PATH_CONF}/server.conf"

S_FILE_INSTALL_CONF="${S_PATH_CONF}/install.conf"
S_FILE_INSTALL_DONE="${S_PATH_CONF}/install.done"

file_conf_server="${S_PATH_INSTALL}/conf-server.install"
file_install_server="${S_PATH_INSTALL_CONF}/server.conf"


####################################  MAIN

# exit
[ "$USER" != root ] && echo -e "${redb}You have to run this script under root privileges${cclear}" && exit 1

echo -e "${blueb}----------  initialisation${cclear}"

echo -n "unable to find initial configuration, Do you want to do it? (y)/n: "
read answer
[ "$answer" = "n" ] && exit


echo -e "${blueb}----------  required files${cclear}"

for file in "$file_conf_server" "$file_install_server"; do
	! [ -f "$file" ] && echo -e "${redb}error - unable to find file: '$file'${cclear}" && exit 1
done


echo -e "${blueb}----------  log path${cclear}"

[ -d "$_PATH_LOG" ] && mkdir -p "$_PATH_LOG"


echo -e "${blueb}----------  ssl paths${cclear}"

for path in "${S_PATH_CONF}/ssl/private" "${S_PATH_CONF}/ssl/certs"; do
	! [ -d "$path" ] && mkdir -p "$path"
done
find "${S_PATH_CONF}" -type d -exec chmod 750 -R "{}" \;
find "${S_PATH_CONF}" -type f -exec chmod 640 -R "{}" \;
find "${S_PATH_CONF}/ssl/private" -type d -exec chmod 700 -R "{}" \;
find "${S_PATH_CONF}/ssl/private" -type f -exec chmod 600 -R "{}" \;


echo -e "${blueb}----------  server.conf${cclear}"

file="${S_PATH_CONF}/server.conf"
[ -e "${file}" ] && cp -a "${file}" "${file}.keep${_SDDATE}"
! [ -f "$file" ] && cp -a "$file_install_server" "$file"
. "$file"


echo -e "${blueb}----------  install files${cclear}"

file="${S_PATH_CONF}/install.conf"
! [ -f "$file" ] && touch "$file"
. "$file"

file="${S_PATH_CONF}/install.done"
! [ -f "$file" ] && touch "$file"


echo -e "${blueb}----------  fd open${cclear}"

_redirect


echo -e "${blueb}----------  server settings${cclear}"

if ! [ -f "${file_conf_server}" ]; then
	echo -e "${redb}error - unable to find file '${file_conf_server}' from ${BASH_SOURCE[0]}${cclear}"
	exit 1
fi
. "${file_conf_server}"


echo -e "${blueb}----------  server settings${cclear}"


_PART=conf-init
_echoT "---------- ${_PART} end"
_eval _partadd "${_PART}" "${S_FILE_INSTALL_DONE}"
